-- phpMyAdmin SQL Dump
-- version 3.3.9
-- http://www.phpmyadmin.net
--
-- Servidor: localhost
-- Tiempo de generación: 15-02-2012 a las 05:57:05
-- Versión del servidor: 5.1.53
-- Versión de PHP: 5.3.4

SET SQL_MODE="NO_AUTO_VALUE_ON_ZERO";

--
-- Base de datos: `api_pos`
--

-- --------------------------------------------------------

--
-- Estructura de tabla para la tabla `argumento`
--

CREATE TABLE IF NOT EXISTS `argumento` (
  `id_argumento` int(11) NOT NULL AUTO_INCREMENT,
  `id_metodo` int(11) NOT NULL,
  `nombre` varchar(100) NOT NULL,
  `descripcion` text NOT NULL,
  `ahuevo` tinyint(1) NOT NULL,
  `tipo` varchar(30) NOT NULL,
  `defaults` varchar(50) NOT NULL,
  PRIMARY KEY (`id_argumento`),
  KEY `id_metodo` (`id_metodo`)
) ENGINE=InnoDB  DEFAULT CHARSET=utf8 AUTO_INCREMENT=13273 ;

--
-- Volcar la base de datos para la tabla `argumento`
--

INSERT INTO `argumento` (`id_argumento`, `id_metodo`, `nombre`, `descripcion`, `ahuevo`, `tipo`, `defaults`) VALUES
(18, 17, 'id_grupo', 'Obtener la lista de sesiones activas para un grupo de usuarios especifico.', 0, 'int', 'null'),
(300, 80, 'id_sucursal', 'Id de la sucursal de la cual su gerencia sera cambiada', 1, 'int', ''),
(301, 80, 'id_gerente', 'Id del nuevo gerente', 1, 'string', ''),
(385, 117, 'id_empresa', 'Id de la empresa de la cual se tomaran sus documentos.', 0, 'int', 'null'),
(386, 117, 'activos', 'Si no se obtiene este valor, se listaran los documentos activos e inactivos. Si su valor es true, mostrara solo los documentos activos, si es false, mostrara solo los documentos inactivos.', 1, 'bool', ''),
(389, 122, 'id_folio', 'Id de la factura a eliminar', 1, 'int', ''),
(392, 124, 'id_venta', 'Id de la venta que se imprimira', 1, 'int', ''),
(393, 124, 'id_impresora', 'Id de la impresora en la que se imprimira', 1, 'int', ''),
(394, 125, 'id_cliente', 'Id del cliente del cual se imprimirán ', 1, 'int', ''),
(399, 130, 'nuevo_reporte', 'JSON a analizar', 1, 'json', ''),
(400, 131, 'id_reporte', 'Id del reporte a revisar.', 1, 'int', ''),
(408, 134, 'id_cliente', 'Id del cliente del cual se listaran sus productos.', 0, 'int', 'null'),
(409, 134, 'orden', 'Valor que determinara el orden de la lista', 0, 'json', 'null'),
(410, 134, 'id_empresa', 'Id de la empresa de la cual se listaran los servicios que han comprado los clientes', 0, 'int', 'null'),
(411, 134, 'id_sucursal', 'Id de la sucursal de la cual se listaran los Servicios que han comprado los clientes', 0, 'int', 'null'),
(677, 121, 'id_folio', 'Id de la factura que se desea imprimir.', 1, 'int', ''),
(678, 123, 'id_cliente', 'Id del cliente al cual se le va a facturar', 1, 'int', ''),
(679, 123, 'id_venta', 'Id de la venta sobre la cual se facturara', 1, 'int', ''),
(848, 46, 'productos', 'Arreglo de objetos que contendrán la información del nuevo producto', 1, 'json', ''),
(1251, 56, 'id_concepto_gasto', 'Id del concepto que ser eliminado', 1, 'int', ''),
(1295, 59, 'id_concepto_ingreso', 'Id del ingreso a eliminar', 1, 'int', ''),
(1314, 72, 'ventas', 'Objeto que contendr la informacin de las ventas as como su detalle.', 0, 'json', 'null'),
(1315, 72, 'compras', 'Objeto que contendr la informacin de las compras as como su detalle.', 0, 'json', 'null'),
(1316, 133, 'id_cliente', 'Id del cliente del cual se listaran sus productos.', 0, 'int', 'null'),
(1317, 133, 'orden', 'Valor que determinara el orden de la lista', 0, 'json', 'null'),
(1318, 133, 'id_empresa', 'Id empresa de la cual se listaran los productos comprados por ese cliente', 0, 'int', 'null'),
(1319, 133, 'id_sucursal', 'Id sucursal de la cual se listaran los productos comprados por ese cliente', 0, 'int', 'null'),
(1331, 119, 'id_documento', 'Id del documento a editar.', 1, 'int', ''),
(1374, 141, 'id_proveedor', 'Id del proveedor que sera eliminado', 1, 'int', ''),
(1422, 144, 'id_servicio', 'Id del servicio que será eliminado', 1, 'int', ''),
(1445, 102, 'productos', 'Objeto que contendra los id de productos como sus cantidades en las que son cargados al vehiculo', 1, 'json', ''),
(1446, 102, 'id_carro', 'Id del carro que sera cargado', 1, 'int', ''),
(1447, 103, 'id_carro', 'Id del carro que se descarga', 1, 'int', ''),
(1448, 103, 'productos', 'Objeto que contendra los productos con sus cantidades', 1, 'json', ''),
(1449, 98, 'id_carro', 'Id del carro a detallar', 1, 'int', ''),
(1450, 105, 'id_carro', 'Carro que sera enrutado.', 1, 'int', ''),
(1451, 105, 'id_sucursal_destino', 'Id de la sucursal destino', 1, 'int', ''),
(1452, 105, 'fecha_salida', 'Fecha en la que se planea que salga carro', 1, 'string', ''),
(1453, 105, 'fecha_llegada_tentativa', 'Fecha tentativa en la que se espera que el carro llegue a su destino.', 1, 'string', ''),
(1454, 145, 'id_carro', 'Id del carro del cual se registra su llegada', 1, 'int', ''),
(1455, 145, 'fecha_llegada', 'Registra la fecha de llegada en caso de que haya pasado un retraso y no se haya  registrado a tiempo la llegada', 0, 'string', 'null'),
(1459, 101, 'codigo', 'Codigo interno del vehiculo', 0, 'string', 'null'),
(1460, 101, 'matricula', 'Matricula del vehiculo', 0, 'string', 'null'),
(1461, 101, 'id_tipo_carro', 'Id del tipo de carro (camioneta, coche, camion)', 1, 'int', ''),
(1462, 101, 'id_marca_carro', 'Id de la marca del vehiculo (Nissan, Mazda)', 1, 'int', ''),
(1463, 101, 'id_modelo_vehiculo', 'Id del modelo del vehiculo', 1, 'int', ''),
(1464, 101, 'kilometros', 'Kilometros recorridos por el vehiculo', 0, 'float', 'null'),
(1465, 101, 'id_localizacion', 'Id de la sucursal en la que se encuentra, se tomara un entero especial para determinar que se encuentra en una ruta.', 1, 'int', ''),
(1466, 101, 'id_estado', 'Id del estado del vehiculo, debera contener [en servicio], [accidentado], [averiado], [baja definitiva], [taller]', 1, 'int', ''),
(1467, 101, 'imagen', 'url del a imagen del vehiculo', 1, 'string', ''),
(1468, 101, 'num_neumaticos', 'Numero de neumaticos del vehiculo', 0, 'int', 'null'),
(1469, 101, 'combustible', 'Cantidad de combustible que tiene el vehiculo', 0, 'float', 'null'),
(1470, 101, 'km_por_litro', 'numero de kilometros que puede trnasitar el vehiculo por un litro de combustible', 0, 'float', 'null'),
(1471, 101, 'ids_empresas', 'Los ids de las empresas a las que este vehiculo pertenece. Si este valor no se pasa, se tomara que el vehiculo pertenece a todas las empresas.', 0, 'json', 'null'),
(1472, 104, 'id_carro_origen', 'Id del carro del cual se mueve la carga', 1, 'int', ''),
(1473, 104, 'id_carro_destino', 'Id del carro al que se mueve la carga', 1, 'int', ''),
(1474, 104, 'productos', 'Productos que se mueve de un carro a otros.', 0, 'json', 'null'),
(1495, 147, 'nombre_tipo', 'Nombre del tipo de carro ', 1, 'string', ''),
(1496, 147, 'activo', 'SI este tipo de carro sera valido para seleccionarlo o no', 0, 'bool', 'true'),
(1497, 149, 'nombre_modelo', 'Modelo del carro (98,99,2010,etc)', 1, 'string', ''),
(1498, 149, 'activo', 'Si el modelo estara activo para su seleccion', 0, 'bool', 'true'),
(1499, 150, 'id_modelo_carro', 'Id del modelo de carro', 1, 'int', ''),
(1500, 150, 'nombre_modelo_carro', 'Nombre del modelo del carro ( 99,2010, etc)', 1, 'string', ''),
(1501, 150, 'activo', 'Si el modelo sera activo para seleccionarse', 0, 'bool', 'true'),
(1502, 151, 'nombre_marca', 'Nombre de la marca del carro ( Mazda, Nissan, etc)', 1, 'string', ''),
(1503, 151, 'activo', 'Si la marca estara disponible para su seleccion', 0, 'bool', 'null'),
(1812, 159, 'id_cliente', 'Id del cliente a desactivar como consignatario', 1, 'int', ''),
(1902, 162, 'id_inspeccion', 'Id de la inspeccion a cambiar de fecha', 1, 'int', ''),
(1903, 162, 'nueva_fecha', 'Nueva fecha en que se llevara acabo la inspeccion', 1, 'string', ''),
(1906, 163, 'id_inspeccion', 'Id de la inspeccion a cancelar', 1, 'int', ''),
(2564, 175, 'id_categoria', 'Id de la categoria a desactivar', 1, 'int', ''),
(2856, 54, 'nombre', 'la justificacion que aparecera despues de la leyenda "gasto por concepto de"', 1, 'string', ''),
(2857, 54, 'descripcion', 'Descripcion larga del concepto de gasto', 0, 'string', 'null'),
(2858, 54, 'monto', 'Monto fijo del concepto de gasto', 0, 'float', 'null'),
(2863, 57, 'descripcion', 'Descripcion larga de este concepto de ingreso', 0, 'string', 'null'),
(2864, 57, 'nombre', 'Justificacion que aparecer despus de la leyenda "ingreso por concepto de"', 1, 'string', ''),
(2865, 57, 'monto', 'Monto fijo del concepto de ingreso', 0, 'float', 'null'),
(3000, 195, 'folio', 'Folio de la entrega', 0, 'string', 'null'),
(3001, 195, 'peso_destino', 'Peso del embarque en el destino', 1, 'float', ''),
(3002, 195, 'fecha_origen', 'Fecha en la que se envo el embarque', 1, 'string', ''),
(3003, 195, 'numero_de_viaje', 'Numero del viaje', 0, 'string', 'null'),
(3004, 195, 'peso_origen', 'Peso del embarque en el origen', 1, 'float', ''),
(3005, 195, 'arpillas', 'Nmero de arpillas enviadas', 1, 'float', ''),
(3006, 195, 'peso_por_arpilla', 'Peso promedio por arpilla', 1, 'float', ''),
(3007, 195, 'productor', 'Nombre del productor', 0, 'string', 'null'),
(3008, 195, 'merma_por_arpilla', 'La merma que resulto por arpilla', 1, 'float', ''),
(3009, 195, 'total_origen', 'Valor del embarque segun el origen', 0, 'float', 'null'),
(3010, 195, 'id_venta', 'Id de la venta relacionada con esta entrega', 1, 'int', ''),
(3011, 92, 'id_compra', 'Id de la compra de la que se detallaran las compras por arpilla', 1, 'int', ''),
(3012, 196, 'id_venta', 'Id de la venta de la cual se listaran las ventas por arpilla', 1, 'int', ''),
(3013, 90, 'total_origen', 'Lo que vale el embarque segun el proveedor', 1, 'float', ''),
(3014, 90, 'merma_por_arpilla', 'Merma por arpilla', 1, 'float', ''),
(3015, 90, 'productor', 'Nombre del productor', 0, 'string', 'null'),
(3016, 90, 'peso_por_arpilla', 'peso por arpilla', 1, 'float', ''),
(3017, 90, 'arpillas', 'numero de arpillas recibidas', 1, 'float', ''),
(3018, 90, 'peso_recibido', 'peso que se recibi en kg', 1, 'float', ''),
(3019, 90, 'numero_de_viaje', 'numero de viaje', 0, 'string', 'null'),
(3020, 90, 'folio', 'folio de la remision', 0, 'string', 'null'),
(3021, 90, 'peso_origen', 'Peso del embarque en el origen.', 0, 'float', 'null'),
(3022, 90, 'id_compra', 'Id de la compra a la que pertenece esta compra por arpilla', 1, 'int', ''),
(3023, 90, 'fecha_origen', 'Fecha de cuando salio el embarque del proveedor', 0, 'string', 'null'),
(3030, 198, 'id_compra', 'Id de la compra a detallar', 1, 'int', ''),
(3068, 160, 'monto', 'monto que sera abonado a la inspeccion', 1, 'float', ''),
(3069, 160, 'id_inspeccion', 'Id de la inspeccion', 1, 'int', ''),
(3070, 160, 'id_caja', 'Id de la caja a la que se le abona', 1, 'int', ''),
(3071, 161, 'fecha_revision', 'Fecha en que se hara la revision.', 1, 'string', ''),
(3072, 161, 'id_consignacion', 'Id de la consignacion a la que se le hara la revision', 1, 'int', ''),
(3073, 161, 'id_inspector', 'Id del usuario al que se le asignara esta inspeccion', 0, 'int', 'null'),
(3074, 94, 'id_cliente', 'Id del cliente que sera el consignatario', 1, 'int', ''),
(4546, 231, 'id_clasificacion_proveedor', 'Id de la clasificacion de proveedor a desactivar', 1, 'int', ''),
(4643, 234, 'id_clasificacion_servicio', 'Id de la clasificacion de servicio', 1, 'int', ''),
(4718, 235, 'id_orden_de_servicio', 'Id de la orden del servicio a cancelar', 1, 'int', ''),
(4719, 235, 'motivo_cancelacion', 'Motivo de la cancelacion', 0, 'string', 'null'),
(4731, 110, 'id_orden', 'Id de la orden a revisar', 1, 'int', ''),
(4827, 240, 'id_caja', 'Id de la caja a eliminar', 1, 'int', ''),
(4864, 241, 'id_sucursal', 'Id de la sucursal a desactivar', 1, 'int', ''),
(5134, 244, 'id_paquete', 'Id del paquete a desactivar', 1, 'int', ''),
(5135, 245, 'id_paquete', 'Id del paquete a activar', 1, 'int', ''),
(5141, 247, 'id_paquete', 'Id del paquete a visualizar sus detalles', 1, 'int', ''),
(5358, 254, 'nombre', 'Nombre del billete, puede ser el valor en texto, "cincuenta", "cien", etc.', 1, 'string', ''),
(5359, 254, 'valor', 'Valor del billete', 1, 'int', ''),
(5360, 254, 'id_moneda', 'Id de la moneda a la que pertence el billete', 1, 'int', ''),
(5361, 254, 'foto_billete', 'Url de la foto del billete', 0, 'string', 'null'),
(5367, 256, 'id_billete', 'Id del billete a desactivar', 1, 'int', ''),
(5370, 258, 'nombre', 'Nombre de la moneda', 1, 'string', ''),
(5371, 258, 'simbolo', 'Simbolo de la moneda', 1, 'string', ''),
(5375, 260, 'id_moneda', 'Id de la moneda a desactivar', 1, 'int', ''),
(5584, 188, 'id_abono', 'Id del abono a cancelar', 1, 'int', ''),
(5585, 188, 'motivo_cancelacion', 'Motivo por el cual se realiza la cancelacion', 0, 'string', 'null'),
(5586, 188, 'compra', 'Si el abono a eliminar es a una compra o no', 0, 'bool', 'null'),
(5587, 188, 'venta', 'Si el abono a eliminar es a una venta o no', 0, 'bool', 'null'),
(5588, 188, 'id_caja', 'Id de la caja a la que ira el monto del abono cancelado. Solo se tomara en cuenta si la compra, venta o prestamo no ha sido cancelada antes.', 0, 'int', 'null'),
(5589, 188, 'prestamo', 'Si el prestamo a eliminar es a un prestamo o no', 0, 'bool', 'null'),
(5590, 188, 'billetes', 'Si la caja que ha sido pasada para depositar el monto lleva un control de billetes, se necesitan pasar los billetes que seran almacenados en la misma', 0, 'json', 'null'),
(5736, 191, 'cancelado', 'Si este valor no es obtenido, se listaran los gastos tanto cancelados como no cancelados. Si es true, se listaran solo los gastos cancelados, si es false, se listaran solo los gastos que no han sido cancelados', 0, 'bool', 'null'),
(5737, 191, 'id_sucursal', 'Id de la sucursal de la cual se listaran sus gastos', 0, 'int', 'null'),
(5738, 191, 'fecha_final', 'Se listaran los gastos cuya fecha de gasto sea menor a esta fecha', 0, 'string', 'null'),
(5739, 191, 'fecha_inicial', 'Se listaran los gastos cuya fecha de gasto sea mayor a esta fecha', 0, 'string', 'null'),
(5740, 191, 'id_caja', 'Id de caja de la cual se listaran los gastos que ha financiado', 0, 'int', 'null'),
(5741, 191, 'id_concepto_gasto', 'Se listaran solo los gastos que tengan como concepto este id', 0, 'int', 'null'),
(5742, 191, 'id_orden_servicio', 'Se listaran los gastos que pertenezcan solamente a esta orden de servicio', 0, 'int', 'null'),
(5743, 191, 'id_usuario', 'Id del usuario del cual se listaran los gastos que ha registrado', 0, 'int', 'null'),
(5744, 191, 'id_empresa', 'Id de la empresa de la cual se listaran sus gastos', 0, 'int', 'null'),
(5745, 191, 'monto_minimo', 'Se listaran los gastos cuyo monto sea mayor a este valor', 0, 'float', 'null'),
(5746, 191, 'monto_maximo', 'Se listaran los gastos cuyo monto sea menor a este valor', 0, 'float', 'null'),
(5747, 191, 'orden', 'Nombre de la columna por la cual se ordenara la lista', 0, 'string', 'null'),
(5748, 191, 'fecha_actual', 'Verdader si se listaran los gastos del di ade hoy', 0, 'bool', 'null'),
(5786, 55, 'monto', 'monto fijo del concepto de gasto', 0, 'float', 'null'),
(5787, 55, 'nombre', 'Justificacion del concepto de gasto que aparecera despues de la leyenda "gasto por concepto de"', 0, 'string', 'null'),
(5788, 55, 'descripcion', 'Descripcion larga del concepto de gasto', 0, 'string', 'null'),
(5789, 55, 'id_concepto_gasto', 'Id del concepto de gasto a modificar', 1, 'int', ''),
(5797, 58, 'nombre', 'Justificacion que aparecera despues de la leyenda "ingreso por concepto de"', 0, 'string', 'null'),
(5798, 58, 'descripcion', 'Descripcion larga del concepto de ingreso', 0, 'string', 'null'),
(5799, 58, 'monto', 'Si este concepto tiene un monto fijo, se debe mostrar aqui. Si no hay un monto fijo, dejar esto como null.', 0, 'float', 'null'),
(5800, 58, 'id_concepto_ingreso', 'Id del concepto de ingreso a modificar', 1, 'int', ''),
(5886, 164, 'id_consignacion', 'Id de la consignacion a editar', 1, 'int', ''),
(5887, 164, 'productos', 'Objeto que contendra los ids de los productos y sus cantidades que ahora tendra esta consignacion', 1, 'json', ''),
(5888, 164, 'agregar', 'Si estos productos seran agregados a la consignacion o seran quitados de la misma.', 1, 'bool', ''),
(5889, 255, 'id_billete', 'Id del billete a editar', 1, 'int', ''),
(5890, 255, 'nombre', 'Nombre del billete, valor en texto, "cincuenta", "cien", etc', 0, 'string', 'null'),
(5891, 255, 'valor', 'Valor del billete', 0, 'int', 'null'),
(5892, 255, 'foto_billete', 'Url de la foto del billete', 0, 'string', 'null'),
(5893, 255, 'id_moneda', 'Id de la moneda a la que pertenece el billete', 0, 'int', 'null'),
(5894, 259, 'id_moneda', 'Id de la moneda a editar', 1, 'int', ''),
(5895, 259, 'nombre', 'Nombre de la moneda', 0, 'string', 'null'),
(5896, 259, 'simbolo', 'Simbolo de la moneda', 0, 'string', 'null'),
(6157, 262, 'id_unidades', 'Id de la unidad equivalente, en el ejemplo es la libra', 1, 'int', ''),
(6158, 262, 'equivalencia', 'Valor del coeficiente de la segunda unidad, es decir, las veces que cabe la segunda unidad en la primera', 1, 'float', ''),
(6159, 262, 'id_unidad', 'Id de la unidad. Esta unidad es tomada con coeficiente 1 en la ecuacion de, en el ejemplo es el kilogramo equivalencia', 1, 'int', ''),
(6160, 263, 'id_unidad', 'Id de la unidad, en el ejemplo son kilogramos', 1, 'int', ''),
(6161, 263, 'id_unidades', 'Id de la segunda unidad, en el ejemplo son libras', 1, 'int', ''),
(6162, 263, 'equivalencia', 'La nueva equivalencia que se pondra entre los dos valores, en el ejemplo es 2.204', 1, 'float', ''),
(6164, 264, 'orden', 'Nombre de la columna de la tabla por la cual se ordenara la lista', 0, 'string', 'null'),
(6165, 265, 'id_unidad', 'En el ejemplo es el kilogramo', 1, 'int', ''),
(6166, 265, 'id_unidades', 'En el ejemplo son las libras', 1, 'int', ''),
(6251, 146, 'id_tipo_carro', 'Id del tipo de carro (camioneta, coche, camion)', 0, 'int', 'null'),
(6252, 146, 'id_marca_carro', 'Id de la marca del vehiculo (Nissan, Mazda)', 0, 'int', 'null'),
(6253, 146, 'id_modelo_vehiculo', 'Id del modelo del vehiculo', 0, 'int', 'null'),
(6254, 146, 'id_localizacion', 'Id de la sucursal en la que se encuentra, se tomara un entero especial para determinar que se encuentra en una ruta.', 0, 'int', 'null'),
(6255, 146, 'id_estado', 'Id del estado del vehiculo, debera contener [en servicio], [accidentado], [averiado], [baja definitiva], [taller]', 0, 'int', 'null'),
(6256, 146, 'imagen', 'url del a imagen del vehiculo', 0, 'string', 'null'),
(6257, 146, 'codigo', 'Codigo interno del vehiculo', 0, 'string', 'null'),
(6258, 146, 'matricula', 'Matricula del vehiculo', 0, 'string', 'null'),
(6259, 146, 'kilometros', 'Kilometros recorridos por el vehiculo', 0, 'float', 'null'),
(6260, 146, 'num_neumaticos', 'Numero de neumaticos del vehiculo', 0, 'int', 'null'),
(6261, 146, 'combustible', 'Cantidad de combustible que tiene el vehiculo', 0, 'float', 'null'),
(6262, 146, 'km_por_litro', 'numero de kilometros que puede trnasitar el vehiculo por un litro de combustible', 0, 'float', 'null'),
(6263, 146, 'ids_empresas', 'Los ids de las empresas a las que este vehiculo pertenece. Si este valor no se pasa, se tomara que el vehiculo pertenece a todas las empresas.', 0, 'json', 'null'),
(6264, 146, 'id_carro', 'Id del carro a editar', 1, 'int', ''),
(6265, 152, 'id_marca_carro', 'Id de la marca que sera editada', 1, 'int', ''),
(6266, 152, 'nombre_marca', 'Nombre de la marca del  carro', 0, 'string', 'null'),
(6267, 152, 'activo', 'Si la marca estara habilitada para su seleccion', 0, 'bool', 'true'),
(6268, 148, 'id_tipo_carro', 'Id del tipo de carro a editar', 1, 'int', ''),
(6269, 148, 'nombre_tipo_carro', 'Nombre del tipo de carro', 0, 'string', 'null'),
(6270, 148, 'activo', 'Si este carro va a estar activo para su seleccion', 0, 'bool', 'true'),
(6271, 60, 'orden', 'Nombre de la columna mediante la cual se ordenara la lista', 0, 'string', 'null'),
(6272, 60, 'activo', 'Si este valo no es obtenido, se listaran tanto activos como inactivos. Si es verdadero, se listaran solo los activos, si es falso, se listaran solo los inactivos', 0, 'bool', 'null'),
(6280, 154, 'monto', 'Monto del ingreso en caso de que no este contemplado por el concepto de ingreso o que sea diferente', 0, 'float', 'null'),
(6281, 154, 'id_sucursal', 'Id de la caja a la que pertenece este ingreso', 0, 'int', 'null'),
(6282, 154, 'id_concepto_ingreso', 'Id del concepto al que hace referencia el ingreso', 0, 'int', 'null'),
(6283, 154, 'id_caja', 'Id de la caja en la que se registra el ingreso', 0, 'int', 'null'),
(6284, 154, 'fecha_ingreso', 'Fecha del ingreso', 1, 'string', ''),
(6285, 154, 'folio', 'Folio de la factura del ingreso', 0, 'string', 'null'),
(6286, 154, 'nota', 'Nota del ingreso', 0, 'string', 'null'),
(6287, 154, 'id_empresa', 'Id de la empresa a la que pertenece este ingreso', 1, 'int', ''),
(6288, 154, 'descripcion', 'Descripcion del ingreso en caso de no este contemplado en la lista de conceptos de ingreso', 0, 'string', 'null'),
(6289, 154, 'billetes', 'Ids de los billetes con sus cantidades en las que ingresaran a la caja en caso de que la caja lleve control de billetes', 0, 'json', 'null'),
(6300, 190, 'id_gasto', 'Id del gasto a eliminar', 1, 'int', ''),
(6301, 190, 'motivo_cancelacion', 'Motivo por el cual se realiza la cancelacion', 0, 'string', 'null'),
(6302, 190, 'id_caja', 'Id de la caja a la que regresara el dinero del gasto cancelado', 0, 'int', 'null'),
(6303, 190, 'billetes', 'Ids de los billetes con sus cantidades en caso de que la caja lleve control de los billetes', 0, 'json', 'null'),
(6304, 66, 'id_concepto_ingreso', 'Id del concepto del ingreso', 0, 'int', 'null'),
(6305, 66, 'descripcion', 'Descripciond el ingreso en caso de que no se encentre en la lista de conceptos.', 0, 'string', 'null'),
(6306, 66, 'folio', 'Folio de la factura generada por el ingreso', 0, 'string', 'null'),
(6307, 66, 'fecha_ingreso', 'Fecha que el usuario selecciona en el sistema, a la cual le quiere asignar el ingreso.', 0, 'string', 'null'),
(6308, 66, 'nota', 'Informacion adicional del ingreso', 0, 'string', 'null'),
(6309, 66, 'id_ingreso', 'Id del ingreso que se editar', 1, 'int', ''),
(6310, 63, 'folio', 'Folio de la factura de ese gasto', 0, 'string', 'null'),
(6311, 63, 'fecha_gasto', 'Fecha que el usuario selecciona en el sistema, a la cual le quiere asignar el gasto.', 0, 'string', 'null'),
(6312, 63, 'id_gasto', 'Id que hace referencia a este gasto', 1, 'int', ''),
(6313, 63, 'descripcion', 'Descripcion del gasto en caso de que no este en la lista de conceptos.', 0, 'string', 'null'),
(6314, 63, 'nota', 'Informacion adicinal sobre el gasto', 0, 'string', 'null'),
(6315, 63, 'id_concepto_gasto', 'Id del concepto del gasto', 0, 'int', 'null'),
(6365, 69, 'id_venta', 'Id de la venta a la que se le abona', 0, 'int', 'null'),
(6366, 69, 'nota', 'Nota del abono', 0, 'string', 'null'),
(6367, 69, 'tipo_pago', 'JSON con la informacion que describe el tipo de pago, si es con cheque, en efectivo o con tarjeta', 1, 'json', ''),
(6368, 69, 'id_deudor', 'Id del usuario o la sucursal que realiza el abono, las sucursales seran negativas.En el caso de las compras, este campo sera el receptor, y el deudor sera tomado del sistema. ', 1, 'int', ''),
(6369, 69, 'monto', 'monto abonado de la sucursal', 1, 'float', ''),
(6370, 69, 'id_prestamo', 'Id del prestamo al que se le esta abonando', 0, 'int', 'null'),
(6371, 69, 'cheques', 'Se toma el nombre del banco, el monto y los ultimos cuatro numeros del o los cheques usados para este abono', 0, 'json', 'null'),
(6372, 69, 'id_compra', 'Id de la compra a la que se abona', 0, 'int', 'null'),
(6373, 69, 'billetes', 'Ids de los billetes y sus cantidades que se reciben en caso de que la caja lleve un control de billetes', 0, 'json', 'null'),
(6385, 193, 'fecha_actual', 'verdaderi si solo se listaran los ingresos del dia de hoy', 0, 'bool', 'null'),
(6386, 193, 'monto_minimo', 'Se listaran los ingresos cuyo monto sea mayor a este valor', 0, 'float', 'null'),
(6387, 193, 'id_usuario', 'Id del usuario del cual se listaran los ingresos que ha registrado', 0, 'int', 'null'),
(6388, 193, 'cancelado', 'Si este valor no es obtenido, se listaran tanto ingresos cancelados como no cancelados, si es true, solo se listaran los ingresos cancelados, si es false, se listaran solo los ingresos no cancelados', 0, 'bool', 'null'),
(6389, 193, 'monto_maximo', 'Se listaran los ingresos cuyo monto sea menor a este valor', 0, 'float', 'null'),
(6390, 193, 'id_concepto_ingreso', 'Se listaran los ingresos que tengan este concepto de ingreso', 0, 'int', 'null'),
(6391, 193, 'id_empresa', 'Id de la empresa de la cual se listaran sus ingresos', 0, 'int', 'null'),
(6392, 193, 'fecha_final', 'Se listaran los ingresos cuya fecha de ingreso sea menor a este valor', 0, 'string', 'null'),
(6393, 193, 'id_sucursal', 'Id de la sucursal de la cual se listaran sus ingresos', 0, 'int', 'null'),
(6394, 193, 'fecha_inicial', 'Se listaran los ingresos cuya fecha de ingreso sea mayor a este valor', 0, 'string', 'null'),
(6395, 193, 'id_caja', 'Id de la caja de la cual se listaran los ingresos que ha recibido', 0, 'int', 'null'),
(6396, 193, 'orden', 'Nombre de la columna mediante la cual se ordenara la lista', 0, 'string', 'null'),
(6411, 199, 'cancelada', 'Si este valor no es obtenido, se listaran tanto compras canceladas como no canceladas. Si es verdadero, se listaran solo las compras canceladas, si su valor es falso, se listaran solo las compras que no lo esten', 0, 'bool', 'null'),
(6412, 199, 'total_maximo', 'Se listaran las compras cuyo total sea menor a este', 0, 'float', 'null'),
(6413, 199, 'saldada', 'Si este valor no es obtenido, se listaran las compras tanto saldadas como las que no lo estan. Si es verdadero se listaran solo las compras saldadas, si es falso, se listaran solo las compras que no lo estan', 0, 'bool', 'null'),
(6414, 199, 'total_minimo', 'Se listaran las compras cuyo total sea mayor a este', 0, 'float', 'null'),
(6415, 199, 'fecha_final', 'Se listaran las compras cuya fecha sea menor a la indicada aqui', 0, 'string', 'null'),
(6416, 199, 'id_sucursal', 'Id de la sucursal de la cual se listaran sus compras', 0, 'int', 'null'),
(6417, 199, 'id_empresa', 'Id de la empresa de la cual se listaran sus compras', 0, 'int', 'null'),
(6418, 199, 'id_caja', 'Se listaran las compras registradas en esta caja', 0, 'int', 'null'),
(6419, 199, 'id_usuario', 'Se listaran las compras que ha registrado este usuario', 0, 'int', 'null'),
(6420, 199, 'tipo_compra', 'Si es a credito, se listaran las compras que sean a credito, si es de contado, se listaran las compras de contado', 0, 'string', 'null'),
(6421, 199, 'id_vendedor_compra', 'Se listaran las compras realizadas a este usuario(proveedor), si es sucursal su id sera negativo', 0, 'int', 'null'),
(6422, 199, 'fecha_inicial', 'Se listaran las compras cuya fecha sea mayor a la indicada aqui', 0, 'string', 'null'),
(6423, 199, 'tipo_pago', 'Se listaran las compras pagadas con cheque, tarjeta o efectivo de acuerdo a este valor', 0, 'string', 'null'),
(6424, 199, 'orden', 'Nombre de la columna por la cual se ordenaran las compras', 0, 'string', 'null'),
(6425, 209, 'id_rol', 'Id del rol al que se le asignaran los permisos', 1, 'int', ''),
(6426, 209, 'id_permiso', 'Arreglo de ids de los permisos que seran asignados al rol', 1, 'int', ''),
(6436, 208, 'id_permiso', 'Id del permiso que se le asignaran a este usuario en especial', 1, 'int', ''),
(6437, 208, 'id_usuario', 'Id del usuario al que se le asignara el permiso', 1, 'int', ''),
(6438, 211, 'id_usuario', 'Id del usuario al que se le niegan los permisos', 1, 'int', ''),
(6439, 211, 'id_permiso', 'Id del permiso a quitar de este usuario', 1, 'int', ''),
(6493, 172, 'id_rol', 'Id del grupo a eliminar', 1, 'int', ''),
(6494, 210, 'id_permiso', 'Id del permiso a remover', 1, 'int', ''),
(6495, 210, 'id_rol', 'Id del rol al que se le quitaran los permisos', 1, 'int', ''),
(6497, 171, 'id_usuario', 'Id del usuario a eliminar', 1, 'int', ''),
(6728, 81, 'saldo_real', 'Saldo que hay actualmente en la caja', 1, 'float', ''),
(6729, 81, 'billetes', 'Ids de billetes y sus cantidades encontrados en la caja al hacer el cierre', 0, 'json', 'null'),
(6730, 81, 'id_cajero', 'Id del cajero en caso de que no sea este el que realiza el cierre', 0, 'int', 'null'),
(6731, 81, 'id_caja', 'Id de la caja a cerrar', 1, 'int', ''),
(6743, 182, 'billetes_dejados', 'Ids de billetes dejados en la caja despues de hacer el corte', 0, 'json', 'null'),
(6744, 182, 'billetes_encontrados', 'Ids de billetes encontrados en la caja al hacer el corte', 0, 'json', 'null'),
(6745, 182, 'id_cajero', 'Id del cajero en caso de que no sea este el que realiza el corte', 0, 'int', 'null'),
(6746, 182, 'saldo_real', 'Saldo real encontrado en la caja', 1, 'float', ''),
(6747, 182, 'id_cajero_nuevo', 'Id del cajero que entrara despues de realizar el corte', 0, 'int', 'null'),
(6748, 182, 'id_caja', 'Id de la caja a la que se le hace el corte', 1, 'int', ''),
(6749, 182, 'saldo_final', 'Saldo que se dejara en la caja para que continue realizando sus operaciones.', 1, 'float', ''),
(6976, 266, 'id_rol', 'Se listaran los permisos de este rol', 0, 'int', 'null'),
(6977, 266, 'id_permiso', 'Se listaran los roles que tienen este permiso', 0, 'int', 'null'),
(6978, 268, 'id_usuario', 'Se listaran los permisos de este usuario', 0, 'int', 'null'),
(6979, 268, 'id_permiso', 'Se listaran los usuarios con este permiso', 0, 'int', 'null'),
(7131, 179, 'descripcion', 'Descripcion de la unidad convertible', 0, 'string', 'null'),
(7132, 179, 'nombre', 'Nombre de la unidad convertible', 1, 'string', ''),
(7133, 179, 'es_entero', 'Boleano que indica si la unidad se manejara solo en enteros o con decimales', 1, 'bool', ''),
(7137, 180, 'nombre', 'Nombre de la unidad convertible', 0, 'string', 'null'),
(7138, 180, 'descripcion', 'Descripcion de la unidad convertible', 0, 'string', 'null'),
(7139, 180, 'id_unidad', 'Id de la unidad a editar', 1, 'string', ''),
(7140, 180, 'es_entero', 'Si la unidad se manejara solo como enteros o con decimales', 0, 'bool', 'null'),
(7141, 181, 'id_unidad', 'Id de la unidad convertible a eliminar', 1, 'int', ''),
(7197, 109, 'fecha_hasta', 'fecha en que se entregara una orden', 0, 'string', 'null'),
(7198, 109, 'fecha_desde', 'Fecha en que se realizo la orden', 0, 'string', 'null'),
(7199, 109, 'id_servicio', 'Se listaran las ordenes que contengan este servicio', 0, 'int', 'null'),
(7200, 109, 'id_usuario_venta', 'Se listaran las ordenes de este usuario', 0, 'int', 'null'),
(7201, 109, 'activa', 'Se listaran las ordenes con el valor de activo obtenido', 0, 'bool', 'null'),
(7202, 109, 'cancelada', 'Se listaran las ordenes con valir de cancelada obtenido', 0, 'bool', 'null'),
(7203, 111, 'id_cliente', 'Id del cliente que contrata el servicio', 1, 'int', ''),
(7204, 111, 'id_servicio', 'Id del servicio que se contrata', 1, 'int', ''),
(7205, 111, 'descripcion', 'Descripcion de la orden o el porque del servicio', 1, 'string', ''),
(7206, 111, 'fecha_entrega', 'Fecha en que se entregara el servicio.', 1, 'string', ''),
(7207, 111, 'adelanto', 'Adelanto de la orden', 0, 'float', 'null'),
(7240, 246, 'id_empresa', 'Id de la empresa de la cual se listaran los paquetes', 0, 'int', 'null'),
(7241, 246, 'id_sucursal', 'Id de la sucursal de la cual se listaran sus paquetes', 0, 'int', 'null'),
(7242, 246, 'activo', 'Si este valor no es obtenido, se listaran paquetes tanto activos como inactivos, si es verdadera, se listaran solo paquetes activos, si es falso, se listaran paquetes inactivos', 0, 'bool', 'null'),
(7768, 269, 'activo', 'Si este parametro es obtenido, se listaran las clasificaciones cumplan con el', 0, 'bool', 'null'),
(7769, 269, 'orden', 'Nombre de la columna de la tabla mediante la cual se ordenara la lista', 0, 'string', 'null'),
(7850, 47, 'id_unidad_vieja', 'Id de la unidad en la que se encunetra el producto nuevo', 1, 'int', ''),
(7851, 47, 'id_almacen_viejo', 'Id del lote donde se encontraba el producto', 1, 'int', ''),
(7852, 47, 'id_producto_viejo', 'Id del producto a mover', 1, 'int', ''),
(7853, 47, 'cantidad_vieja', 'La cantidad de producto viejo que se procesara', 1, 'float', ''),
(7854, 47, 'id_almacen_nuevo', 'Id del almacen al que se mover el producto', 1, 'int', ''),
(7855, 47, 'id_producto_nuevo', 'Id del producto ya transformado', 1, 'int', ''),
(7856, 47, 'id_unidad_nueva', 'Id de la unidad nueva a la que se transformara', 1, 'int', ''),
(7857, 47, 'cantidad_nueva', 'La cantidad de producto nuevo que se procesara', 1, 'float', ''),
(7858, 197, 'id_compra', 'Id de la compra a cancelar', 1, 'int', ''),
(7859, 197, 'id_caja', 'Id de la caja a la que regresara el dinero si es que la compra fue de contado y existe la posibilidad de que regrese el dinero', 0, 'int', 'null'),
(7860, 197, 'billetes', 'Arreglo de billetes que regresan a la caja en cas ode que la caja lleve un control de billetes', 0, 'json', 'null'),
(7861, 82, 'id_venta', 'Id de la venta a revisar', 1, 'int', ''),
(7877, 84, 'id_venta', 'Id de la venta a cancelar', 1, 'int', ''),
(7878, 84, 'id_caja', 'Id de la caja a la cual saldra el dinero', 0, 'int', 'null'),
(7879, 84, 'billetes', 'Arreglo de billetes que saldran de la caja si esta lleva control de los mismos', 0, 'json', 'null'),
(7897, 41, 'descripcion', 'Justificacin de la solicitud.', 1, 'string', ''),
(7898, 41, 'id_autorizacion	', 'Id de la autorizacin a modificar', 1, 'int', ''),
(7899, 41, 'estado', 'Id del estado de la autorizacin', 1, 'int', ''),
(7909, 37, 'aceptar', 'Valor booleano que indicara si se debe aceptar o no esta autorizacion.', 1, 'bool', ''),
(7910, 37, 'id_autorizacion', 'Id de la autorizacin a responder', 1, 'int', ''),
(7911, 38, 'descripcion', 'Justificacin del porqu la solicitud del producto.', 1, 'string', ''),
(7912, 38, 'productos', 'Json que contendra los ids de los productos con sus respectivas cantidades.', 1, 'json', ''),
(7913, 33, 'id_venta', 'Id de la venta a devolver', 1, 'int', ''),
(7914, 33, 'descripcion', 'Justificacin de la devolucin de la compra', 1, 'string', ''),
(7915, 187, 'motivo_cancelacion', 'Motivo por el cual se cancelo el abono', 0, 'string', 'null'),
(7916, 187, 'id_abono', 'Id del abono a editar', 1, 'int', ''),
(7917, 187, 'nota', 'Nota del abono', 0, 'string', 'null'),
(7918, 187, 'compra', 'Si el abono a editar fue a una compra', 0, 'bool', 'null'),
(7919, 187, 'venta', 'Si el abono a editar fue a una venta', 0, 'bool', 'null'),
(7920, 187, 'prestamo', 'Si el abono a editar fue a un prestamo', 0, 'bool', 'null'),
(8650, 279, 'activa', 'Valor de activa de las cajas que se listaran', 0, 'bool', 'null'),
(8651, 279, 'id_sucursal', 'Sucursal de la cual se listaran sus cajas', 0, 'int', 'null'),
(8656, 99, 'motivo', 'Motivo por el cual se termino la consignacion, por que el cliente no vendia, o a peticion del cliente, etc.', 0, 'string', 'null'),
(8657, 99, 'id_consignacion', 'identifiacdor de consignacion', 1, 'int', ''),
(8658, 99, 'productos_actuales', 'Objeto que contendra los productos actuales de la consignacion.', 1, 'json', 'null'),
(8659, 99, 'tipo_pago', 'Si el tipo de pago es en cheque, tarjeta o en efectivo', 0, 'string', 'null'),
(8660, 280, 'productos_almacen', 'Arreglo que contendra los ids de producto, ids de unidad, cantidad y el id del almacen al que iran.', 1, 'json', ''),
(8661, 96, 'productos_actuales', 'Ojeto que contendra los ids de los productos con sus cantidades con los que cuenta actualmente el cliente, puede ser un json vacio. Este campo no se ve afectado por los campos producto_solicitado ni producto_devuelto.', 1, 'json', ''),
(8662, 96, 'id_inspeccion', 'Id de la inspeccion realizada', 1, 'int', ''),
(8663, 96, 'monto_abonado', 'Si la consignacion fue de contado, el cobrador debe registrar el monto equivalente a las ventas del cliente', 0, 'float', 'null'),
(8664, 96, 'producto_solicitado', 'Objeto que contendra los ids de los productos y sus cantidades que el cliente solicita, si este campo es obtenido, se editara la consignacion original agregando estos productos', 0, 'json', 'null'),
(8665, 96, 'producto_devuelto', 'Objeto que contendra los ids de los productos y sus cantidades que seran devueltos. Estos productos seran devueltos al almacen  de la sucursal de donde fueron extraidos.', 0, 'json', 'null'),
(8666, 96, 'id_inspector', 'Id del usuario que realiza la inspeccion', 0, 'int', ''),
(8672, 93, 'fecha_termino', 'Fecha en el que se termina la consignacion', 1, 'string', 'null'),
(8673, 93, 'folio', 'Folio de la consignacion', 1, 'string', 'null'),
(8674, 93, 'id_consignatario', 'Id del cliente al que se le hace la consignacion', 1, 'int', ''),
(8675, 93, 'productos', 'Objeto que contendra los ids de los productos que se daran a consignacion a ese cliente con sus cantidades. Se incluira el id del almacen del cual seran tomados para determinar a que empresa pertenece esta consignacion', 1, 'json', ''),
(8676, 93, 'tipo_consignacion', 'Especifica si la venta generada por esta consignacion se hara a credito o de contado', 1, 'string', 'null'),
(8677, 93, 'fecha_envio_programada', 'Sera la fecha de envio de los productos de los almacenes de los que seran tomados al almacen del consignatario. Si no se recibe se toma la fecha actual como la fecha de envio ', 0, 'string', 'null'),
(8703, 284, 'id_orden_de_servicio', 'Id de la orden de servicio de la cual se moveran los productos', 1, 'int', ''),
(8704, 284, 'productos', 'Arreglo que contendra los ids de productos, de unidades y  sus cantidades a retirar', 1, 'json', ''),
(8705, 283, 'id_orden_de_servicio', 'Id de la orden de servicio a la cual se le agregaran los productos', 1, 'int', ''),
(8706, 283, 'productos', 'Arreglo de objetos con ids de producto, de unidad, sus cantidades, su precio, su impuesto, retencion y descuento.', 1, 'json', ''),
(8707, 113, 'id_orden', 'Id de la orden a terminar', 1, 'int', ''),
(8708, 113, 'tipo_venta', 'Si la venta que se va a generar sera a credito o de contado', 1, 'string', 'null'),
(8709, 113, 'descuento', 'El monto a descontar de la venta si habra un descuento.', 0, 'float', 'null'),
(8710, 113, 'saldo', 'Si se saldara una parte de la venta en caso de ser a credito', 0, 'float', 'null'),
(8711, 113, 'tipo_de_pago', 'Si el tipo de pago sera en cheque, tarjeta o en efectivo.', 0, 'string', 'null'),
(8712, 113, 'cheques', 'Objeto que contendra la informacion de los cheques que se usan para pagar', 0, 'json', 'null'),
(8713, 113, 'billetes_pago', 'Objeto que contendra la informacion de los billetes que se usan para pagar', 0, 'json', 'null'),
(8714, 113, 'billetes_cambio', 'Objeto que contendra la informacion de billetes que se daran como cambio', 0, 'json', 'null'),
(8715, 113, 'id_venta_caja', 'Id de la venta de la caja en caso de q se haya ido el internet', 0, 'int', 'null'),
(8730, 73, 'impuesto', 'Cantidad sumada por impuestos', 1, 'float', ''),
(8731, 73, 'cheques', 'Si el tipo de pago es con cheque, se almacena el nombre del banco, el monto y los ultimos 4 numeros del o de los cheques', 0, 'json', 'null'),
(8732, 73, 'detalle_orden', 'Objeto que contendr los id de los servicios, sus cantidades, su precio y su descuento.', 0, 'json', 'null'),
(8733, 73, 'detalle_paquete', 'Objeto que contendr los id de los paquetes, sus cantidades, su precio y su descuento.', 0, 'json', 'null'),
(8734, 73, 'descuento', 'La cantidad que ser descontada a la compra', 1, 'float', ''),
(8735, 73, 'billetes_pago', 'Ids de los billetes que se recibieron ', 0, 'json', 'null'),
(8736, 73, 'total', 'El total de la venta', 1, 'float', ''),
(8737, 73, 'tipo_venta', 'Si la venta es a credito o a contado', 1, 'string', ''),
(8738, 73, 'tipo_pago', 'Si el pago ser efectivo, cheque o tarjeta.', 0, 'string', 'null'),
(8739, 73, 'saldo', 'La cantidad que ha sido abonada hasta el momento de la venta', 0, 'float', '0'),
(8740, 73, 'detalle_producto', 'Objeto que contendr los id de los productos, sus cantidades, su precio y su descuento.', 0, 'json', 'null'),
(8741, 73, 'subtotal', 'El total de la venta antes de cargarle impuestos', 1, 'float', ''),
(8742, 73, 'billetes_cambio', 'Ids de billetes que se entregaron como cambio', 0, 'json', 'null'),
(8743, 73, 'retencion', 'Cantidad sumada por retenciones', 1, 'float', ''),
(8744, 73, 'id_comprador', 'Id del cliente al que se le vende.', 1, 'int', ''),
(8745, 73, 'id_venta_caja', 'Id de la venta de esta caja, utilizado cuando se va el internet', 0, 'int', 'null'),
(8746, 73, 'id_sucursal', 'Id de la sucursal de donde saldran los productos en caso de que se venda desde otra sucursal', 0, 'int', 'null'),
(8747, 73, 'id_caja', 'Id de la caja desde la que se vende, en caso de que se venda desde otra caja', 0, 'int', 'null'),
(8808, 16, 'auth_token', 'El token de autorizacion generado al iniciar la sesion', 0, 'string', 'null'),
(8868, 74, 'retencion', 'Cantidad sumada por retenciones', 1, 'float', ''),
(8869, 74, 'detalle', 'Objeto que contendr la informacin de los productos comprados, sus cantidades, sus descuentos, y sus precios', 1, 'json', ''),
(8870, 74, 'descuento', 'Cantidad restada por descuento', 1, 'float', ''),
(8871, 74, 'impuesto', 'Cantidad sumada por impuestos', 1, 'float', ''),
(8872, 74, 'id_empresa', 'Empresa a nombre de la cual se realiza la compra', 1, 'int', ''),
(8873, 74, 'subtotal', 'Total de la compra antes de incluirle impuestos.', 1, 'float', ''),
(8874, 74, 'tipo_compra', 'Si la compra es a credito o de contado', 1, 'string', ''),
(8875, 74, 'total', 'Total de la compra despues de impuestos y descuentos', 1, 'float', ''),
(8876, 74, 'saldo', 'Saldo de la compra', 0, 'float', '0'),
(8877, 74, 'id_vendedor', 'Id del cliente al que se le compra', 1, 'int', ''),
(8878, 74, 'tipo_pago', 'Si el pago ser en efectivo, con tarjeta o con cheque', 0, 'string', 'null'),
(8879, 74, 'billetes_pago', 'Ids de billetes que se usaron para pagar', 0, 'json', 'null'),
(8880, 74, 'billetes_cambio', 'Ids de billetes que se recibieron como cambio', 0, 'json', 'null'),
(8881, 74, 'cheques', 'Si el tipo de pago es con cheque, se almacena el nombre del banco, el monto y los ultimos 4 numeros del o de los cheques', 0, 'json', 'null'),
(8882, 74, 'id_compra_caja', 'Id de la compra de esta caja, sirve cuando se va el internet', 0, 'int', 'null'),
(8883, 74, 'id_sucursal', 'Id de la sucursal de la cual se hara la compra. Si no se recibe se tomara de la sesion', 0, 'int', 'null'),
(8884, 74, 'id_caja', 'Id de la caja de la cual se realizara la compra. Si no se recibe se tomara de la sesion', 0, 'int', 'null'),
(8885, 97, 'retencion', 'Monto agregado por retenciones', 1, 'float', ''),
(8886, 97, 'tipo_compra', 'Si la compra es a credito o de contado', 1, 'string', ''),
(8887, 97, 'impuesto', 'Monto agregado por impuestos.', 1, 'float', ''),
(8888, 97, 'detalle', 'JSON que comprende un arreglo del tipo:<pre>{    id_producto   : 8,    id_sucursal   : 5,    id_almacen    : 2,    costo_total   : 5.55,    cantidad      : 44}</pre>id_producto es el producto comprado.id_sucursal es la sucursal donde se dejara ese producto y id_sucursal es la sucursal donde se dejara de esa sucursal. <br><br>El costo total es por cada producto. Esto es que se debe mandar el costo total de este producto, y la suma de todos los productos debe concocordar con total.', 1, 'json', ''),
(8889, 97, 'subtotal', 'Total de la compra antes de impuestos y descuentos.', 1, 'float', ''),
(8890, 97, 'descuento', 'Monto descontado por descuentos', 1, 'float', ''),
(8891, 97, 'cheques', 'Si el tipo de pago es con cheque, se almacena el nombre del banco, el monto y los ultimos 4 numeros del o de los cheques', 0, 'json', 'null'),
(8892, 97, 'id_usuario_compra', 'Id usuario al que se le compra, si es a una sucursal, se pone el id en negativo', 1, 'int', ''),
(8893, 97, 'saldo', 'Cantidad pagada de la ', 0, 'float', '0'),
(8894, 97, 'id_empresa', 'Id de la empresa a nombre de la cual se hace la compra', 1, 'int', ''),
(8895, 97, 'total', 'Total de la compra a pagar', 1, 'float', ''),
(8896, 97, 'tipo_de_pago', 'Si esta compra es a contado, debera especificarse el tipo de pago, este debe ser : <pre>tarjeta, checque, efectivo</pre>', 0, 'string', 'null'),
(8897, 97, 'id_sucursal', 'Id de la sucursal en nombre de la cual se hace la compra', 0, 'int', 'null'),
(8907, 239, 'descripcion', 'Descripcion de la caja', 0, 'string', 'null'),
(8908, 239, 'token', 'Token generado por el pos client', 0, 'string', 'null'),
(8909, 239, 'id_caja', 'Id de la caja a editar', 1, 'int', ''),
(8910, 239, 'control_billetes', 'Si la caja llevara control de los billetes que tiene o no', 0, 'bool', 'null'),
(8911, 139, 'token', 'el token que pos_client otorga por equipo', 1, 'string', ''),
(8912, 139, 'basculas', 'Un objeto con las basculas conectadas a esta caja.', 0, 'json', 'null'),
(8913, 139, 'id_sucursal', 'Id de la sucursal a la que pertenecera esta caja. Si no es obtenido se tomara la de la sesion', 0, 'int', 'null'),
(8914, 139, 'descripcion', 'Descripcion de esta caja', 0, 'string', 'null'),
(8915, 139, 'impresoras', 'Un objeto con las impresoras asociadas a esta sucursal.', 0, 'json', 'null'),
(8916, 139, 'control_billetes', 'Si la caja llevara el control de los billetes que hay en ella', 0, 'bool', '0'),
(8917, 76, 'id_caja', 'Id de la caja a abrir', 1, 'int', ''),
(8918, 76, 'id_cajero', 'Id del cajero que iniciara en esta caja en caso de que no sea este el que abre la caja', 0, 'int', 'null'),
(8919, 76, 'saldo', 'Saldo con el que empieza a funcionar la caja', 1, 'float', ''),
(8920, 76, 'client_token', 'El token generado por el POS client', 1, 'string', ''),
(8921, 76, 'control_billetes', 'Si se quiere llevar el control de billetes en la caja', 1, 'bool', ''),
(8922, 76, 'billetes', 'Ids de billetes y sus cantidades con los que inicia esta caja', 0, 'json', 'null'),
(8943, 51, 'activo', 'True si se mostrarn solo los usuarios activos, false si solo se mostrarn los usuarios inactivos', 0, 'bool', 'null'),
(8944, 51, 'ordenar', 'Nombre de la columna por la cual se editara la lista', 0, 'string', 'null'),
(8945, 207, 'orden', 'Nombre de la columna por la cual se ordenaran', 0, 'string', 'null'),
(8974, 106, 'id_empresa', 'Id de la empresa de la cual se listaran sus servicios', 0, 'int', 'null'),
(8975, 106, 'id_sucursal', 'Id de la sucursal de la cual se listaran sus servicios', 0, 'int', 'null'),
(8976, 106, 'activo', 'Si este valor no es obtenido, se mostraran los servicios tanto activos como inactivos. Si es true, se mostraran solo los activos, si es false se mostraran solo los inactivos.', 0, 'bool', 'null'),
(8977, 106, 'orden', 'Nombre de la columna por la cual se ordenara la lista', 0, 'string', 'null'),
(8995, 62, 'monto', 'Monto del gasto en caso de que no este contemplado por el concepto de gasto o sea diferente a este', 0, 'float', 'null'),
(8996, 62, 'id_sucursal', 'Id de la sucursal a la que pertenece este gasto', 0, 'int', 'null'),
(8997, 62, 'id_caja', 'Id de la caja de la que se sustrae el dinero para pagar el gasto', 0, 'int', 'null'),
(8998, 62, 'fecha_gasto', 'Fecha del gasto', 1, 'string', ''),
(8999, 62, 'id_empresa', 'Id de la empresa a la que pertenece este gasto', 1, 'int', ''),
(9000, 62, 'id_orden_de_servicio', 'Id de la orden del servicio que genero este gasto', 0, 'int', 'null'),
(9001, 62, 'id_concepto_gasto', 'Id del concepto al que  hace referencia el gasto', 0, 'int', 'null'),
(9002, 62, 'descripcion', 'Descripcion del gasto en caso de que no este contemplado en la lista de concpetos de gasto', 0, 'string', 'null'),
(9003, 62, 'folio', 'Folio de la factura del gasto', 0, 'string', 'null'),
(9004, 62, 'nota', 'Nota del gasto', 0, 'string', 'null'),
(9005, 62, 'billetes', 'Los billetes que se retiran de la caja por pagar este gasto', 0, 'json', 'null'),
(9006, 189, 'id_prestamo', 'Id del prestamo del cual se listaran los abonos', 0, 'int', 'null'),
(9007, 189, 'venta', 'Si se listaran abonos hechos a ventas', 1, 'bool', ''),
(9008, 189, 'id_empresa', 'Id de la empresa de la cual se mostraran los abonos', 0, 'int', 'null'),
(9009, 189, 'compra', 'Si se listaran solo abonos hechos a compras', 1, 'bool', ''),
(9010, 189, 'id_caja', 'Id de la caja de la cual se mostraran los abonos', 0, 'int', 'null'),
(9011, 189, 'monto_menor_a', 'Se listaran los abonos cuyo monto sea menor a este', 0, 'float', 'null'),
(9012, 189, 'orden', 'Nombre de la columna por la cual se ordenara la lista', 0, 'string', 'null'),
(9013, 189, 'id_compra', 'Id de la compra de la cual se listaran los abonos', 0, 'int', 'null'),
(9014, 189, 'id_usuario', 'Id del usuario del cual se mostraran los abonos que ha realizado. En caso de tratarse de compras, se mostraran los abonos que se han hecho a este vendedor.', 0, 'int', 'null'),
(9015, 189, 'fecha_actual', 'Se listaran los abonos tengan la fecha de hoy', 0, 'bool', 'null'),
(9016, 189, 'id_sucursal', 'Id de la sucursal de la cual se mostraran los abonos', 0, 'int', 'null'),
(9017, 189, 'fecha_minima', 'Se listaran los abonos cuya fecha sea mayor que este valor', 0, 'string', 'null'),
(9018, 189, 'monto_mayor_a', 'Se listaran los abonos cuyo monto sea mayor a este', 0, 'float', 'null'),
(9019, 189, 'fecha_maxima', 'Se listaran los abonos cuya fecha sea menor que este valor', 0, 'string', 'null'),
(9020, 189, 'prestamo', 'Si se listaran abonos hechos a prestamos', 1, 'bool', ''),
(9021, 189, 'cancelado', 'Si este valor es verdadero, se listaran los abonos cancelados', 0, 'bool', 'null'),
(9022, 189, 'id_venta', 'Id de la venta de la cual se listaran los abonos', 0, 'int', 'null'),
(9023, 189, 'monto_igual_a', 'Se listaran los abonos cuyo monto sea igual a este', 0, 'float', 'null'),
(9033, 95, 'id_empresa', 'Id de la empresa de la cual se mostraran las consignaciones', 0, 'int', 'null'),
(9034, 95, 'id_sucursal', 'Id de la sucursal de la cual se mostraran las consignaciones', 0, 'int', 'null'),
(9035, 95, 'id_cliente', 'Id del cliente del cual se mostraran las consignaciones', 0, 'int', 'null'),
(9036, 95, 'id_producto', 'Id del producto del cual se mostraran las consignaciones', 0, 'int', 'null'),
(9037, 95, 'orden', 'Nombre de la columan por el cual se ordenara la lista', 0, 'string', 'null'),
(9038, 128, 'id_empresa', 'Id de la empresa de la cual se listaran las facturas', 0, 'int', 'null'),
(9039, 128, 'orden', 'Nombre de la columan por el cual se ordenara la lista', 0, 'string', 'null'),
(9040, 128, 'activos', 'Si este valor no es obtenido, se listaran tanto facturas activas como canceladas, si es true, se listaran solo las facturas activas, si es false se listaran solo las facturas canceladas', 0, 'bool', 'null'),
(9041, 128, 'id_sucursal', 'Id de la sucursal de la cual se listaran las facturas', 0, 'int', 'null'),
(9042, 257, 'ordenar', 'Nombre de la columan por el cual se ordenara la lista', 0, 'string', 'null'),
(9043, 257, 'activo', 'Si este valor no es obtenido, se listaran tanto activos como inactivos, si es verdadero, se listaran solo los activos, si es falso, se listaran solo los inactivos', 0, 'bool', 'null'),
(9044, 261, 'orden', 'Nombre de la columan por el cual se ordenara la lista', 0, 'string', 'null'),
(9045, 261, 'activo', 'Si este valor no es recibido, se listaran tanto activos como inactivos, si es verdadero, se listaran solo los activos, si es falso, se listaran solo los inactivos.', 0, 'bool', 'null'),
(9048, 85, 'orden', 'Nombre de la columan por el cual se ordenara la lista', 0, 'string', 'null'),
(9049, 85, 'activo', 'Si el valor no es obtenido, se listaran los proveedores tanto activos como inactivos. Si su valor es true, se mostraran solo los proveedores activos, si es false, se mostraran solo los proveedores inactivos.', 0, 'bool', 'null'),
(9050, 132, 'id_empresa', 'Id de la empresa de la cual se listaran sus reportes', 0, 'int', 'null'),
(9051, 132, 'id_sucursal', 'Id de la sucursal de la cual se listaran sus reportes', 0, 'int', 'null');
INSERT INTO `argumento` (`id_argumento`, `id_metodo`, `nombre`, `descripcion`, `ahuevo`, `tipo`, `defaults`) VALUES
(9052, 132, 'orden', 'Nombre de la columan por el cual se ordenara la lista', 0, 'string', 'null'),
(9054, 100, 'id_empresa', 'Id de la empresa de la cual se listaran sus vehiculos', 0, 'int', 'null'),
(9055, 100, 'id_estado', 'Valor que determina si se mostraran los coches de un cierto estado.', 0, 'int', 'null'),
(9056, 100, 'orden', 'Nombre de la columan por el cual se ordenara la lista', 0, 'string', 'null'),
(9057, 83, 'ordenar', 'Nombre de la columan por el cual se ordenara la lista', 0, 'string', 'null'),
(9058, 83, 'id_sucursal', 'Id de la sucursal de la cuals e listaran sus ventas', 0, 'int', 'null'),
(9059, 83, 'total_superior_a', 'Si ese valor es obtenido, se listaran las ventas cuyo total sea superior al valor obtenido.', 0, 'float', 'null'),
(9060, 83, 'total_inferior_a', 'Si este valor es obtenido, se listaran las empresas cuyo total sea inferior al valor obtenido.', 0, 'float', 'null'),
(9061, 83, 'total_igual_a', 'Si este valor es obtenido, se listaran las ventas cuyo total sea igual al valor obtenido', 0, 'float', 'null'),
(9062, 83, 'liquidados', 'Si este valor no es obtenido, se listaran tanto las ventas liquidadas, como las no liquidadas, si es true, se listaran solo las ventas liquidadas, si es false, se listaran las ventas no liquidadas solamente.', 0, 'bool', 'null'),
(9063, 83, 'canceladas', 'Si no se obtiene este valor, se listaran las ventas tanto canceladas como las que no, si es true, se listaran solo las ventas que estan canceladas, si es false, se listaran las ventas que no estan canceladas solamente.', 0, 'bool', 'null'),
(9064, 61, 'orden', 'Nombre de la columan por el cual se ordenara la lista', 0, 'string', 'null'),
(9065, 61, 'activo', 'Si se listaran solo activos o inactivos, si no se recibe se listan ambos', 0, 'bool', 'null'),
(9066, 192, 'id_ingreso', 'Id del ingreso a cancelar', 1, 'int', ''),
(9067, 192, 'motivo_cancelacion', 'Motivo por el cual se realiza la cancelacion', 0, 'string', 'null'),
(9068, 192, 'id_caja', 'Id de la caja de la cual se toma el dinero  para regresar el ingreso', 0, 'int', 'null'),
(9069, 192, 'billetes', 'Billetes usados para regresar el ingreso', 0, 'json', 'null'),
(9100, 112, 'id_localizacion', 'Id de la sucursal en la que se encuentra actualmente la orden. Si se omite entonces el seguimiento se tomara que esta en la misma sucursal del ultimo servicio o bien de donde se inicio el servicio.', 0, 'int', 'null'),
(9101, 112, 'nota', 'Nota por la cual se inicio el seguimiento, es una cadena describiendo la causa del seguimiento.', 1, 'string', ''),
(9102, 112, 'id_orden_de_servicio', 'Id de la orden a darle seguimiento', 1, 'int', ''),
(9137, 289, 'nombre', 'nombre del proceso', 1, 'string', ''),
(9138, 289, 'descripcion', 'descripcion del proceso', 1, 'string', ''),
(9180, 15, 'password', 'La contrasea del usuario en texto plano. ', 1, 'string', ''),
(9181, 15, 'usuario', 'Este puede ser el id del usuario a iniciar sesion o bien su correo electronico.', 1, 'string', ''),
(9182, 15, 'request_token', 'Si se enva, y es verdadero, el seguimiento de esta sesin se har mediante un token, de lo contrario se har mediante cookies.', 0, 'bool', 'true'),
(9201, 173, 'retenciones', 'Ids de retenciones que afectan esta clasificacion de productos', 0, 'json', 'null'),
(9202, 173, 'impuestos', 'Ids de impuestos que afectan a esta categoria de producto', 0, 'json', 'null'),
(9203, 173, 'nombre', 'Nombre de la categoria', 1, 'string', ''),
(9204, 173, 'garantia', 'Numero de meses de garantia con los que cuenta esta categoria de producto', 0, 'int', 'null'),
(9205, 173, 'descripcion', 'Descripcion larga de la categoria', 0, 'string', 'null'),
(9206, 174, 'garantia', 'Numero de meses de garantia con los que cuentan los productos de esta clasificacion', 0, 'int', 'null'),
(9207, 174, 'id_categoria', 'Id de la categoria del producto', 1, 'int', ''),
(9208, 174, 'nombre', 'Nombre de la categoria del producto', 1, 'string', ''),
(9209, 174, 'descripcion', 'Descripcion larga de la categoria', 0, 'string', 'null'),
(9210, 174, 'impuestos', 'Ids de impuestos que afectan a esta clasificacion de producto', 0, 'json', 'null'),
(9211, 174, 'retenciones', 'Ids de retenciones que afectan a esta clasificacion de producto', 0, 'json', 'null'),
(9212, 233, 'retenciones', 'Retenciones que afectan a los servicios de esta clasificacion', 0, 'json', 'null'),
(9213, 233, 'impuestos', 'Impuestos que afectan a los servicios de esta clasificacion', 0, 'json', 'null'),
(9214, 233, 'descripcion', 'Descripcion de la clasificacion del servicio', 0, 'string', 'null'),
(9215, 233, 'garantia', 'Numero de meses que tiene la garantia de este tipo de servicios', 0, 'int', 'null'),
(9216, 233, 'nombre', 'Nombre de la clasificacion de servicio', 0, 'string', 'null'),
(9217, 233, 'id_clasificacion_servicio', 'Id de la clasificacion del servicio que se edita', 1, 'int', ''),
(9218, 232, 'nombre', 'Nombre de la clasificacion del servicio', 1, 'string', ''),
(9219, 232, 'garantia', 'numero de meses de garantia que tienen los servicios de esta clasificacion', 0, 'int', 'null'),
(9220, 232, 'descripcion', 'Descripcion de la clasificacion del servicio', 0, 'string', 'null'),
(9221, 232, 'activa', 'Si esta clasificacion sera activa al momento de ser creada', 0, 'bool', '1'),
(9222, 232, 'impuestos', 'Impuestos que afectan a este tipo de servicio', 0, 'json', 'null'),
(9223, 232, 'retenciones', 'Retenciones que afectana este tipo de servicio', 0, 'json', 'null'),
(9263, 242, 'servicios', 'Arreglo de ids de servicio con su respectiva cantidad', 0, 'json', 'null'),
(9264, 242, 'foto_paquete', 'Url de la foto del paquete', 0, 'string', 'null'),
(9265, 242, 'costo_estandar', 'COsto estandar del paquete', 0, 'float', 'null'),
(9266, 242, 'precio', 'Precio del paquete', 0, 'float', 'null'),
(9267, 242, 'descripcion', 'Descripcion larga del paquete', 0, 'string', 'null'),
(9268, 242, 'nombre', 'Nombre del paquete', 1, 'string', ''),
(9269, 242, 'sucursales', 'Arreglo de ids de las sucursales a las que pertenecera este  paquete', 1, 'json', 'null'),
(9270, 242, 'empresas', 'Arreglo de ids de empresas a las que pertenecera este paquete', 1, 'json', 'null'),
(9271, 242, 'productos', 'Arreglo de ids de productos con sus unidades y sus cantidades', 0, 'json', 'null'),
(9272, 243, 'descripcion', 'Descripcion larga del paquete', 0, 'string', 'null'),
(9273, 243, 'costo_estandar', 'Costo estandar del paquete', 0, 'float', 'null'),
(9274, 243, 'productos', 'Arreglo de ids de productos con sus respectivas unidades y cantidades que perteneceran a este paquete', 0, 'json', 'null'),
(9275, 243, 'foto_paquete', 'Url de la foto del paquete', 0, 'string', 'null'),
(9276, 243, 'id_paquete', 'ID del paquete a editar', 1, 'int', ''),
(9277, 243, 'servicios', 'Arreglo de ids de servicios con sus cantidades que formaran parte de este paquete', 0, 'json', 'null'),
(9278, 243, 'nombre', 'Nombre del paquete', 0, 'string', 'null'),
(9279, 243, 'precio', 'Precio del paquete', 0, 'float', 'null'),
(9280, 243, 'empresas', 'Arreglo de ids de empresas a las que pertencera este paquete', 0, 'json', 'null'),
(9281, 243, 'sucursales', 'Arreglo de ids de sucursales a las que pertenecera este paquete', 0, 'json', 'null'),
(9282, 143, 'metodo_costeo', 'Puede ser "precio" o "costo" e indican si el precio final sera tomado a partir del costo del producto o del precio del mismo', 0, 'string', 'null'),
(9283, 143, 'precio', 'El precio de este producto', 0, 'int', 'null'),
(9284, 143, 'impuestos', 'array de ids de impuestos que tiene este producto', 0, 'json', 'null'),
(9285, 143, 'descripcion_producto', 'Descripcion larga del producto', 0, 'string', 'null'),
(9286, 143, 'clasificaciones', 'Uno o varios id_clasificacion de este producto, esta clasificacion esta dada por el usuario', 0, 'json', 'null'),
(9287, 143, 'id_unidad', 'La unidad preferente de este producto', 0, 'int', 'null'),
(9288, 143, 'garantia', 'Numero de meses de garantia de este producto', 0, 'int', 'null'),
(9289, 143, 'compra_en_mostrador', 'Verdadero si este producto se puede comprar en mostrador, para aquello de compra-venta', 0, 'bool', 'null'),
(9290, 143, 'codigo_de_barras', 'El Codigo de barras para este producto', 0, 'string', 'null'),
(9291, 143, 'empresas', 'arreglo de ids de empresas a las que pertenece este producto', 0, 'json', 'null'),
(9292, 143, 'peso_producto', 'el peso de este producto en KG', 0, 'float', 'null'),
(9293, 143, 'costo_estandar', 'Valor del costo estndar del producto.', 0, 'float', 'null'),
(9294, 143, 'costo_extra_almacen', 'Si este producto produce un costo extra por tenerlo en almacen', 0, 'float', 'null'),
(9295, 143, 'nombre_producto', 'Nombre del producto', 0, 'string', 'null'),
(9296, 143, 'id_producto', 'Id del producto a editar', 1, 'int', ''),
(9297, 143, 'foto_del_producto', 'url a una foto de este producto', 0, 'string', 'null'),
(9298, 143, 'control_de_existencia', '00000001 = Unidades. 00000010 = Caractersticas. 00000100 = Series. 00001000 = Pedimentos. 00010000 = Lote', 0, 'int', 'null'),
(9299, 143, 'codigo_producto', 'Codigo del producto', 0, 'string', 'null'),
(9325, 107, 'nombre_servicio', 'Nombre del servicio', 1, 'string', ''),
(9326, 107, 'activo', 'Si queremos que este activo o no mientras lo insertamos', 0, 'bool', 'true'),
(9327, 107, 'codigo_servicio', 'Codigo de control del servicio manejado por la empresa, no se puede repetir', 1, 'string', ''),
(9328, 107, 'clasificaciones', 'Uno o varios id_clasificacion de este servicio, esta clasificacion esta dada por el usuario   Array', 0, 'json', 'null'),
(9329, 107, 'costo_estandar', 'Valor del costo estandar del servicio', 1, 'float', ''),
(9330, 107, 'compra_en_mostrador', 'Verdadero si este servicio se puede comprar en mostrador, para aquello de compra-venta. Para poder hacer esto, el sistema debe poder hacer compras en mostrador', 1, 'bool', ''),
(9331, 107, 'metodo_costeo', 'Puede ser "precio" o "costo" e indica si el precio final sera tomado en base al precio base del servicio o a su costo', 1, 'string', ''),
(9332, 107, 'impuestos', 'array de ids de impuestos que tiene este servico', 0, 'json', 'null'),
(9333, 107, 'control_de_existencia', '00000001 = Unidades. 00000010 = Caractersticas. 00000100 = Series. 00001000 = Pedimentos. 00010000 = LoteCaractersticas. 00000100 = Series. 00001000 = Pedimentos. 00010000 = Lote', 0, 'int', 'null'),
(9334, 107, 'descripcion_servicio', 'Descripcion del servicio', 0, 'string', 'null'),
(9335, 107, 'precio', 'Precio del servicio', 0, 'float', 'null'),
(9336, 107, 'retenciones', 'Ids de las retenciones que afectan este servicio', 0, 'json', 'null'),
(9337, 107, 'garantia', 'Si este servicio tiene una garanta en meses.', 0, 'int', 'null'),
(9338, 107, 'foto_servicio', 'La url de la foto del servicio', 0, 'string', 'null'),
(9339, 107, 'empresas', 'Arreglo de ids de empresas a las que pertenecera este servicio', 0, 'json', 'null'),
(9340, 107, 'sucursales', 'Arreglo de ids de sucursales a las que pertenecera este servicio', 0, 'json', 'null'),
(9341, 108, 'costo_estandar', 'Valor del costo estandar del servicio', 0, 'float', 'null'),
(9342, 108, 'id_servicio', 'Id del servicio a editar', 1, 'int', ''),
(9343, 108, 'retenciones', 'Ids de retenciones que afectan este servicio', 0, 'json', 'null'),
(9344, 108, 'sucursales', 'Arreglo de ids sucursales a las que pertencera este servicio', 0, 'json', 'null'),
(9345, 108, 'clasificaciones', 'Uno o varios id_clasificacion de este servicio, esta clasificacion esta dada por el usuario Array', 0, 'json', 'null'),
(9346, 108, 'garantia', 'Si este servicio tiene una garanta en meses.', 0, 'int', 'null'),
(9347, 108, 'impuestos', 'array de ids de impuestos que tiene este servico', 0, 'json', 'null'),
(9348, 108, 'nombre_servicio', 'Nombre del servicio', 0, 'string', 'null'),
(9349, 108, 'metodo_costeo', 'Puede ser "precio" o "costo" e indica si el precio final sera tomado del precio base del servicio o de su costo', 0, 'string', 'null'),
(9350, 108, 'descripcion_servicio', 'Descripcion del servicio', 0, 'string', 'null'),
(9351, 108, 'empresas', 'Arreglo de ids de empresas a las que pertenecera este servicio', 0, 'string', 'null'),
(9352, 108, 'codigo_servicio', 'Codigo de control del servicio manejado por la empresa, no se puede repetir', 0, 'string', 'null'),
(9353, 108, 'compra_en_mostrador', 'Verdadero si este servicio se puede comprar en mostrador, para aquello de compra-venta. Para poder hacer esto, el sistema debe poder hacer compras en mostrador', 0, 'string', 'null'),
(9354, 108, 'control_de_existencia', '00000001 = Unidades. 00000010 = Caractersticas. 00000100 = Series. 00001000 = Pedimentos. 00010000 = LoteCaractersticas. 00000100 = Series. 00001000 = Pedimentos. 00010000 = Lote', 0, 'int', 'null'),
(9355, 108, 'foto_servicio', 'Url de la foto del servicio', 0, 'string', 'null'),
(9356, 108, 'precio', 'Precio del servicio', 0, 'float', 'null'),
(9655, 230, 'retenciones', 'Ids de las retenciones de la clasificacion de  proveedor', 0, 'json', 'null'),
(9656, 230, 'impuestos', 'Ids de los impuestos de la clasificacion del proveedor', 0, 'json', 'null'),
(9657, 230, 'descripcion', 'Descripcion de la clasificacion del proveedor', 0, 'string', 'null'),
(9658, 230, 'nombre', 'Nombre de la clasificacion del proveedor', 0, 'string', 'null'),
(9659, 230, 'id_clasificacion_proveedor', 'Id de la clasificacion del proveedor a editar', 1, 'int', ''),
(9660, 230, 'id_tarifa_compra', 'Id de la tarifa de compra que se aplicara a los proveedores de esta clasificacion. Si un usuario tiene esta clasificacion pero tiene otra tarifa entonces no se sobreescribira', 0, 'int', 'null'),
(9661, 230, 'id_tarifa_venta', 'Id de la tarifa de venta que se aplicara a los proveedores de esta clasificacion. Si un usuario tiene esta clasificacion pero tiene otra tarifa entonces no se sobreescribira', 0, 'int', 'null'),
(9662, 229, 'nombre', 'Nombre de la clasificacion de proveedor', 1, 'string', ''),
(9663, 229, 'descripcion', 'Descripcion de la clasificacion del proveedor', 0, 'string', 'null'),
(9664, 229, 'impuestos', 'Ids de impuestos que afectan esta clasificacion de proveedor', 0, 'json', 'null'),
(9665, 229, 'retenciones', 'Ids de retenciones que afecta esta clasificacion de proveedor', 0, 'json', 'null'),
(9666, 229, 'id_tarifa_compra', 'Id de la tarifa de compra por default que se aplica a los proveedores de esta clasificacion', 0, 'int', 'null'),
(9667, 229, 'id_tarifa_venta', 'Id de la tarifa de venta por default que se aplica a los proveedores de esta clasificacion', 0, 'int', 'null'),
(9728, 170, 'descripcion', 'Descripcion larga del grupo', 0, 'string', 'null'),
(9729, 170, 'salario', 'Salario base para este rol', 0, 'float', '0'),
(9730, 170, 'nombre', 'Nombre del grupo', 0, 'string', 'null'),
(9731, 170, 'id_rol', 'Id del rol a editar', 1, 'int', ''),
(9732, 170, 'id_tarifa_compra', 'Id de la tarifa de compora por default que aplicara a los usuarios de este rol. Si un usuario tiene otra tarifa de compra, no sera sobreescrita', 0, 'int', 'null'),
(9733, 170, 'id_tarifa_venta', 'Id de la tarifa de venta por default que aplicara a los usuarios de este rol . Si un usuario ya tiene otra tarifa de venta, no sera sobreescrita.', 0, 'int', 'null'),
(9734, 169, 'descripcion', 'Descripcion larga del grupo. La descripcion no puede ser una cadena vacia ni mayor a 256 caracteres.', 0, 'string', 'null'),
(9735, 169, 'salario', 'El salario de este rol.', 0, 'float', '0'),
(9736, 169, 'nombre', 'Nombre del grupo. Este no puede existir en el sistema, no puede ser una cadena vacia y no puede ser mayor a 30 caracteres.', 1, 'string', ''),
(9737, 169, 'id_tarifa_compra', 'Id de la tarifa de compra por default que aplicara a los usuario de este rol', 0, 'int', 'null'),
(9738, 169, 'id_tarifa_venta', 'Id de la tarifa de venta por default que aplicara a los suarios de este rol', 0, 'int', 'null'),
(9849, 310, 'emisor', 'El correo electronico de donde se enviara este correo si es que esta configurado para esta instancia. De no enviarse se enviara un correo de la cuenta default de POS ERP.', 0, 'string', 'no-reply@caffeina.mx'),
(9850, 310, 'destinatario', 'El correo electronico a enviar.', 1, 'string', ''),
(9851, 310, 'titulo', 'El titulo del correo electronico. ', 1, 'string', ''),
(9852, 310, 'cuerpo', 'El cuerpo del correo electronico.', 1, 'string', ''),
(10077, 43, 'id_sucursal', 'Id de la sucursal de la cual se vern los productos.', 0, 'int', 'null'),
(10078, 43, 'id_almacen	', 'Id del almacen del cual se vern los productos. Si este valor es obtenido no se tomaran en cuenta los parametros id_empresa ni id_sucursal', 0, 'int', 'null'),
(10079, 43, 'id_empresa', 'Id de la empresa de la cual se vern los productos. Si este valor es obtenido no se tomara en cuenta el valor de id_sucursal', 0, 'int', 'null'),
(10080, 43, 'id_producto', 'Mostrara las existencias de ese producto. Se puede convinar con los demas parametros. Si solo se recibe este parametro, se regresara un arreglo con las existencias de este prodcto en cada sucursal de acuerdo a su unidad.', 0, 'int', 'null'),
(10081, 36, 'ordenar', 'Nombre de la columan por el cual se ordenara la lista', 0, 'string', 'null'),
(10082, 36, 'filtro', 'Nombre de la columna por la cual se ordenara la lista', 0, 'string', 'null'),
(10083, 32, 'id_compra', 'El `id_compra` de la compra que queremos devolver.', 1, 'int', ''),
(10084, 32, 'descripcion', 'Una descripcion que se le mostrara al administrador que conteste esta autorizacion.', 0, 'int', '""'),
(10094, 34, 'precio', 'Si el precio deseado no se encuentra en los campos del precio de acuerdo al tipo del cliente, se pued especificar el precio que se desea dar.', 0, 'float', 'null'),
(10095, 34, 'siguiente_compra', 'Si es true, el cambio solo se acplicara a la siguiente compra/venta, pero si es false, el cambio se hara sobre la relacion del cliente con el tipo de precio', 1, 'bool', ''),
(10096, 34, 'id_cliente', 'Id del cliente al que se le har el cambio.', 1, 'int', ''),
(10097, 34, 'id_precio', 'Id del nuevo precio requerido.', 0, 'int', 'null'),
(10098, 34, 'descripcion', 'Justificacin del cambio de precio del cliente.', 1, 'string', ''),
(10099, 34, 'id_productos', 'Arreglo de Ids de los productos en los que se hara el cambio ', 1, 'json', ''),
(10100, 34, 'compra', 'Si es true, el nuevo precio ser requerido para compras en el producto especificado, si es false, el nuevo precio ser requerido para ventas en el producto especificado.', 1, 'bool', ''),
(10105, 31, 'id_cliente', 'Id del cliente que se desea editar', 1, 'int', ''),
(10110, 30, 'monto', 'Monto a gastar', 1, 'float', ''),
(10111, 30, 'descripcion', 'Justificacin por la cual se pide el gasto.', 1, 'string', ''),
(10113, 39, 'id_autorizacion	', 'Id de la autorizacion a inspeccionar.', 1, 'int', ''),
(10405, 157, 'clave_interna', 'Una clave interna para darle a este tipo de clientes. Y buscarlos de manera mas rapida.', 1, 'string', ''),
(10406, 157, 'nombre', 'Nombre de la clasificacion', 1, 'string', ''),
(10407, 157, 'descripcion', 'Una descripcion para este tipo de cliente', 0, 'string', 'null'),
(10672, 28, 'id_cliente', 'Id del cliente del cual se listarn sus datos.', 1, 'int', ''),
(10715, 226, 'descripcion', 'Descripcion larga de la clasificacion', 0, 'string', 'null'),
(10716, 226, 'clave_interna', 'Clave interna de la clasificacion', 0, 'string', 'null'),
(10717, 226, 'nombre', 'Nombre de la clasificacion', 0, 'string', 'null'),
(10718, 226, 'id_clasificacion_cliente', 'Id de la clasificacion del cliente a modificar', 1, 'int', ''),
(11179, 86, 'direccion_web', 'Direccion web del proveedor', 0, 'string', 'null'),
(11180, 86, 'limite_credito', 'Limite de credito que otorga el proveedor', 0, 'float', 'null'),
(11181, 86, 'dias_de_credito', 'Dias de credito que otorga el proveedor', 0, 'int', 'null'),
(11182, 86, 'id_tarifa_compra', 'Id de la tarifa de compra por default que aplicara a este porveedor', 0, 'int', 'null'),
(11183, 86, 'direcciones', '<pre>[{\r\n    "tipo": 1,\r\n    "calle": "Francisco I Madero",\r\n    "numero_exterior": "1009A",\r\n\r\n    "numero_interior": 12,\r\n    "colonia": "centro",\r\n    "codigo_postal": "38000",\r\n    "telefono1": "4611223312",\r\n    "telefono2": "",\r\n        "id_ciudad": 3,\r\n    "referencia": "El local naranja"\r\n}]</pre>', 0, 'json', 'null'),
(11184, 86, 'retenciones', 'Retenciones que afectan a este proveedor', 0, 'json', 'null'),
(11185, 86, 'impuestos', 'Ids de los impuestos que afectan a este proveedor', 0, 'json', 'null'),
(11186, 86, 'nombre', 'Nombre del proveedor', 1, 'string', ''),
(11187, 86, 'id_tipo_proveedor', 'Id del tipo proveedor al que pertenece este usuario', 1, 'int', ''),
(11188, 86, 'telefono_personal1', 'Telefono personal del cliente', 0, 'string', 'null'),
(11189, 86, 'password', 'Password del proveedor para entrar al sistema', 1, 'string', ''),
(11190, 86, 'rfc', 'RFC del proveedor', 0, 'string', 'null'),
(11191, 86, 'telefono_personal2', 'Telefono personal alterno del proveedor', 0, 'string', 'null'),
(11192, 86, 'id_moneda', 'Id de la moneda preferente del proveedor', 0, 'int', 'null'),
(11193, 86, 'email', 'Correo electronico del proveedor', 0, 'string', 'null'),
(11194, 86, 'dias_embarque', 'Dias en que el proveedor embarca ( Lunes, Martes, Miercoles, Jueves..)', 0, 'int', 'true'),
(11195, 86, 'activo', 'Si este proveedor esta activo o no', 0, 'bool', 'null'),
(11196, 86, 'cuenta_bancaria', 'Cuenta bancaria del proveedor', 0, 'string', 'null'),
(11197, 86, 'codigo_proveedor', 'Codigo interno para identificar al proveedor', 1, 'string', ''),
(11198, 86, 'tiempo_entrega', 'Tiempo de entrega del proveedor en dias', 0, 'string', 'null'),
(11199, 86, 'representante_legal', 'Representante legal del proveedor', 0, 'string', 'null'),
(11200, 86, 'id_tarifa_venta', 'Id de la tarifa de venta por default que aplicara a etse proveedor', 0, 'int', 'null'),
(11550, 88, 'codigo_proveedor', 'Codigo con el que se peude identificar al proveedor', 0, 'string', 'null'),
(11551, 88, 'id_moneda', 'Id de la moneda que maneja el proveedor', 0, 'int', 'null'),
(11552, 88, 'retenciones', 'Retenciones que afectan a este proveedor', 0, 'json', 'null'),
(11553, 88, 'cuenta_bancaria', 'Cuenta bancaria del proveedor a la cual se le deposita', 0, 'string', 'null'),
(11554, 88, 'limite_credito', 'Limite de credito que otorga el proveedor', 0, 'float', 'null'),
(11555, 88, 'tiempo_entrega', 'Tiempo de entrega del proveedor en dias', 0, 'int', 'null'),
(11556, 88, 'password', 'Password del proveedor para entrar al sistema', 0, 'string', 'null'),
(11557, 88, 'direccion_web', 'Pagina web del proveedor', 0, 'string', 'null'),
(11558, 88, 'activo', 'Si el proveedor sera tomado como activo despues de la insercion o no.', 0, 'bool', '1'),
(11559, 88, 'representante_legal', 'Representante legal del proveedor', 0, 'string', 'null'),
(11560, 88, 'id_tipo_proveedor', 'El id del tipo de proveedor', 0, 'int', 'null'),
(11561, 88, 'rfc', 'RFC del proveedor', 0, 'string', 'null'),
(11562, 88, 'dias_de_credito', 'Dias de credito que otorga el proveedor', 0, 'int', 'null'),
(11563, 88, 'id_proveedor', 'Id del proveedor a editar', 1, 'int', ''),
(11564, 88, 'telefono_personal', 'Telefono del proveedor', 0, 'string', 'null'),
(11565, 88, 'nombre', 'Nombre del proveedor', 0, 'string', 'null'),
(11566, 88, 'email', 'E-mail del proveedor', 0, 'string', 'null'),
(11567, 88, 'dias_embarque', 'Dias en que el proveedor embarca ( Lunes, Martes, Miercoles, Jueves..)', 0, 'int', 'null'),
(11568, 88, 'impuestos', 'Arreglo de enteros que contendran los ids de impuestos por comprar a este proveedor', 0, 'json', 'null'),
(11569, 88, 'id_tarifa_compra', 'Id de la tarifa de compra por default que aplicara a este proveedor', 0, 'int', 'null'),
(11570, 88, 'id_tarifa_venta', 'Id de la tarifa de venta por default que aplicara a este proveedor', 0, 'int', 'null'),
(11571, 88, 'direcciones', '<pre>[{    \r\n"tipo": 1,\r\n    "calle": "Francisco I Madero",\r\n    "numero_exterior": "1009A",\r\n    "numero_interior": 12,\r\n    "colonia": "centro",\r\n    "codigo_postal": "38000",\r\n    "telefono1": "4611223312",\r\n    "telefono2": "",\r\n       "id_ciudad": 3,\r\n    "referencia": "El local naranja"\r\n}] </pre>', 0, 'json', 'null'),
(11604, 158, 'limit', 'Indica el registro final del conjunto de datos que se desea mostrar', 0, 'int', '50'),
(11605, 158, 'query', 'El texto a buscar', 0, 'string', 'null'),
(11606, 158, 'page', 'Indica en que pagina se encuentra dentro del conjunto de resultados que coincidieron en la bsqueda', 0, 'int', 'null'),
(11607, 158, 'start', 'Indica el registro inicial del conjunto de datos que se desea mostrar', 0, 'int', '0'),
(11628, 281, 'id_usuario', 'Filtrar busqueda por `id_usuario` del usuario que los dio de alta.', 0, 'int', 'null'),
(11629, 281, 'query', 'El texto a buscar', 0, 'string', 'null'),
(11630, 281, 'limit', 'Indica el registro final del conjunto de datos que se desea mostrar', 0, 'int', '50'),
(11631, 281, 'start', 'Indica el registro inicial del conjunto de datos que se desea mostrar', 0, 'int', '0'),
(11632, 281, 'id_sucursal', 'Filtrar busqueda por sucursal donde se dieron de alta este cliente. ', 0, 'int', 'null'),
(11633, 281, 'page', 'Indica en que pagina se encuentra dentro del conjunto de resultados que coincidieron en la bsqueda', 0, 'int', 'null'),
(11712, 26, 'descuento_general', 'porcentaje de descuento que se le dara al cliente, va desde 0 - 100 %', 0, 'float', 'null'),
(11713, 26, 'codigo_cliente', 'Codigo interno del cliente', 0, 'string', 'null'),
(11714, 26, 'id_tarifa_compra', 'Id de la tarifa de compra por default que se le asiganara a este cliente', 0, 'int', 'null'),
(11715, 26, 'telefono_personal1', 'Telefono del cliente', 0, 'string', 'null'),
(11716, 26, 'direcciones', '<pre>[{    \r\n"tipo": 1,\r\n    "calle": "Francisco I Madero",\r\n    "numero_exterior": "1009A",\r\n    "numero_interior": 12,\r\n    "colonia": "centro",\r\n    "codigo_postal": "38000",\r\n    "telefono1": "4611223312",\r\n    "telefono2": "",\r\n       "id_ciudad": 3,\r\n    "referencia": "El local naranja"\r\n}]</pre>', 0, 'json', 'null'),
(11717, 26, 'email', 'E-mail del cliente.', 0, 'string', 'null'),
(11718, 26, 'rfc', 'RFC del cliente.', 0, 'string', 'null'),
(11719, 26, 'limite_credito', 'Limite de credito del usuario en la moneda base del sistema.', 0, 'float', 'null'),
(11720, 26, 'id_cliente', 'Id del cliente a modificar.', 1, 'int', ''),
(11721, 26, 'id_cliente_padre', 'Id del cliente padre al cual pertenece, en caso de querer construir una jerarquia de empresas', 0, 'int', 'null'),
(11722, 26, 'id_tarifa_venta', 'Id de la tarifa de venta por default que se le asiganara a este cliente', 0, 'int', 'null'),
(11723, 26, 'razon_social', 'Nombre o razon social del cliente.', 0, 'string', 'null'),
(11724, 26, 'clasificacion_cliente', 'La clasificacin del cliente.', 0, 'int', 'null'),
(11725, 26, 'representante_legal', 'Nombre del representante legal del cliente.', 0, 'string', 'null'),
(11726, 26, 'cuenta_de_mensajeria', 'Este parmetro se vuelve obligatorio si el parmetro Mensajera es true. Especifica la cuenta de mensajera y paquetera del cliente.', 0, 'string', 'null'),
(11727, 26, 'telefono_personal2', 'Telefono personal del cliente', 0, 'string', 'null'),
(11728, 26, 'id_moneda', '`id_moneda` del tipo de moneda que se usara para mostrarle al cliente.El `id_moneda` de la moneda default es 0, que corresponde al peso mexicano.', 0, 'int', '0'),
(11729, 26, 'curp', 'CURP del cliente.', 0, 'string', 'null'),
(11730, 26, 'password_anterior', 'En caso de modificar el password, es requerido este campo', 0, 'string', 'null'),
(11731, 26, 'denominacion_comercial', 'Nombre comercial del cliente.', 0, 'string', 'null'),
(11732, 26, 'sitio_web', 'Direccin web del cliente.', 0, 'string', 'null'),
(11733, 26, 'password', 'Password del cliente', 0, 'string', 'null'),
(11794, 50, 'rfc', 'RFC del agente', 0, 'string', 'null'),
(11795, 50, 'id_moneda', 'Id de la moneda del cliente', 0, 'int', 'null'),
(11796, 50, 'direcciones', 'Arreglo de direcciones del usuario <pre>[{    \r\n"tipo": 1,\r\n    "calle": "Francisco I Madero",\r\n    "numero_exterior": "1009A",\r\n    "numero_interior": 12,\r\n    "colonia": "centro",\r\n    "codigo_postal": "38000",\r\n    "telefono1": "4611223312",\r\n    "telefono2": "",\r\n       "id_ciudad": 3,\r\n    "referencia": "El local naranja"\r\n}]</pre>', 0, 'json', 'null'),
(11797, 50, 'comision_ventas', 'El porcentaje de la comision que ganara este usuario especificamente por ventas', 0, 'float', '0'),
(11798, 50, 'id_tarifa_compra', 'Id de la tarifa de compra por default que se aplicara a este usuario', 0, 'int', 'null'),
(11799, 50, 'dias_de_credito', 'Dias de credito del cliente', 0, 'int', 'null'),
(11800, 50, 'denominacion_comercial', 'Denominacion comercial del cliente', 0, 'string', 'null'),
(11801, 50, 'nombre', 'Nombre del nuevo usuario.', 1, 'string', ''),
(11802, 50, 'correo_electronico', 'Correo Electronico del agente', 0, 'string', 'null'),
(11803, 50, 'intereses_moratorios', 'Intereses moratorios del cliente', 0, 'float', 'null'),
(11804, 50, 'telefono_personal1', 'Telefono personal del usuario', 0, 'string', 'null'),
(11805, 50, 'cuenta_mensajeria', 'Cuenta de mensajeria del usuario', 0, 'string', 'null'),
(11806, 50, 'descuento', 'El porcentaje de descuento que se le hara al usuario al venderle', 0, 'float', 'null'),
(11807, 50, 'limite_credito', 'El limite de credito del usuario', 0, 'float', '0'),
(11808, 50, 'representante_legal', 'Nombre del representante legal del usuario', 0, 'string', 'null'),
(11809, 50, 'impuestos', 'Objeto que contendra los impuestos que afectan a este usuario', 0, 'json', 'null'),
(11810, 50, 'id_clasificacion_proveedor', 'Id de la clasificacion del proveedor', 0, 'int', 'null'),
(11811, 50, 'id_clasificacion_cliente', 'Id de la clasificacion del cliente', 0, 'int', 'null'),
(11812, 50, 'dias_de_embarque', 'Dias de embarque del proveedor ( Lunes, Miercoles, Viernes, etc)', 0, 'int', 'null'),
(11813, 50, 'retenciones', 'Ids de las retenciones que afectan a este usuario', 0, 'json', 'null'),
(11814, 50, 'id_tarifa_venta', 'Id de la tarifa de venta por default que se aplicara a este usuario', 0, 'int', 'null'),
(11815, 50, 'dia_de_revision', 'Fecha de revision del cliente', 0, 'string', 'null'),
(11816, 50, 'saldo_del_ejercicio', 'Saldo del ejercicio del cliente', 0, 'float', 'null'),
(11817, 50, 'pagina_web', 'Pagina web del usuario', 0, 'string', 'null'),
(11818, 50, 'facturar_a_terceros', 'Si el usuario puede facturar a terceros', 0, 'bool', 'null'),
(11819, 50, 'tiempo_entrega', 'Numero de dias que tarda el proveedor en realizar una entrega', 0, 'int', 'null'),
(11820, 50, 'id_sucursal', 'Id de la sucursal a la que se quiere relacionar un usuario. Es decir, cual es su sucursal matriz. De omitirse se dejara nulo.', 0, 'int', 'null'),
(11821, 50, 'codigo_usuario', 'Codigo interno del usuario', 1, 'string', ''),
(11822, 50, 'ventas_a_credito', 'Ventas a credito del cliente', 0, 'int', 'null'),
(11823, 50, 'salario', 'Si el usuario contara con un salario especial no especificado por el rol', 0, 'float', 'null'),
(11824, 50, 'dia_de_pago', 'Fecha de pago del cliente', 0, 'string', 'null'),
(11825, 50, 'telefono_personal2', 'Telefono personal del usuario', 0, 'string', 'null'),
(11826, 50, 'id_rol', 'El rol que este usuario tomara en el sistema. ', 1, 'int', ''),
(11827, 50, 'cuenta_bancaria', 'Cuenta bancaria del usuario', 0, 'string', 'null'),
(11828, 50, 'mensajeria', 'Si el cliente tiene una cuenta de mensajeria', 0, 'bool', 'null'),
(11829, 50, 'curp', 'CURP del agente', 0, 'string', 'null'),
(11830, 50, 'password', 'Password del usuario. Debe ser mayor a 4 caracteres y no puede ser el mismo que el codigo de usuario.', 1, 'string', ''),
(11831, 50, 'id_usuario_padre', 'Id del usuario padre del usuario', 0, 'int', 'null'),
(11832, 52, 'denominacion_comercial', 'Denominacion comercial del cliente', 0, 'string', 'null'),
(11833, 52, 'descuento_es_porcentaje', 'Si el descuento es un porcentaje o es un valor fijo', 0, 'bool', 'null'),
(11834, 52, 'dia_de_revision', 'Fecha de revision del cliente', 0, 'string', 'null'),
(11835, 52, 'cuenta_mensajeria', 'Cuenta de mensajeria del usuario', 0, 'string', 'null'),
(11836, 52, 'cuenta_bancaria', 'Cuenta bancaria del usuario', 0, 'string', 'null'),
(11837, 52, 'id_usuario_padre', 'Id del usuario padre de este usuario', 0, 'int', 'null'),
(11838, 52, 'saldo_del_ejercicio', 'Saldo del ejercicio del cliente', 0, 'float', 'null'),
(11839, 52, 'id_clasificacion_cliente', 'Id de la clasificacion del cliente', 0, 'int', 'null'),
(11840, 52, 'retenciones', 'Ids de las retenciones que afectan a este usuario', 0, 'json', 'null'),
(11841, 52, 'ventas_a_credito', 'Ventas a credito del cliente', 0, 'int', 'null'),
(11842, 52, 'telefono_personal_2', 'Telefono personal alterno del usuario', 0, 'string', 'null'),
(11843, 52, 'impuestos', 'Objeto que contendra los ids de los impuestos que afectan a este usuario', 0, 'json', 'null'),
(11844, 52, 'mensajeria', 'Si el usuario tiene una cuenta de mensajeria', 0, 'bool', 'null'),
(11845, 52, 'facturar_a_terceros', 'Si el usuario puede facturar a terceros', 0, 'bool', 'null'),
(11846, 52, 'pagina_web', 'Pagina web del usuario', 0, 'string', 'null'),
(11847, 52, 'limite_de_credito', 'Limite de credito del usuario', 0, 'float', 'null'),
(11848, 52, 'descuento', 'Descuento que se le hara al usuario al venderle', 0, 'float', 'null'),
(11849, 52, 'telefono_personal_1', 'telefono personal del usuario', 0, 'string', 'null'),
(11850, 52, 'salario', 'Si el usuario contara con un salario no establecido por el rol', 0, 'float', 'null'),
(11851, 52, 'id_usuario', 'Usuario a editar', 1, 'int', ''),
(11852, 52, 'dia_de_pago', 'Fecha de pago del cliente', 0, 'string', 'null'),
(11853, 52, 'id_clasificacion_proveedor', 'Id de la clasificacion del proveedor', 0, 'int', 'null'),
(11854, 52, 'nombre', 'Nombre del usuario', 0, 'string', 'null'),
(11855, 52, 'codigo_usuario', 'Codigo interno del usuario', 0, 'string', 'null'),
(11856, 52, 'correo_electronico', 'correo electronico del usuario', 0, 'string', 'null'),
(11857, 52, 'password', 'Password del usuario', 0, 'string', 'null'),
(11858, 52, 'comision_ventas', 'El porcentaje que gana como comision por ventas este usuario', 0, 'float', 'null'),
(11859, 52, 'dias_de_embarque', 'Dias de emabrque del proveedor ( Lunes, Miercoles, etc)', 0, 'int', 'null'),
(11860, 52, 'representante_legal', 'Nombre del representante legal del usuario', 0, 'string', 'null'),
(11861, 52, 'rfc', 'RFC del usuario', 0, 'string', 'null'),
(11862, 52, 'dias_de_credito', 'Dias de credito del cliente', 0, 'int', 'null'),
(11863, 52, 'curp', 'CURP del usuario', 0, 'string', 'null'),
(11864, 52, 'intereses_moratorios', 'Intereses moratorios del cliente', 0, 'float', 'null'),
(11865, 52, 'id_moneda', 'Id de la moneda preferente del usuario', 0, 'int', 'null'),
(11866, 52, 'id_sucursal', 'Id de la sucursal en la que fue creada este usuario o donde labora.', 0, 'int', 'null'),
(11867, 52, 'tiempo_entrega', 'Numero de dias que tarda el proveedor en realizar una entrega', 0, 'int', 'null'),
(11868, 52, 'id_rol', 'Id rol del usuario', 0, 'int', 'null'),
(11869, 52, 'id_tarifa_compra', 'Id de la tarifa de compra por default que aplicara a este usuario.', 0, 'int', 'null'),
(11870, 52, 'id_tarifa_venta', 'Id de la tarifa de venta por default que aplicara a este usuario', 0, 'int', 'null'),
(11871, 52, 'direcciones', '<pre>[{    \r\n"tipo": 1,\r\n    "calle": "Francisco I Madero",\r\n    "numero_exterior": "1009A",\r\n    "numero_interior": 12,\r\n    "colonia": "centro",\r\n    "codigo_postal": "38000",\r\n    "telefono1": "4611223312",\r\n    "telefono2": "",\r\n       "id_ciudad": 3,\r\n    "referencia": "El local naranja"\r\n}] </pre>', 0, 'json', 'null'),
(12111, 21, 'id_empresa', 'El id de la empresa a eliminar.', 1, 'string', ''),
(12695, 22, 'id_moneda', 'Id de la moneda base que manejaran las sucursales', 0, 'string', '0'),
(12696, 22, 'texto_extra', 'Comentarios sobre la ubicacin de la empresa.', 0, 'string', 'null'),
(12697, 22, 'cedula', 'url de la cedula de la empresa', 0, 'string', 'null'),
(12698, 22, 'razon_social', 'El nombre de la nueva empresa.', 0, 'string', 'null'),
(12699, 22, 'impuestos_venta', 'Impuestos de venta por default que se heredan a las sucursales y estas a su vez a los productos', 0, 'json', 'null'),
(12700, 22, 'id_empresa', 'Id de la empresa a modificar', 1, 'int', ''),
(12701, 22, 'impuesto_compra', 'Impuestos de compra por default que se heredan a las sucursales y estas a su vez a los productos', 0, 'json', 'null'),
(12702, 22, 'email', 'Correo electronico de la empresa', 0, 'string', 'null'),
(12703, 22, 'representante_legal', 'El nombre del representante legal de la nueva empresa.', 0, 'string', 'null'),
(12704, 22, 'logo', 'url del logo de la empresa', 0, 'string', 'null'),
(12705, 22, 'direccion', '<pre>[{    "tipo": "fiscal",    "calle": "Francisco I Madero",    "numero_exterior": "1009A",    "numero_interior": 12,    "colonia": "centro",    "codigo_postal": "38000",    "telefono1": "4611223312",    "telefono2": "",       "id_ciudad": 3,    "referencia": "El local naranja"}]</pre>', 0, 'json', 'null'),
(12862, 201, 'id_impuesto', 'Id del impuesto a editar', 1, 'int', ''),
(12863, 201, 'incluido_en_importe_base', 'Indica si el importe del impuesto debe ser incluido en el importe base para el calculo de los siguientes impuestos', 1, 'bool', 'null'),
(12864, 201, 'tipo', 'El mtodo de calculo del importe del impuesto. Porcentaje (0), Importe fijo (1), ninguno (2), saldo pendiente (3)', 1, 'int', 'null'),
(12865, 201, 'secuencia', 'Es usado para ordenar las lineas de impuestos de menor a mayor secuencia. El orden es importante si un impuesto tiene varios impuestos hijos. En este caso, el orden de evaluacin es importante.', 1, 'int', 'null'),
(12866, 201, 'descripcion', 'Puede usarse para poner la descripcin de un impuesto o un cdigo.', 1, 'string', 'null'),
(12867, 201, 'impuestos_en_hijos', 'Indica si el calculo de impuestos se basa en el calculo de los impuestos hijos en lugar del importe total.', 1, 'bool', 'null'),
(12868, 201, 'impuestos_hijos', 'En caso de que el impuesto tenga.', 1, 'json', 'null'),
(12869, 201, 'nombre', 'Nombre del impuesto', 0, 'string', 'null'),
(12870, 201, 'importe', 'Para impuestos de tipo porcentaje, introdusca valor % entre 0-1', 1, 'float', 'null'),
(12871, 201, 'codigo', 'Código del impuesto', 1, 'string', ''),
(12872, 201, 'aplicacion', 'Aplica a ventas (0), compras (1), todas (2)', 1, 'string', ''),
(12873, 135, 'impuestos_hijos', 'En caso de que el impuesto tenga. (son objetos del mismo tipo)', 1, 'json', '[]'),
(12874, 135, 'aplicacion', 'Aplica a ventas (0), compras (1), todas (2)', 1, 'int', 'null'),
(12875, 135, 'codigo', 'Cdigo del impuesto', 1, 'string', 'null'),
(12876, 135, 'secuencia', 'Es usado para ordenar las lineas de impuestos de menor a mayor secuencia. El orden es importante si un impuesto tiene varios impuestos hijos. En este caso, el orden de evaluacin es importante. ', 1, 'int', '1'),
(12877, 135, 'tipo', 'El metodo de calculo del importe del impuesto. Porcentaje (0), Importe fijo (1), ninguno (2), saldo pendiente (3)', 1, 'int', ''),
(12878, 135, 'impuestos_en_hijos', 'Indica si el calculo de impuestos se basa en el calculo de los impuestos hijos en lugar del importe total.', 1, 'bool', '0'),
(12879, 135, 'nombre', 'Nombre del impuesto', 1, 'string', ''),
(12880, 135, 'descripcion', 'Puede usarse para poner la descripcin de un impuesto o un cdigo. ', 0, 'string', 'null'),
(12881, 135, 'importe', 'Para impuestos de tipo porcentaje, introdusca valor % entre 0-1', 1, 'float', ''),
(12882, 135, 'incluido_en_importe_base', 'Indica si el importe del impuesto debe ser incluido en el importe base para el calculo de los siguientes impuestos', 1, 'bool', '0'),
(12883, 204, 'start', 'Indica desde que registro se desea obtener a partir del conjunto de resultados productos de la bsqueda.', 0, 'string', 'null'),
(12884, 204, 'sort', 'Propiedad por la cual se ordenaran el conjunto de registros', 0, 'string', 'null'),
(12885, 204, 'limit', 'Indica hasta que registro se desea obtener a partir del conjunto de resultados productos de la bsqueda.', 0, 'string', 'null'),
(12886, 204, 'query', 'Valor que se buscara en la consulta', 0, 'string', 'null'),
(12910, 19, 'representante_legal', 'El nombre del representante legal de la nueva empresa.', 0, 'string', 'null'),
(12911, 19, 'cedula', 'url de la imagen de la cedula', 0, 'string', 'null'),
(12912, 19, 'logo', 'url del logo de la empresa', 0, 'string', 'null'),
(12913, 19, 'impuestos_compra', 'Impuestos de compra por default que se heredan a las sucursales y estas a su vez a los productos', 1, 'json', ''),
(12914, 19, 'razon_social', 'El nombre de la nueva empresa.', 1, 'string', ''),
(12915, 19, 'rfc', 'RFC de la nueva empresa.', 1, 'string', ''),
(12916, 19, 'sucursales', 'Arreglo de objetos con un `id_sucursal` cada uno que indicara que sucursales pertenecen a esta empresa.', 0, 'json', 'null'),
(12917, 19, 'direccion', '<pre>[{    "tipo": "fiscal",    "calle": "Francisco I Madero",    "numero_exterior": "1009A",    "numero_interior": 12,    "colonia": "centro",    "codigo_postal": "38000",    "telefono1": "4611223312",    "telefono2": "",       "id_ciudad": 3,    "referencia": "El local naranja"}]</pre>', 1, 'string', 'null'),
(12918, 19, 'id_moneda', 'Id de la moneda base que manejaran las sucursales', 1, 'int', '0'),
(12919, 19, 'impuestos_venta', 'Impuestos de venta por default que se heredan a las sucursales y estas a su vez a los productos', 1, 'json', 'null'),
(12920, 19, 'texto_extra', 'Comentarios sobre la ubicacin de la empresa.', 0, 'string', 'null'),
(12921, 19, 'email', 'Correo electronico de la empresa', 0, 'string', 'null'),
(12922, 18, 'sort', 'Propiedad por la cual se ordenaran el conjunto de registros', 0, 'string', 'null'),
(12923, 18, 'query', 'Valor que se buscara en la consulta', 0, 'string', 'null'),
(12924, 18, 'activa', 'Verdadero para mostrar solo las empresas activas. En caso de false, se mostraran ambas.', 0, 'bool', 'false'),
(12925, 18, 'limit', 'Indica hasta que registro se desea obtener a partir del conjunto de resultados productos de la bsqueda.', 0, 'string', 'null'),
(12926, 18, 'start', 'Indica desde que registro se desea obtener a partir del conjunto de resultados productos de la bsqueda.', 0, 'string', 'null'),
(12927, 24, 'razon_social', 'Se refiere al nombre con la que est registrada la empresa o cooperativa en el Registro Mercantil o bien el nombre del cliente en caso de no estar registrado.', 1, 'string', ''),
(12928, 24, 'password', 'Password del cliente, si no se envia se le creara uno automaticamente.', 0, 'string', 'null'),
(12929, 24, 'clasificacion_cliente', 'Id de la clasificacion del cliente.', 0, 'int', 'null'),
(12930, 24, 'sitio_web', 'Direccin web del cliente.', 0, 'string', 'null'),
(12931, 24, 'telefono_personal2', 'Otro telefono del cliente', 0, 'string', 'null'),
(12932, 24, 'direcciones', '<pre>[{    "tipo": "fiscal",    "calle": "Francisco I Madero",    "numero_exterior": "1009A",    "numero_interior": 12,    "colonia": "centro",    "codigo_postal": "38000",    "telefono1": "4611223312",    "telefono2": "",       "id_ciudad": 3,    "referencia": "El local naranja"}]</pre>', 0, 'json', 'null'),
(12933, 24, 'email', 'E-mail del cliente', 0, 'string', 'null'),
(12934, 24, 'id_cliente_padre', 'Id del cliente padre al cual pertenece, en caso de querer construir una jerarquia de empresas', 0, 'int', 'null'),
(12935, 24, 'descuento_general', 'porcentaje de descuento que se le dara al cliente, va desde 0 - 100 %', 0, 'float', '0'),
(12936, 24, 'representante_legal', 'Nombre del representante legal del cliente.', 0, 'string', 'null'),
(12937, 24, 'id_moneda', '`id_moneda` del tipo de moneda que se usara para mostrarle al cliente.El `id_moneda` de la moneda default es 0, que corresponde al peso mexicano.', 0, 'int', '1'),
(12938, 24, 'limite_credito', 'Limite de credito del usuario en la moneda base del sistema.', 0, 'float', '0'),
(12939, 24, 'id_tarifa_venta', 'Id de la tarifa de venta por default para este cliente', 0, 'int', 'null'),
(12940, 24, 'id_tarifa_compra', 'Id de la tarifa de compra por default para este cliente', 0, 'int', 'null'),
(12941, 24, 'curp', 'CURP del cliente.', 0, 'string', 'null'),
(12942, 24, 'rfc', 'RFC del cliente.', 0, 'string', 'null'),
(12943, 24, 'telefono_personal1', 'Telefono del cliente', 0, 'string', 'null'),
(12944, 24, 'codigo_cliente', 'Codigo interno del cliente', 0, 'string', 'null'),
(12945, 24, 'denominacion_comercial', 'Se refiere al nombre con que se conoce comercialmente a la empresa. ', 0, 'string', 'null'),
(12946, 24, 'cuenta_de_mensajeria', 'Cuenta de mensajera del cliente', 0, 'string', 'null'),
(12947, 75, 'activo', 'Si este valor no es pasado, se listaran sucursales tanto activas como inactivas, si su valor es true, solo se mostrarn las sucursales activas, si es false, solo se mostraran las sucursales inactivas.', 0, 'bool', 'null'),
(12948, 75, 'id_empresa', 'Id de la empresa de la cual se listaran sus sucursales.', 0, 'int', 'null'),
(12949, 75, 'sort', 'Propiedad por la cual se ordenaran el conjunto de registros: `asc` o `desc`', 0, 'string', 'null'),
(12950, 75, 'start', 'Indica desde que registro se desea obtener a partir del conjunto de resultados productos de la bsqueda.', 0, 'int', 'null'),
(12951, 75, 'limit', 'Indica hasta que registro se desea obtener a partir del conjunto de resultados productos de la bsqueda.', 0, 'int', 'null'),
(12952, 75, 'query', 'Valor que se buscara en la consulta', 0, 'string', 'null'),
(12953, 78, 'id_gerente', 'Id del gerente de la sucursal', 0, 'int', 'null'),
(12954, 78, 'rfc', 'Rfc de la sucursal', 0, 'string', 'null'),
(12955, 78, 'activo', 'Indica si esta sucursal estar activa', 0, 'bool', 'null'),
(12956, 78, 'empresas', '(DE ESTO ES LO QUE VEREMOS EL MARTES CON IRATZIO) Objeto que contendra los ids de las empresas a las que esta sucursal pertenece, por lo menos tiene que haber una empresa. En este JSON, opcionalmente junto con el id de la empresa, aapreceran dos campos que seran margen_utilidad y descuento, que indicaran que todos los productos de esa empresa ofrecidos en esta sucursal tendran un margen de utilidad y/o un descuento con los valores en esos campos', 0, 'json', 'null'),
(12957, 78, 'id_moneda', 'Id de la moneda base que manejaran las sucursales', 0, 'int', 'null'),
(12958, 78, 'direccion', 'Arreglo de direcciones de la sucursal, pueden ser direcciones de tipo fiscal, postal, de envio, etc', 0, 'json', 'null'),
(12959, 78, 'razon_social', 'Razon social de la sucursal', 0, 'string', 'null'),
(12960, 78, 'descripcion', 'Descripcion de la sucursal', 0, 'string', 'null'),
(12961, 78, 'id_sucursal', 'Id de la sucursal a modificar', 1, 'int', ''),
(12962, 78, 'saldo_a_favor', 'Saldo a favor de la sucursal', 0, 'float', 'null'),
(12963, 78, 'impuestos_venta', 'Objeto que contendra los ids de los impuestos que afectana esta sucursal', 0, 'json', '[]'),
(12964, 78, 'impuestos_compra', 'Impuestos de compra por default que se heredan a las sucursales y estas a su vez a los productos-', 0, 'json', '[]'),
(13050, 77, 'empresas', 'Arreglo de `id_empresa` de las empresas a las que pertenece esta sucursal.', 0, 'json', 'null'),
(13051, 77, 'saldo_a_favor', 'Saldo a favor de la sucursal.', 0, 'float', '0'),
(13052, 77, 'impuestos_venta', 'Impuestos de venta por default que se heredan a las sucursales y estas a su vez a los productos', 0, 'json', 'null'),
(13053, 77, 'direccion', 'Arreglo de direcciones de la sucursal, pueden ser direcciones de tipo fiscal, postal, de envo, etc.', 1, 'json', 'null'),
(13054, 77, 'razon_social', 'Razon social de la sucursal', 1, 'string', ''),
(13055, 77, 'activo', 'Si esta sucursal estara activa inmediatamente despues de ser creada', 0, 'bool', '1'),
(13056, 77, 'id_moneda', 'Id de la moneda base que manejaran las sucursales', 0, 'int', '1'),
(13057, 77, 'descripcion', 'Descripcion de la sucursal', 0, 'string', 'null'),
(13058, 77, 'id_gerente', 'ID del usuario que sera gerente de esta sucursal. Para que sea valido este usuario debe tener el nivel de acceso apropiado.', 0, 'int', 'null'),
(13059, 77, 'rfc', 'RFC de la sucursal', 0, 'string', 'null'),
(13060, 77, 'impuestos_compra', 'Impuestos de compra por default que se heredan a las sucursales y estas a su vez a los productos', 0, 'json', 'null'),
(13084, 315, 'id_tarifa', 'Id de la tarifa a activar', 1, 'int', ''),
(13085, 312, 'tipo_tarifa', 'Puede ser "venta" o "compra" e indica si la tarifa sera aplicada en las operaciones de venta o compra.', 1, 'string', ''),
(13086, 312, 'formulas', 'Un arreglo de objetos que contendran la siguiente informacion:<pre>        "formulas" : [       {          "id_producto"                 : null,          "id_unidad"                   : null,          "id_clasificacion_producto"   : null,          "id_servicio"                 : null,          "id_paquete"                  : null,          "id_clasificacion_servicio"   : null,          "cantidad_minima"             : null,          "id_tarifa"                   : -1,          "porcentaje_utilidad"         : 0.00,          "utilidad_neta"               : 0.00,          "metodo_redondeo"             : 0.00,          "margen_min"                  : 0.00,          "margen_max"                  : 0.00,          "secuencia"                   : 5                 }       ]   </pre>Para mas informacion de estos parametros consulte la documentacionde este metodo. El parametro id_tarifa es la tarifa base de donde se sacara el Precio Base para la formula.', 0, 'json', 'null'),
(13087, 312, 'fecha_fin', 'Fecha a partir de la cual se dejaran de aplicar las formulas de esta tarifa', 0, 'string', 'null'),
(13088, 312, 'id_moneda', 'Id de la moneda con la que se realizaran las operaciones.', 1, 'int', ''),
(13089, 312, 'default', 'Si esta tarifa va a ser la default del sistema o no', 0, 'bool', 'null'),
(13090, 312, 'fecha_inicio', 'Fecha a partir de la cual se aplicaran las formulas de esta tarifa', 0, 'string', 'null'),
(13091, 312, 'nombre', 'Nombre de la tarifa.', 1, 'string', ''),
(13092, 314, 'id_tarifa', 'Id de la tarifa a desactivar', 1, 'int', ''),
(13093, 313, 'nombre', 'Nombre de la tarifa', 0, 'string', 'null'),
(13094, 313, 'fecha_fin', 'Fecha a partir de la cual se dejaran de aplicar las formulas de esta tarifa', 0, 'string', 'null'),
(13095, 313, 'default', 'Si esta tarifa sera la default', 0, 'bool', 'null'),
(13096, 313, 'fecha_inicio', 'Fecha a partir de la cual se aplicaran las formulas de esta tarifa', 0, 'string', 'null');
INSERT INTO `argumento` (`id_argumento`, `id_metodo`, `nombre`, `descripcion`, `ahuevo`, `tipo`, `defaults`) VALUES
(13097, 313, 'tipo_tarifa', 'Puede ser "compra" o "venta" e indica si la tarifa sera de compra o de venta', 0, 'string', 'null'),
(13098, 313, 'id_moneda', 'Id de la moneda con la cual se realizaran todos los movimientos de la tarifa', 0, 'int', 'null'),
(13099, 313, 'id_tarifa', 'Id de la tarifa a editar', 1, 'int', ''),
(13100, 313, 'formulas', 'Un arreglo de objetos que contendran la siguiente informacion:<pre>        "formulas" : [       {          "id_producto"                 : null,          "id_unidad"                   : null,          "id_clasificacion_producto"   : null,          "id_servicio"                 : null,          "id_paquete"                  : null,          "id_clasificacion_servicio"   : null,          "cantidad_minima"             : null,          "id_tarifa"                   : -1,          "porcentaje_utilidad"         : 0.00,          "utilidad_neta"               : 0.00,          "metodo_redondeo"             : 0.00,          "margen_min"                  : 0.00,          "margen_max"                  : 0.00,          "secuencia"                   : 5                 }       ]   </pre>Para mas informacion de estos parametros consulte la documentacion del metodo nuevaTarifa. El parametro id_tarifa es la tarifa base de donde se sacara el Precio Base para la formula. La tarifa -1 inidica que no hay una tarifa base, sino que se toma el precio base del producto, o su costo base, segun marque su metodo de costeo.', 0, 'json', 'null'),
(13101, 311, 'id_unidad', 'Id de la unidad en la que esta el producto del cual se calculara el precio', 0, 'int', 'null'),
(13102, 311, 'id_servicio', 'Id del servicio al cual se le desea calcula su precio', 0, 'int', 'null'),
(13103, 311, 'id_producto', 'Id del producto al cual se le desea calcular su precio', 0, 'int', 'null'),
(13104, 311, 'tipo_tarifa', 'Puede ser "compra" o "venta" e indica si los precios a calcular seran en base a tarifas de compra o de venta', 1, 'string', ''),
(13105, 311, 'id_paquete', 'Id del paquete al cual se le desea calcular su precio', 0, 'int', 'null'),
(13106, 311, 'id_tarifa', 'Si se quiere saber el precio de un producto en una tarifa en especial se especifica con este parametro', 0, 'int', 'null'),
(13107, 311, 'cantidad', 'Cantidad de producto a calcular su precio. Pues existen algunas reglas que aplican solo si hay una cierta cantidad de producto', 0, 'float', 'null'),
(13128, 142, 'id_producto', 'Id del producto a desactivar', 1, 'int', ''),
(13129, 282, 'query', 'Buscar productos por codigo_producto, nombre_producto, descripcion_producto.', 1, 'string', 'null'),
(13130, 282, 'id_sucursal', 'Buscar las existencias de este producto en una sucursal especifica.', 0, 'int', 'null'),
(13131, 282, 'id_producto', 'Si estoy buscando un producto del cual ya tengo conocido su id. Si se envia `id_producto` todos los demas campos seran ignorados.', 0, 'int', 'null'),
(13179, 44, 'costo_estandar', 'Este valor sera tomado solo en caso de seleccionar `costo estandar` como mtodo de costeo', 1, 'string', 'null'),
(13180, 44, 'id_categoria', 'id de la categora a la cual pertenece el producto', 0, 'int', 'null'),
(13181, 44, 'codigo_de_barras', 'El Codigo de barras para este producto', 0, 'string', 'null'),
(13182, 44, 'nombre_producto', 'Nombre del producto', 1, 'string', ''),
(13183, 44, 'metodo_costeo', '`costo estandar` el precio de coste es fijo y se recalcula periodicamente (normalmente al finalizar el anio).`precio` ', 1, 'string', ''),
(13184, 44, 'id_unidad', 'Unidad de medida por defecto empelada para todas las operaciones en el stok', 0, 'int', 'null'),
(13185, 44, 'descripcion_producto', 'Descripcion larga del producto', 0, 'string', 'null'),
(13186, 44, 'impuestos', 'array de ids de impuestos que tiene este producto', 0, 'json', 'null'),
(13187, 44, 'foto_del_producto', 'url a una foto de este producto', 0, 'string', 'null'),
(13188, 44, 'precio_de_venta', 'Precio base para calcular el precio del cliente', 0, 'int', 'null'),
(13189, 44, 'id_empresas', 'Arreglo que contendra los ids de las empresas a las que pertenece este producto, en caso de no indicarlo este producto pertenecera a todas las empresas que esten relacionadas con la sucursal', 0, 'json', 'null'),
(13190, 44, 'compra_en_mostrador', 'Verdadero si este producto se puede comprar en mostrador, para aquello de compra-venta', 1, 'bool', ''),
(13191, 44, 'id_unidad_compra', 'Unidad de medida por defecto utilizada para los pedidos de compra. Debe estar en la misma categora que la unidad de medida por defecto.', 1, 'string', 'null'),
(13192, 44, 'codigo_producto', 'El codigo de control de la empresa para este producto, no se puede repetir', 1, 'string', ''),
(13193, 44, 'control_de_existencia', '00000001 = Unidades. 00000010 = Caractersticas. 00000100 = Series. 00001000 = Pedimentos. 00010000 = Lote', 0, 'int', 'null'),
(13194, 44, 'activo', 'Si queremos que este activo o no este producto despues de crearlo.', 1, 'bool', ''),
(13208, 194, 'saldo', 'Saldo que ha sido aportado a la venta', 0, 'float', '0'),
(13209, 194, 'impuesto', 'Monto aportado por impuestos', 1, 'float', ''),
(13210, 194, 'tipo_venta', 'Si esta es una venta a  credito o de contado', 1, 'string', ''),
(13211, 194, 'descuento', 'Monto descontado por descuentos', 1, 'float', ''),
(13212, 194, 'total', 'Total de la venta', 1, 'float', ''),
(13213, 194, 'id_comprador_venta', 'Id del usuario al que se le vende, si es a una sucursal, el id se pasa negativo', 1, 'int', ''),
(13214, 194, 'tipo_de_pago', 'Si la venta es pagada con tarjeta, con efectivo o con cheque', 0, 'string', 'null'),
(13215, 194, 'datos_cheque', 'Si el tipo de pago fue en cheque, se pasan el nombre del banco, el monto y los ultimos 4 numeros de cada cheque que se uso para pagar la venta', 0, 'json', 'null'),
(13216, 194, 'detalle_paquete', 'Arreglo de ids de los paquetes con sus cantidades que se venden', 0, 'json', 'null'),
(13217, 194, 'detalle_venta', '{            id_producto: 5,            cantidad: 1,            precio: 5,            descuento: 0,            impuesto: 0,            retencion: 0,            id_unidad: 1}Un arreglo en forma de json co los parametros de cada producto.', 0, 'json', 'null'),
(13218, 194, 'subtotal', 'Subtotal de la venta antes de ser afectada por impuestos, descuentos y retenciones', 1, 'float', ''),
(13219, 194, 'detalle_orden', 'Objetos que contendran los ids y las cantidades de las ordenes que se venden', 0, 'json', 'null'),
(13220, 194, 'id_sucursal', 'Id de la sucursal de la cual se tomaran los productos.', 0, 'int', 'null'),
(13221, 286, 'descripcion', 'Descripcion del tipo de almacen', 0, 'string', 'null'),
(13222, 286, 'id_tipo_almacen', 'Id del tipo de almacen a editar', 1, 'int', ''),
(13223, 288, 'id_tipo_almacen', 'Id del tipo de almacen a editar', 1, 'int', ''),
(13229, 89, 'motivo', 'Motivo del movimiento', 0, 'string', 'null'),
(13230, 89, 'id_almacen', 'Id del almacen que se surte', 1, 'int', ''),
(13231, 89, 'productos', 'Objeto que contendr los ids de los productos, sus unidades y sus cantidades', 1, 'json', ''),
(13232, 138, 'id_tipo_almacen', 'Se listaran los almacenes de este tipo', 0, 'int', 'null'),
(13233, 138, 'id_empresa', 'Id de la empresa de la cual se listaran sus almacenes', 0, 'int', 'null'),
(13234, 138, 'activo', 'Si este valor no es obtenido, se mostraran almacenes tanto activos como inactivos. Si es verdadero, solo se lsitaran los activos, si es falso solo se lsitaran los inactivos.', 0, 'bool', 'null'),
(13235, 138, 'id_sucursal', 'el id de la sucursal de la cual se listaran sus almacenes', 0, 'int', 'null'),
(13236, 137, 'nombre', 'nombre del almacen', 1, 'string', ''),
(13237, 137, 'id_sucursal', 'El id de la sucursal a la que pertenecera este almacen.', 1, 'int', ''),
(13238, 137, 'descripcion', 'Descripcion extesa del almacen', 0, 'string', 'null'),
(13239, 137, 'id_tipo_almacen', 'Id del tipo de almacen ', 1, 'int', ''),
(13240, 137, 'id_empresa', 'Id de la empresa a la que pertenecen los productos de este almacen', 1, 'int', ''),
(13244, 287, 'query', 'Buscar por descripcion', 0, 'string', 'null'),
(13246, 285, 'descripcion', 'Descripcion de este tipo de almacen', 1, 'string', ''),
(13248, 253, 'id_traspaso', 'Id del traspaso a editar', 1, 'int', ''),
(13249, 253, 'fecha_envio_programada', 'Fecha de envio programada', 0, 'string', 'null'),
(13250, 253, 'productos', 'Productos a enviar con sus cantidades', 0, 'json', 'null'),
(13251, 249, 'id_traspaso', 'Id del traspaso a enviar', 1, 'int', ''),
(13252, 252, 'id_almacen_recibe', 'Se listaran los traspasos recibidos por este almacen', 0, 'int', 'null'),
(13253, 252, 'estado', 'Se listaran los traspasos cuyo estado sea este, si no es obtenido este valor, se listaran los traspasos de cualqueir estado', 0, 'string', 'null'),
(13254, 252, 'cancelado', 'Si este valor no es obtenido, se listaran los traspasos tanto cancelados como no cancelados. Si su valor es verdadero se listaran solo los traspasos cancelados, si su valor es falso, se listaran los traspasos no cancelados', 0, 'bool', 'null'),
(13255, 252, 'ordenar', 'Nombre de la columna por la cual se ordenara', 0, 'string', 'null'),
(13256, 252, 'completo', 'Si este valor no es obtenido, se listaran los traspasos tanto completos como no completos. Si su valor es verdadero, se listaran los traspasos completos, si es falso, se listaran los traspasos no completos', 0, 'bool', 'null'),
(13257, 252, 'id_almacen_envia', 'Se listaran los traspasos enviados por este almacen', 0, 'int', 'null'),
(13258, 248, 'productos', 'Productos a ser enviados con sus cantidades', 1, 'json', ''),
(13259, 248, 'fecha_envio_programada', 'Fecha de envio programada para este traspaso', 1, 'string', ''),
(13260, 248, 'id_almacen_envia', 'Id del almacen que envia el producto', 1, 'int', ''),
(13261, 248, 'id_almacen_recibe', 'Id del almacen al que se envia el producto', 1, 'int', ''),
(13262, 250, 'id_traspaso', 'Id del traspaso que se recibe', 1, 'int', ''),
(13263, 250, 'productos', 'Productos que se reciben con sus cantidades', 1, 'json', ''),
(13264, 236, 'id_almacen', 'Id del almacen a desactivar', 1, 'int', ''),
(13265, 237, 'descripcion', 'Descripcion del almacen', 0, 'string', 'null'),
(13266, 237, 'nombre', 'Nombre del almacen', 0, 'string', 'null'),
(13267, 237, 'id_almacen', 'Id del almacen a editar', 1, 'int', ''),
(13268, 237, 'id_tipo_almacen', 'Id del tipo de almacen al que sera cambiado. No se puede cambiar este parametro si se trata de un almacen de consignacion ni se puede editar para que sea un almacen de consignacion', 0, 'int', 'null'),
(13269, 165, 'id_almacen', 'Id del almacen del cual se hace el movimiento', 1, 'int', ''),
(13270, 165, 'motivo', 'Motivo de la salida del producto', 0, 'string', 'null'),
(13271, 165, 'productos', 'Objeto que contendra los ids de los productos que seran sacados del alamcen con sus cantidades y sus unidades', 1, 'json', ''),
(13272, 251, 'id_traspaso', 'Id del traspaso a cancelar', 1, 'int', '');

-- --------------------------------------------------------

--
-- Estructura de tabla para la tabla `clasificacion`
--

CREATE TABLE IF NOT EXISTS `clasificacion` (
  `id_clasificacion` int(11) NOT NULL AUTO_INCREMENT,
  `id_proyecto` int(11) NOT NULL,
  `nombre` varchar(100) NOT NULL,
  `descripcion` text NOT NULL,
  PRIMARY KEY (`id_clasificacion`),
  KEY `id_proyecto` (`id_proyecto`)
) ENGINE=InnoDB  DEFAULT CHARSET=utf8 AUTO_INCREMENT=27 ;

--
-- Volcar la base de datos para la tabla `clasificacion`
--

INSERT INTO `clasificacion` (`id_clasificacion`, `id_proyecto`, `nombre`, `descripcion`) VALUES
(1, 1, 'Sesion', 'Se encarga del manejo de sesiones.'),
(2, 1, 'Empresas', 'Se encarga del manejo de las empresas de la instancia'),
(3, 1, 'Clientes', 'Se encarga del manejo de clientes en la instancia'),
(4, 1, 'Autorizaciones', 'Maneja las peticiones de autorizaciones.'),
(5, 1, 'Inventario', 'Maneja el inventario de la instancia'),
(6, 1, 'Personal y agentes', 'Maneja los usuarios de la instancia'),
(7, 1, 'Cargos y abonos', 'Maneja el efectivo de la instancia, como son gastos e inversiones.'),
(8, 1, 'Sucursales', 'Maneja las distintas sucursales de la isntancia.'),
(9, 1, 'Ventas', 'Maneja las ventas de la instancia'),
(10, 1, 'Proveedores', 'Se encarga del control de proveedores en la instancia'),
(11, 1, 'Compras', 'Maneja las compras de la instancia.'),
(12, 1, 'Transportacion y fletes', 'Se encarga del manejo y control de automoviles y transportacion'),
(13, 1, 'Consignaciones', 'Maneja las consignaciones'),
(14, 1, 'Servicios', 'Maneja los servicios de la isntancia'),
(15, 1, 'POS', 'Se encarga del funcionamiento interno del sistema'),
(16, 1, 'Documentos', 'Tipo de Documento. Se usa para elegir identificar el Documento Modelo a usar. \r\nLos documentos pueden ser:<br>\r\n<br>Cotización\r\n<br>Pedido\r\n<br>Remisión \r\n<br>Factura \r\n<br>Devolución sobre Venta \r\n<br>Devolución de Remisión \r\n<br>Nota de Crédito \r\n<br>Cambio del cliente \r\n<br>Pago del cliente \r\n<br>Cheque recibido\r\n<br>Honorarios del cliente \r\n<br>Abono del Cliente \r\n<br>Nota de Cargo al Cliente\r\n<br>Descuento por pronto pago \r\n<br>Pagaré \r\n<br>Interés Moratorio \r\n<br>Orden de Compra \r\n<br>Consignación del Proveedor \r\n<br>Compra \r\n<br>Devolución sobre Compra \r\n<br>Devolución de Consignación \r\n<br>Nota de Crédito del Proveedor \r\n<br>Pago al proveedor \r\n<br>Cheque emitido \r\n<br>Honorarios del Proveedor \r\n<br>Abono al Proveedor \r\n<br>Cargo del Proveedor \r\n<br>Utilidad Cambiaria Cliente \r\n<br>Pérdida Cambiaria Cliente \r\n<br>Utilidad Cambiaria Proveedor \r\n<br>Pérdida Cambiaria Proveedor \r\n<br>Entrada al Almacén \r\n<br>Salida del Almacén \r\n<br>Traspasos \r\n<br>Nota de Venta \r\n<br>Devolución sobre Nota de Venta \r\n<br>Ajuste al Costo'),
(18, 1, 'Contabilidad', 'Se encarga de los aspectos contables de la isntancia.'),
(19, 1, 'Reportes', 'Maneja los reportes de la instancia.'),
(20, 1, 'Impuestos', 'Maneja los impuestos y las retenciones de la instancia'),
(21, 1, 'Productos', 'Se encarga de los productos de la instancia.'),
(22, 1, 'Tarifas', 'Estos metodos crean y modifican las relaciones entre los precios de los servicios/productos y los tipos de clientes.\r\n\r\nControla el manejo de tarifas. Los tipos de tarifas que se manejan por default son tarifas de compra o de venta y estas son aplicadas en ventas y/o productos, las tarifas se pueden asignar a un cliente en especifico para ser usadas en las ventas pero tambien se pueden usar para ser asignadas a productos en especifico'),
(23, 1, 'Paquetes', 'Estos metodos afectan los paquetes. Un paquete es un conjunto de productos y/o servicios que se ofrecen en conjunto a un menor precio'),
(24, 1, 'Efectivo', 'En estos metodos se manejan los tipos de billetes y la moneda que se maneja'),
(25, 1, 'Procesos', 'Hacer Procesos'),
(26, 1, 'Almacenes', 'Controla el manejo de almacenes.');

-- --------------------------------------------------------

--
-- Estructura de tabla para la tabla `httptesting_paquete_de_pruebas`
--

CREATE TABLE IF NOT EXISTS `httptesting_paquete_de_pruebas` (
  `id_paquete_de_pruebas` int(11) NOT NULL AUTO_INCREMENT,
  `id_proyecto` int(11) NOT NULL COMMENT 'Proyecto al que pertenece esta prueba',
  `pruebas` longtext NOT NULL COMMENT 'Texto de pruebas',
  `nombre` varchar(100) NOT NULL COMMENT 'Nombre del paquete',
  `descripcion` varchar(256) NOT NULL COMMENT 'Descripcion del paquete',
  `locked` tinyint(1) NOT NULL COMMENT 'Si el paquete puede ser editado o no',
  PRIMARY KEY (`id_paquete_de_pruebas`),
  KEY `id_proyecto` (`id_proyecto`)
) ENGINE=InnoDB  DEFAULT CHARSET=utf8 AUTO_INCREMENT=4 ;

--
-- Volcar la base de datos para la tabla `httptesting_paquete_de_pruebas`
--

INSERT INTO `httptesting_paquete_de_pruebas` (`id_paquete_de_pruebas`, `id_proyecto`, `pruebas`, `nombre`, `descripcion`, `locked`) VALUES
(1, 1, '#beginTest\n	#Desc Vaciar la BD\n	#Method POST api/pos/bd/drop\n	#Input {  }\n	#Output {"status":"ok" }\n#endTest\n\n#beginTest\n	#Desc Iniciar sesion con credenciales correctas\n	#Method POST api/sesion/iniciar\n	#Input { "usuario" : "1", "password" : "123"  }\n	#Output {"status":"ok", "auth_token" : "<SET_VAR:AUTH_TOKEN>"}\n#endTest\n\n\n\n#beginTest\n	#Desc Crear un nuevo rol correctamente\n	#Method POST api/personal/rol/nuevo\n	#Input { "nombre" : "ROL1", "descripcion" : "DESC1", "auth_token" : "<GET_VAR:AUTH_TOKEN>" }\n	#Output {"status":"ok", "id_rol" : "<SET_VAR:ID_ROL>" }\n#endTest\n\n#beginTest\n	#Desc Crear nuevo usuario\n	#Method POST api/personal/usuario/nuevo\n	#Input { "codigo_usuario" : "USR1", "nombre" : "USR1", "id_rol" : "<GET_VAR:ID_ROL>", "password" : "12345678", "auth_token" : "<GET_VAR:AUTH_TOKEN>"}\n	#Output { "status":"ok"  }\n#endTest\n\n#beginTest\n	#Desc Crear una empresa\n	#Method POST api/empresa/nuevo\n	#Input {    "razon_social": "Mi Empresa S.A de C.V",    "rfc": "ELRU7904126A3",    "curp": "ELRU790412MGTNRN12",    "representante_legal": "JUAN MANUEL RICANO CASTILLO",        "calle": "Las Fuentes",        "numero_exterior": "203",        "colonia": "Laureles",        "codigo_postal": "38020",        "telefono1": "6189034",        "telefono2": "6189035",    "ciudad": "1" , "auth_token" : "<GET_VAR:AUTH_TOKEN>"}\n	#Output { "status" : "ok",  "id_empresa" : "<SET_VAR:ID_EMP1>"  }\n#endTest\n\n\n#beginTest\n	#Desc Nueva sucursal\n	#Method POST api/sucursal/nueva\n	#Input { "id_ciudad" :"1" , "colonia": "arboledas", "activo": 1, "saldo_a_favor" :  "0", "id_empresa" : "<GET_VAR:ID_EMP1>",  "descripcion"     : "la sucursal de almacen",  "razon_social"    : "sucursal sur",  "rfc" : "ZEFA980121JD3E",   "calle"           : "Turqueza",  "numero_exterior" : "112B",  "clonia"          : "Arboledas",  "municipio"       : "1",  "codigo_postal"   : "38040",   "telefono1"       : "4353465434" , "auth_token" : "<GET_VAR:AUTH_TOKEN>"}\n	#Output { "status" : "ok", "id_sucursal" : "<SET_VAR:ID_SUC1>" }\n#endTest\n\n#beginTest\n	#Desc Nueva sucursal\n	#Method POST api/sucursal/nueva\n	#Input { "id_ciudad" :"1" , "colonia": "arboledas", "activo": 1, "saldo_a_favor" :  "0", "id_empresa" : "<GET_VAR:ID_EMP1>",  "descripcion"     : "la sucursal de almacen 2",  "razon_social"    : "sucursal norte",  "rfc" : "ZEFA980121",   "calle"           : "Turqueza",  "numero_exterior" : "112B",  "clonia"          : "Arboledas",  "municipio"       : "1",  "codigo_postal"   : "38040",   "telefono1"       : "4353465434" , "auth_token" : "<GET_VAR:AUTH_TOKEN>"}\n	#Output { "status" : "ok", "id_sucursal" : "<SET_VAR:ID_SUC2>" }\n#endTest\n\n#beginTest\n	#Desc Nuevo tipo de almacen\n	#Method POST api/sucursal/tipo_almacen/nuevo\n	#Input { "descripcion" : "almacen unico" , "auth_token" : "<GET_VAR:AUTH_TOKEN>" }\n	#Output { "status" : "ok", "id_tipo_almacen" : "<SET_VAR:TIPO_ALMACEN1>"}\n#endTest\n\n\n#beginTest\n	#Desc Nuevo almacen\n	#Method POST api/sucursal/almacen/nuevo\n	#Input { "id_sucursal"  : "<GET_VAR:ID_SUC1>", "id_empresa"  : "<GET_VAR:ID_EMP1>",  "id_tipo_almacen": "<GET_VAR:TIPO_ALMACEN1>", "nombre"       : "almacen sur",   "descripcion"  : "Almacen para elotes grandes", "auth_token" : "<GET_VAR:AUTH_TOKEN>" }\n	#Output { "status" : "ok", "id_almacen" : "<SET_VAR:ID_ALMACEN1>" }\n#endTest\n\n#beginTest\n	#Desc Nuevo almacen\n	#Method POST api/sucursal/almacen/nuevo\n	#Input { "id_sucursal"  : "<GET_VAR:ID_SUC2>", "id_empresa"  : "<GET_VAR:ID_EMP1>",  "id_tipo_almacen": "<GET_VAR:TIPO_ALMACEN1>", "nombre"       : "almacen sur",   "descripcion"  : "Almacen para elotes grandes", "auth_token" : "<GET_VAR:AUTH_TOKEN>" }\n	#Output { "status" : "ok", "id_almacen" : "<SET_VAR:ID_ALMACEN2>" }\n#endTest\n\n\n\n#beginTest\n	#Desc Nuevo producto\n	#Method POST api/producto/nuevo\n	#Input { "activo" : "1",	"nombre_producto" :	"coca-cola600ml", "codigo_producto" : "coca23d" ,   "metodo_costeo" : "precio", "precio" : 15.00 , "costo_estandar" : 10,  "compra_en_mostrador" : false, "auth_token" : "<GET_VAR:AUTH_TOKEN>", "id_empresas" : "[ \\"<GET_VAR:ID_EMP1>\\" ]" }\n	#Output { "status" : "ok", "id_producto" : "<SET_VAR:ID_PROD1>" }\n#endTest\n\n#beginTest\n	#Desc Nueva unidad\n	#Method GET api/producto/unidad/nueva\n	#Input { "auth_token" : "<GET_VAR:AUTH_TOKEN>", "nombre" :	"mililitros", "es_entero" : "1" ,   "descripcion" : "mililitros" }\n	#Output { "status" : "ok", "id_unidad" : "<SET_VAR:ID_UNIDAD1>" }\n#endTest\n\n\n#beginTest\n	#Desc Nueva entrada al almacen de un producto que si es de esa empresa\n	#Method POST api/sucursal/almacen/entrada\n	#Input { "auth_token" : "<GET_VAR:AUTH_TOKEN>", "id_almacen" : "<GET_VAR:ID_ALMACEN1>", "motivo" : "testing", "productos" : "[{ \\"id_producto\\" : \\"<GET_VAR:ID_PROD1>\\", \\"cantidad\\" : 10, \\"id_unidad\\" : \\"<GET_VAR:ID_UNIDAD1>\\" }]" }\n	#Output { "status" : "ok"}\n#endTest\n\n#beginTest\n	#Desc Nueva entrada al almacen de un producto que si es de esa empresa\n	#Method POST api/sucursal/almacen/entrada\n	#Input { "auth_token" : "<GET_VAR:AUTH_TOKEN>", "id_almacen" : "<GET_VAR:ID_ALMACEN2>", "motivo" : "testing", "productos" : "[{ \\"id_producto\\" : \\"<GET_VAR:ID_PROD1>\\", \\"cantidad\\" : 15, \\"id_unidad\\" : \\"<GET_VAR:ID_UNIDAD1>\\" }]" }\n	#Output { "status" : "ok"}\n#endTest\n\n#beginTest\n	#Desc Obtener existencias de empresa\n	#Method GET api/inventario/existencias\n	#Input { "auth_token" : "<GET_VAR:AUTH_TOKEN>", "id_empresa" :	"<GET_VAR:ID_EMP1>" }\n	#Output { "status" : "ok" }\n#endTest\n\n#beginTest\n	#Desc Obtener existencias de la sucursal 1\n	#Method GET api/inventario/existencias\n	#Input { "auth_token" : "<GET_VAR:AUTH_TOKEN>", "id_sucursal" :	"<GET_VAR:ID_SUC1>" }\n	#Output { "status" : "ok" }\n#endTest\n\n#beginTest\n	#Desc Obtener existencias de la sucursal 2\n	#Method GET api/inventario/existencias\n	#Input { "auth_token" : "<GET_VAR:AUTH_TOKEN>", "id_sucursal" :	"<GET_VAR:ID_SUC2>" }\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Obtener existencias del producto 1 en la sucursal 1\n	#Method GET api/inventario/existencias\n	#Input { "auth_token" : "<GET_VAR:AUTH_TOKEN>", "id_sucursal" :	"<GET_VAR:ID_SUC1>", "id_producto" : "<GET_VAR:ID_PROD1>" }\n	#Output { "status" : "ok"}\n#endTest\n\n#beginTest\n	#Desc Obtener existencias del producto 1 en la sucursal 2\n	#Method GET api/inventario/existencias\n	#Input { "auth_token" : "<GET_VAR:AUTH_TOKEN>", "id_sucursal" :	"<GET_VAR:ID_SUC2>", "id_producto" : "<GET_VAR:ID_PROD1>" }\n	#Output { "status" : "ok"  }\n#endTest\n\n\n#beginTest\n	#Desc Buscar ese producto\n	#Method GET api/producto/buscar\n	#Input { "auth_token" : "<GET_VAR:AUTH_TOKEN>", "query" :	"coca"  }\n	#Output { "status" : "ok", "numero_de_resultados":1 }\n#endTest\n\n\n\n#beginTest\n	#Desc Nuevo producto\n	#Method POST api/producto/nuevo\n	#Input { "activo" : "1", "nombre_producto" : "nonummy ac,", "codigo_producto" : "LSW19WCU4QH", "metodo_costeo" : "precio", "precio" : "67", "costo_estandar" : "17", "compra_en_mostrador" : "true", "auth_token" : "<GET_VAR:AUTH_TOKEN>", "id_empresas" : "[ \\"<GET_VAR:ID_EMP1>\\" ]", "descripcion_producto" : "facilisi. Sed neque. Sed eget lacus. Mauris", "codigo_de_barras" : "10000"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo producto\n	#Method POST api/producto/nuevo\n	#Input { "activo" : "1", "nombre_producto" : "Nulla facilisis.", "codigo_producto" : "LBK92HSJ4PG", "metodo_costeo" : "precio", "precio" : "54", "costo_estandar" : "27", "compra_en_mostrador" : "false", "auth_token" : "<GET_VAR:AUTH_TOKEN>", "id_empresas" : "[ \\"<GET_VAR:ID_EMP1>\\" ]", "descripcion_producto" : "fringilla est. Mauris eu turpis. Nulla aliquet. Proin velit. Sed malesuada augue ut lacus. Nulla", "codigo_de_barras" : "10001"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo producto\n	#Method POST api/producto/nuevo\n	#Input { "activo" : "1", "nombre_producto" : "velit egestas lacinia.", "codigo_producto" : "GXN75VBW2FB", "metodo_costeo" : "precio", "precio" : "86", "costo_estandar" : "5", "compra_en_mostrador" : "false", "auth_token" : "<GET_VAR:AUTH_TOKEN>", "id_empresas" : "[ \\"<GET_VAR:ID_EMP1>\\" ]", "descripcion_producto" : "amet orci. Ut sagittis lobortis mauris. Suspendisse aliquet molestie tellus. Aenean egestas hendrerit neque.", "codigo_de_barras" : "10002"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo producto\n	#Method POST api/producto/nuevo\n	#Input { "activo" : "1", "nombre_producto" : "tristique senectus", "codigo_producto" : "UGK28RHJ3DU", "metodo_costeo" : "precio", "precio" : "60", "costo_estandar" : "43", "compra_en_mostrador" : "true", "auth_token" : "<GET_VAR:AUTH_TOKEN>", "id_empresas" : "[ \\"<GET_VAR:ID_EMP1>\\" ]", "descripcion_producto" : "Maecenas malesuada fringilla est. Mauris eu turpis.", "codigo_de_barras" : "10003"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo producto\n	#Method POST api/producto/nuevo\n	#Input { "activo" : "1", "nombre_producto" : "tempus non, lacinia", "codigo_producto" : "FVM40OFD1ZQ", "metodo_costeo" : "precio", "precio" : "81", "costo_estandar" : "4", "compra_en_mostrador" : "true", "auth_token" : "<GET_VAR:AUTH_TOKEN>", "id_empresas" : "[ \\"<GET_VAR:ID_EMP1>\\" ]", "descripcion_producto" : "in molestie tortor nibh sit amet orci. Ut sagittis lobortis mauris. Suspendisse aliquet molestie tellus.", "codigo_de_barras" : "10004"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo producto\n	#Method POST api/producto/nuevo\n	#Input { "activo" : "1", "nombre_producto" : "orci. Ut", "codigo_producto" : "EXC50WTX8WH", "metodo_costeo" : "precio", "precio" : "83", "costo_estandar" : "25", "compra_en_mostrador" : "false", "auth_token" : "<GET_VAR:AUTH_TOKEN>", "id_empresas" : "[ \\"<GET_VAR:ID_EMP1>\\" ]", "descripcion_producto" : "amet, consectetuer adipiscing elit. Aliquam auctor, velit eget laoreet posuere, enim", "codigo_de_barras" : "10005"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo producto\n	#Method POST api/producto/nuevo\n	#Input { "activo" : "1", "nombre_producto" : "commodo hendrerit. Donec", "codigo_producto" : "OES61JIG7ES", "metodo_costeo" : "precio", "precio" : "68", "costo_estandar" : "44", "compra_en_mostrador" : "false", "auth_token" : "<GET_VAR:AUTH_TOKEN>", "id_empresas" : "[ \\"<GET_VAR:ID_EMP1>\\" ]", "descripcion_producto" : "leo. Morbi neque tellus, imperdiet non, vestibulum nec, euismod", "codigo_de_barras" : "10006"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo producto\n	#Method POST api/producto/nuevo\n	#Input { "activo" : "1", "nombre_producto" : "pede. Cum", "codigo_producto" : "VEG70NKN0XN", "metodo_costeo" : "precio", "precio" : "50", "costo_estandar" : "25", "compra_en_mostrador" : "true", "auth_token" : "<GET_VAR:AUTH_TOKEN>", "id_empresas" : "[ \\"<GET_VAR:ID_EMP1>\\" ]", "descripcion_producto" : "mauris eu elit. Nulla facilisi. Sed neque. Sed", "codigo_de_barras" : "10007"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo producto\n	#Method POST api/producto/nuevo\n	#Input { "activo" : "1", "nombre_producto" : "ligula. Aliquam erat", "codigo_producto" : "OCQ32ISE2ZE", "metodo_costeo" : "precio", "precio" : "82", "costo_estandar" : "15", "compra_en_mostrador" : "true", "auth_token" : "<GET_VAR:AUTH_TOKEN>", "id_empresas" : "[ \\"<GET_VAR:ID_EMP1>\\" ]", "descripcion_producto" : "nibh vulputate mauris sagittis placerat. Cras dictum ultricies ligula. Nullam enim. Sed nulla ante, iaculis", "codigo_de_barras" : "10008"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo producto\n	#Method POST api/producto/nuevo\n	#Input { "activo" : "1", "nombre_producto" : "Duis volutpat nunc", "codigo_producto" : "BDK10YDO0IU", "metodo_costeo" : "precio", "precio" : "91", "costo_estandar" : "35", "compra_en_mostrador" : "true", "auth_token" : "<GET_VAR:AUTH_TOKEN>", "id_empresas" : "[ \\"<GET_VAR:ID_EMP1>\\" ]", "descripcion_producto" : "feugiat nec, diam. Duis mi enim, condimentum eget, volutpat ornare, facilisis eget, ipsum. Donec sollicitudin adipiscing", "codigo_de_barras" : "10009"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo producto\n	#Method POST api/producto/nuevo\n	#Input { "activo" : "1", "nombre_producto" : "mi pede,", "codigo_producto" : "QJK83ONQ5IE", "metodo_costeo" : "precio", "precio" : "65", "costo_estandar" : "11", "compra_en_mostrador" : "true", "auth_token" : "<GET_VAR:AUTH_TOKEN>", "id_empresas" : "[ \\"<GET_VAR:ID_EMP1>\\" ]", "descripcion_producto" : "justo. Proin non massa non ante bibendum ullamcorper. Duis cursus, diam", "codigo_de_barras" : "10010"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo producto\n	#Method POST api/producto/nuevo\n	#Input { "activo" : "1", "nombre_producto" : "nisl. Quisque", "codigo_producto" : "OMC57WKM1IU", "metodo_costeo" : "precio", "precio" : "92", "costo_estandar" : "27", "compra_en_mostrador" : "true", "auth_token" : "<GET_VAR:AUTH_TOKEN>", "id_empresas" : "[ \\"<GET_VAR:ID_EMP1>\\" ]", "descripcion_producto" : "at risus. Nunc ac sem ut dolor dapibus", "codigo_de_barras" : "10011"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo producto\n	#Method POST api/producto/nuevo\n	#Input { "activo" : "1", "nombre_producto" : "nec", "codigo_producto" : "MVF01JIJ6UZ", "metodo_costeo" : "precio", "precio" : "99", "costo_estandar" : "16", "compra_en_mostrador" : "false", "auth_token" : "<GET_VAR:AUTH_TOKEN>", "id_empresas" : "[ \\"<GET_VAR:ID_EMP1>\\" ]", "descripcion_producto" : "urna justo faucibus lectus, a sollicitudin orci sem eget massa. Suspendisse", "codigo_de_barras" : "10012"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo producto\n	#Method POST api/producto/nuevo\n	#Input { "activo" : "1", "nombre_producto" : "pellentesque", "codigo_producto" : "GOT48OIK9NI", "metodo_costeo" : "precio", "precio" : "65", "costo_estandar" : "4", "compra_en_mostrador" : "false", "auth_token" : "<GET_VAR:AUTH_TOKEN>", "id_empresas" : "[ \\"<GET_VAR:ID_EMP1>\\" ]", "descripcion_producto" : "quam vel sapien imperdiet ornare. In faucibus.", "codigo_de_barras" : "10013"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo producto\n	#Method POST api/producto/nuevo\n	#Input { "activo" : "1", "nombre_producto" : "non, feugiat nec,", "codigo_producto" : "QER29RGH2SS", "metodo_costeo" : "precio", "precio" : "67", "costo_estandar" : "48", "compra_en_mostrador" : "false", "auth_token" : "<GET_VAR:AUTH_TOKEN>", "id_empresas" : "[ \\"<GET_VAR:ID_EMP1>\\" ]", "descripcion_producto" : "nibh lacinia orci, consectetuer euismod est arcu ac orci. Ut semper pretium neque. Morbi quis", "codigo_de_barras" : "10014"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo producto\n	#Method POST api/producto/nuevo\n	#Input { "activo" : "1", "nombre_producto" : "nunc nulla", "codigo_producto" : "GSD22MOI2SP", "metodo_costeo" : "precio", "precio" : "54", "costo_estandar" : "1", "compra_en_mostrador" : "true", "auth_token" : "<GET_VAR:AUTH_TOKEN>", "id_empresas" : "[ \\"<GET_VAR:ID_EMP1>\\" ]", "descripcion_producto" : "eu neque pellentesque massa lobortis ultrices. Vivamus rhoncus.", "codigo_de_barras" : "10015"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo producto\n	#Method POST api/producto/nuevo\n	#Input { "activo" : "1", "nombre_producto" : "Phasellus ornare.", "codigo_producto" : "JUN54FYM1VE", "metodo_costeo" : "precio", "precio" : "79", "costo_estandar" : "28", "compra_en_mostrador" : "true", "auth_token" : "<GET_VAR:AUTH_TOKEN>", "id_empresas" : "[ \\"<GET_VAR:ID_EMP1>\\" ]", "descripcion_producto" : "consectetuer euismod est arcu ac orci. Ut semper pretium", "codigo_de_barras" : "10016"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo producto\n	#Method POST api/producto/nuevo\n	#Input { "activo" : "1", "nombre_producto" : "tempor arcu. Vestibulum", "codigo_producto" : "EFX49MNY7UQ", "metodo_costeo" : "precio", "precio" : "61", "costo_estandar" : "2", "compra_en_mostrador" : "false", "auth_token" : "<GET_VAR:AUTH_TOKEN>", "id_empresas" : "[ \\"<GET_VAR:ID_EMP1>\\" ]", "descripcion_producto" : "sed turpis nec mauris blandit mattis.", "codigo_de_barras" : "10017"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo producto\n	#Method POST api/producto/nuevo\n	#Input { "activo" : "1", "nombre_producto" : "lorem, vehicula", "codigo_producto" : "UNZ93DOW5WP", "metodo_costeo" : "precio", "precio" : "61", "costo_estandar" : "22", "compra_en_mostrador" : "false", "auth_token" : "<GET_VAR:AUTH_TOKEN>", "id_empresas" : "[ \\"<GET_VAR:ID_EMP1>\\" ]", "descripcion_producto" : "sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus.", "codigo_de_barras" : "10018"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo producto\n	#Method POST api/producto/nuevo\n	#Input { "activo" : "1", "nombre_producto" : "neque.", "codigo_producto" : "USI55YTO9TC", "metodo_costeo" : "precio", "precio" : "76", "costo_estandar" : "13", "compra_en_mostrador" : "false", "auth_token" : "<GET_VAR:AUTH_TOKEN>", "id_empresas" : "[ \\"<GET_VAR:ID_EMP1>\\" ]", "descripcion_producto" : "Sed eget lacus. Mauris non dui", "codigo_de_barras" : "10019"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo producto\n	#Method POST api/producto/nuevo\n	#Input { "activo" : "1", "nombre_producto" : "libero nec ligula", "codigo_producto" : "JJF92UES5QA", "metodo_costeo" : "precio", "precio" : "86", "costo_estandar" : "2", "compra_en_mostrador" : "false", "auth_token" : "<GET_VAR:AUTH_TOKEN>", "id_empresas" : "[ \\"<GET_VAR:ID_EMP1>\\" ]", "descripcion_producto" : "rhoncus. Nullam velit dui, semper et, lacinia vitae, sodales at,", "codigo_de_barras" : "10020"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo producto\n	#Method POST api/producto/nuevo\n	#Input { "activo" : "1", "nombre_producto" : "mauris ut", "codigo_producto" : "HBN28QTB4UH", "metodo_costeo" : "precio", "precio" : "65", "costo_estandar" : "7", "compra_en_mostrador" : "false", "auth_token" : "<GET_VAR:AUTH_TOKEN>", "id_empresas" : "[ \\"<GET_VAR:ID_EMP1>\\" ]", "descripcion_producto" : "ridiculus mus. Proin vel arcu eu odio tristique pharetra. Quisque ac libero nec", "codigo_de_barras" : "10021"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo producto\n	#Method POST api/producto/nuevo\n	#Input { "activo" : "1", "nombre_producto" : "mauris. Integer", "codigo_producto" : "DTR63RKK5VT", "metodo_costeo" : "precio", "precio" : "92", "costo_estandar" : "40", "compra_en_mostrador" : "true", "auth_token" : "<GET_VAR:AUTH_TOKEN>", "id_empresas" : "[ \\"<GET_VAR:ID_EMP1>\\" ]", "descripcion_producto" : "pede. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Proin vel arcu", "codigo_de_barras" : "10022"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo producto\n	#Method POST api/producto/nuevo\n	#Input { "activo" : "1", "nombre_producto" : "egestas", "codigo_producto" : "YAV48CTY7LH", "metodo_costeo" : "precio", "precio" : "65", "costo_estandar" : "21", "compra_en_mostrador" : "true", "auth_token" : "<GET_VAR:AUTH_TOKEN>", "id_empresas" : "[ \\"<GET_VAR:ID_EMP1>\\" ]", "descripcion_producto" : "malesuada fames ac turpis egestas. Fusce", "codigo_de_barras" : "10023"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo producto\n	#Method POST api/producto/nuevo\n	#Input { "activo" : "1", "nombre_producto" : "neque", "codigo_producto" : "TLV22OCC5AK", "metodo_costeo" : "precio", "precio" : "93", "costo_estandar" : "39", "compra_en_mostrador" : "true", "auth_token" : "<GET_VAR:AUTH_TOKEN>", "id_empresas" : "[ \\"<GET_VAR:ID_EMP1>\\" ]", "descripcion_producto" : "magna. Praesent interdum ligula eu enim. Etiam imperdiet dictum magna. Ut tincidunt orci quis lectus.", "codigo_de_barras" : "10024"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo producto\n	#Method POST api/producto/nuevo\n	#Input { "activo" : "1", "nombre_producto" : "in aliquet lobortis,", "codigo_producto" : "RNQ49XTK3UM", "metodo_costeo" : "precio", "precio" : "67", "costo_estandar" : "11", "compra_en_mostrador" : "true", "auth_token" : "<GET_VAR:AUTH_TOKEN>", "id_empresas" : "[ \\"<GET_VAR:ID_EMP1>\\" ]", "descripcion_producto" : "pede. Nunc sed orci lobortis augue scelerisque mollis. Phasellus libero mauris, aliquam eu, accumsan", "codigo_de_barras" : "10025"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo producto\n	#Method POST api/producto/nuevo\n	#Input { "activo" : "1", "nombre_producto" : "malesuada fames", "codigo_producto" : "PPE26OBK9YA", "metodo_costeo" : "precio", "precio" : "85", "costo_estandar" : "33", "compra_en_mostrador" : "false", "auth_token" : "<GET_VAR:AUTH_TOKEN>", "id_empresas" : "[ \\"<GET_VAR:ID_EMP1>\\" ]", "descripcion_producto" : "auctor ullamcorper, nisl arcu iaculis enim, sit amet", "codigo_de_barras" : "10026"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo producto\n	#Method POST api/producto/nuevo\n	#Input { "activo" : "1", "nombre_producto" : "rhoncus.", "codigo_producto" : "FWQ56CWW3QX", "metodo_costeo" : "precio", "precio" : "89", "costo_estandar" : "35", "compra_en_mostrador" : "false", "auth_token" : "<GET_VAR:AUTH_TOKEN>", "id_empresas" : "[ \\"<GET_VAR:ID_EMP1>\\" ]", "descripcion_producto" : "vel, convallis in, cursus et, eros. Proin ultrices. Duis volutpat", "codigo_de_barras" : "10027"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo producto\n	#Method POST api/producto/nuevo\n	#Input { "activo" : "1", "nombre_producto" : "nec urna et", "codigo_producto" : "LUK37KCK1IS", "metodo_costeo" : "precio", "precio" : "61", "costo_estandar" : "29", "compra_en_mostrador" : "false", "auth_token" : "<GET_VAR:AUTH_TOKEN>", "id_empresas" : "[ \\"<GET_VAR:ID_EMP1>\\" ]", "descripcion_producto" : "tempus eu, ligula. Aenean euismod mauris", "codigo_de_barras" : "10028"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo producto\n	#Method POST api/producto/nuevo\n	#Input { "activo" : "1", "nombre_producto" : "at arcu.", "codigo_producto" : "HGP69MKQ0UM", "metodo_costeo" : "precio", "precio" : "87", "costo_estandar" : "40", "compra_en_mostrador" : "false", "auth_token" : "<GET_VAR:AUTH_TOKEN>", "id_empresas" : "[ \\"<GET_VAR:ID_EMP1>\\" ]", "descripcion_producto" : "non dui nec urna suscipit nonummy. Fusce fermentum fermentum arcu. Vestibulum", "codigo_de_barras" : "10029"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo producto\n	#Method POST api/producto/nuevo\n	#Input { "activo" : "1", "nombre_producto" : "libero", "codigo_producto" : "QJR77KZH2BM", "metodo_costeo" : "precio", "precio" : "84", "costo_estandar" : "39", "compra_en_mostrador" : "false", "auth_token" : "<GET_VAR:AUTH_TOKEN>", "id_empresas" : "[ \\"<GET_VAR:ID_EMP1>\\" ]", "descripcion_producto" : "Mauris nulla. Integer urna. Vivamus molestie dapibus ligula. Aliquam erat volutpat. Nulla dignissim. Maecenas ornare egestas", "codigo_de_barras" : "10030"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo producto\n	#Method POST api/producto/nuevo\n	#Input { "activo" : "1", "nombre_producto" : "nulla magna,", "codigo_producto" : "WVM86ZQK9EQ", "metodo_costeo" : "precio", "precio" : "59", "costo_estandar" : "24", "compra_en_mostrador" : "true", "auth_token" : "<GET_VAR:AUTH_TOKEN>", "id_empresas" : "[ \\"<GET_VAR:ID_EMP1>\\" ]", "descripcion_producto" : "est, congue a, aliquet vel, vulputate eu, odio. Phasellus at augue id", "codigo_de_barras" : "10031"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo producto\n	#Method POST api/producto/nuevo\n	#Input { "activo" : "1", "nombre_producto" : "Duis", "codigo_producto" : "OAO80BNW8MG", "metodo_costeo" : "precio", "precio" : "62", "costo_estandar" : "18", "compra_en_mostrador" : "true", "auth_token" : "<GET_VAR:AUTH_TOKEN>", "id_empresas" : "[ \\"<GET_VAR:ID_EMP1>\\" ]", "descripcion_producto" : "feugiat tellus lorem eu metus. In", "codigo_de_barras" : "10032"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo producto\n	#Method POST api/producto/nuevo\n	#Input { "activo" : "1", "nombre_producto" : "eu", "codigo_producto" : "VRC78TXI0MM", "metodo_costeo" : "precio", "precio" : "52", "costo_estandar" : "38", "compra_en_mostrador" : "true", "auth_token" : "<GET_VAR:AUTH_TOKEN>", "id_empresas" : "[ \\"<GET_VAR:ID_EMP1>\\" ]", "descripcion_producto" : "adipiscing ligula. Aenean gravida nunc sed", "codigo_de_barras" : "10033"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo producto\n	#Method POST api/producto/nuevo\n	#Input { "activo" : "1", "nombre_producto" : "semper. Nam tempor", "codigo_producto" : "JLZ29GMG3OC", "metodo_costeo" : "precio", "precio" : "67", "costo_estandar" : "12", "compra_en_mostrador" : "false", "auth_token" : "<GET_VAR:AUTH_TOKEN>", "id_empresas" : "[ \\"<GET_VAR:ID_EMP1>\\" ]", "descripcion_producto" : "arcu eu odio tristique pharetra. Quisque", "codigo_de_barras" : "10034"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo producto\n	#Method POST api/producto/nuevo\n	#Input { "activo" : "1", "nombre_producto" : "purus. Nullam", "codigo_producto" : "BNE00RDU7EC", "metodo_costeo" : "precio", "precio" : "80", "costo_estandar" : "15", "compra_en_mostrador" : "true", "auth_token" : "<GET_VAR:AUTH_TOKEN>", "id_empresas" : "[ \\"<GET_VAR:ID_EMP1>\\" ]", "descripcion_producto" : "arcu. Morbi sit amet massa. Quisque", "codigo_de_barras" : "10035"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo producto\n	#Method POST api/producto/nuevo\n	#Input { "activo" : "1", "nombre_producto" : "euismod ac, fermentum", "codigo_producto" : "NDF86IGX2GG", "metodo_costeo" : "precio", "precio" : "91", "costo_estandar" : "6", "compra_en_mostrador" : "true", "auth_token" : "<GET_VAR:AUTH_TOKEN>", "id_empresas" : "[ \\"<GET_VAR:ID_EMP1>\\" ]", "descripcion_producto" : "tincidunt adipiscing. Mauris molestie pharetra nibh. Aliquam ornare, libero at", "codigo_de_barras" : "10036"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo producto\n	#Method POST api/producto/nuevo\n	#Input { "activo" : "1", "nombre_producto" : "Maecenas ornare", "codigo_producto" : "YNE66GHZ7IH", "metodo_costeo" : "precio", "precio" : "69", "costo_estandar" : "15", "compra_en_mostrador" : "false", "auth_token" : "<GET_VAR:AUTH_TOKEN>", "id_empresas" : "[ \\"<GET_VAR:ID_EMP1>\\" ]", "descripcion_producto" : "sit amet, risus. Donec nibh enim, gravida sit amet, dapibus id,", "codigo_de_barras" : "10037"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo producto\n	#Method POST api/producto/nuevo\n	#Input { "activo" : "1", "nombre_producto" : "lobortis risus. In", "codigo_producto" : "VYC02JWI6GP", "metodo_costeo" : "precio", "precio" : "52", "costo_estandar" : "31", "compra_en_mostrador" : "false", "auth_token" : "<GET_VAR:AUTH_TOKEN>", "id_empresas" : "[ \\"<GET_VAR:ID_EMP1>\\" ]", "descripcion_producto" : "placerat eget, venenatis a, magna. Lorem ipsum dolor sit amet, consectetuer adipiscing", "codigo_de_barras" : "10038"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo producto\n	#Method POST api/producto/nuevo\n	#Input { "activo" : "1", "nombre_producto" : "consequat", "codigo_producto" : "BNG78NDD3RR", "metodo_costeo" : "precio", "precio" : "52", "costo_estandar" : "44", "compra_en_mostrador" : "true", "auth_token" : "<GET_VAR:AUTH_TOKEN>", "id_empresas" : "[ \\"<GET_VAR:ID_EMP1>\\" ]", "descripcion_producto" : "dolor sit amet, consectetuer adipiscing elit.", "codigo_de_barras" : "10039"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo producto\n	#Method POST api/producto/nuevo\n	#Input { "activo" : "1", "nombre_producto" : "pede, nonummy", "codigo_producto" : "IKN96DBH6PB", "metodo_costeo" : "precio", "precio" : "95", "costo_estandar" : "42", "compra_en_mostrador" : "true", "auth_token" : "<GET_VAR:AUTH_TOKEN>", "id_empresas" : "[ \\"<GET_VAR:ID_EMP1>\\" ]", "descripcion_producto" : "semper cursus. Integer mollis. Integer tincidunt aliquam arcu. Aliquam ultrices", "codigo_de_barras" : "10040"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo producto\n	#Method POST api/producto/nuevo\n	#Input { "activo" : "1", "nombre_producto" : "at auctor ullamcorper,", "codigo_producto" : "PAL96CZP5AO", "metodo_costeo" : "precio", "precio" : "55", "costo_estandar" : "11", "compra_en_mostrador" : "false", "auth_token" : "<GET_VAR:AUTH_TOKEN>", "id_empresas" : "[ \\"<GET_VAR:ID_EMP1>\\" ]", "descripcion_producto" : "nulla. In tincidunt congue turpis. In condimentum. Donec at arcu. Vestibulum", "codigo_de_barras" : "10041"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo producto\n	#Method POST api/producto/nuevo\n	#Input { "activo" : "1", "nombre_producto" : "malesuada ut, sem.", "codigo_producto" : "VYM55NKK6WM", "metodo_costeo" : "precio", "precio" : "75", "costo_estandar" : "7", "compra_en_mostrador" : "true", "auth_token" : "<GET_VAR:AUTH_TOKEN>", "id_empresas" : "[ \\"<GET_VAR:ID_EMP1>\\" ]", "descripcion_producto" : "non, hendrerit id, ante. Nunc mauris sapien, cursus in, hendrerit consectetuer,", "codigo_de_barras" : "10042"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo producto\n	#Method POST api/producto/nuevo\n	#Input { "activo" : "1", "nombre_producto" : "Mauris2", "codigo_producto" : "RAU20JKF2XY", "metodo_costeo" : "precio", "precio" : "58", "costo_estandar" : "6", "compra_en_mostrador" : "false", "auth_token" : "<GET_VAR:AUTH_TOKEN>", "id_empresas" : "[ \\"<GET_VAR:ID_EMP1>\\" ]", "descripcion_producto" : "commodo hendrerit. Donec porttitor tellus non magna.", "codigo_de_barras" : "10043"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo producto\n	#Method POST api/producto/nuevo\n	#Input { "activo" : "1", "nombre_producto" : "ante", "codigo_producto" : "CSB75NGS5UH", "metodo_costeo" : "precio", "precio" : "79", "costo_estandar" : "49", "compra_en_mostrador" : "false", "auth_token" : "<GET_VAR:AUTH_TOKEN>", "id_empresas" : "[ \\"<GET_VAR:ID_EMP1>\\" ]", "descripcion_producto" : "venenatis a, magna. Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Etiam", "codigo_de_barras" : "10044"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo producto\n	#Method POST api/producto/nuevo\n	#Input { "activo" : "1", "nombre_producto" : "bibendum", "codigo_producto" : "DQV45TPR5SF", "metodo_costeo" : "precio", "precio" : "91", "costo_estandar" : "18", "compra_en_mostrador" : "true", "auth_token" : "<GET_VAR:AUTH_TOKEN>", "id_empresas" : "[ \\"<GET_VAR:ID_EMP1>\\" ]", "descripcion_producto" : "eleifend. Cras sed leo. Cras vehicula aliquet libero. Integer in magna.", "codigo_de_barras" : "10045"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo producto\n	#Method POST api/producto/nuevo\n	#Input { "activo" : "1", "nombre_producto" : "enim", "codigo_producto" : "YIU51BCC0SW", "metodo_costeo" : "precio", "precio" : "62", "costo_estandar" : "17", "compra_en_mostrador" : "true", "auth_token" : "<GET_VAR:AUTH_TOKEN>", "id_empresas" : "[ \\"<GET_VAR:ID_EMP1>\\" ]", "descripcion_producto" : "sagittis. Duis gravida. Praesent eu nulla at sem molestie sodales. Mauris blandit enim consequat purus.", "codigo_de_barras" : "10046"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo producto\n	#Method POST api/producto/nuevo\n	#Input { "activo" : "1", "nombre_producto" : "vel arcu.", "codigo_producto" : "YAC47IHC6VN", "metodo_costeo" : "precio", "precio" : "87", "costo_estandar" : "45", "compra_en_mostrador" : "true", "auth_token" : "<GET_VAR:AUTH_TOKEN>", "id_empresas" : "[ \\"<GET_VAR:ID_EMP1>\\" ]", "descripcion_producto" : "commodo auctor velit. Aliquam nisl. Nulla", "codigo_de_barras" : "10047"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo producto\n	#Method POST api/producto/nuevo\n	#Input { "activo" : "1", "nombre_producto" : "augue id ante", "codigo_producto" : "TBH77DAD1XH", "metodo_costeo" : "precio", "precio" : "80", "costo_estandar" : "18", "compra_en_mostrador" : "true", "auth_token" : "<GET_VAR:AUTH_TOKEN>", "id_empresas" : "[ \\"<GET_VAR:ID_EMP1>\\" ]", "descripcion_producto" : "Curabitur ut odio vel est tempor bibendum. Donec felis orci, adipiscing non, luctus", "codigo_de_barras" : "10048"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo producto\n	#Method POST api/producto/nuevo\n	#Input { "activo" : "1", "nombre_producto" : "erat volutpat. Nulla", "codigo_producto" : "TZM47ZES4GK", "metodo_costeo" : "precio", "precio" : "68", "costo_estandar" : "21", "compra_en_mostrador" : "true", "auth_token" : "<GET_VAR:AUTH_TOKEN>", "id_empresas" : "[ \\"<GET_VAR:ID_EMP1>\\" ]", "descripcion_producto" : "et magnis dis parturient montes, nascetur ridiculus mus. Donec dignissim", "codigo_de_barras" : "10049"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo producto\n	#Method POST api/producto/nuevo\n	#Input { "activo" : "1", "nombre_producto" : "nec, mollis vitae,", "codigo_producto" : "VYJ08RQE8HQ", "metodo_costeo" : "precio", "precio" : "77", "costo_estandar" : "32", "compra_en_mostrador" : "true", "auth_token" : "<GET_VAR:AUTH_TOKEN>", "id_empresas" : "[ \\"<GET_VAR:ID_EMP1>\\" ]", "descripcion_producto" : "Nam consequat dolor vitae dolor. Donec fringilla. Donec feugiat metus sit", "codigo_de_barras" : "10050"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo producto\n	#Method POST api/producto/nuevo\n	#Input { "activo" : "1", "nombre_producto" : "lectus pede, ultrices", "codigo_producto" : "CZA52KXQ5II", "metodo_costeo" : "precio", "precio" : "72", "costo_estandar" : "29", "compra_en_mostrador" : "true", "auth_token" : "<GET_VAR:AUTH_TOKEN>", "id_empresas" : "[ \\"<GET_VAR:ID_EMP1>\\" ]", "descripcion_producto" : "leo. Vivamus nibh dolor, nonummy ac, feugiat non, lobortis quis,", "codigo_de_barras" : "10051"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo producto\n	#Method POST api/producto/nuevo\n	#Input { "activo" : "1", "nombre_producto" : "mauris", "codigo_producto" : "PTK40AAR4NU", "metodo_costeo" : "precio", "precio" : "61", "costo_estandar" : "42", "compra_en_mostrador" : "false", "auth_token" : "<GET_VAR:AUTH_TOKEN>", "id_empresas" : "[ \\"<GET_VAR:ID_EMP1>\\" ]", "descripcion_producto" : "non quam. Pellentesque habitant morbi tristique senectus et", "codigo_de_barras" : "10052"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo producto\n	#Method POST api/producto/nuevo\n	#Input { "activo" : "1", "nombre_producto" : "non, bibendum", "codigo_producto" : "GHB76JGF4PE", "metodo_costeo" : "precio", "precio" : "81", "costo_estandar" : "41", "compra_en_mostrador" : "false", "auth_token" : "<GET_VAR:AUTH_TOKEN>", "id_empresas" : "[ \\"<GET_VAR:ID_EMP1>\\" ]", "descripcion_producto" : "facilisi. Sed neque. Sed eget lacus. Mauris non dui nec", "codigo_de_barras" : "10053"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo producto\n	#Method POST api/producto/nuevo\n	#Input { "activo" : "1", "nombre_producto" : "Donec", "codigo_producto" : "GGD67YWQ8CM", "metodo_costeo" : "precio", "precio" : "62", "costo_estandar" : "26", "compra_en_mostrador" : "false", "auth_token" : "<GET_VAR:AUTH_TOKEN>", "id_empresas" : "[ \\"<GET_VAR:ID_EMP1>\\" ]", "descripcion_producto" : "malesuada. Integer id magna et ipsum cursus vestibulum. Mauris magna. Duis dignissim", "codigo_de_barras" : "10054"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo producto\n	#Method POST api/producto/nuevo\n	#Input { "activo" : "1", "nombre_producto" : "tempor augue", "codigo_producto" : "XTK43OBE3LK", "metodo_costeo" : "precio", "precio" : "79", "costo_estandar" : "44", "compra_en_mostrador" : "false", "auth_token" : "<GET_VAR:AUTH_TOKEN>", "id_empresas" : "[ \\"<GET_VAR:ID_EMP1>\\" ]", "descripcion_producto" : "Quisque tincidunt pede ac urna. Ut tincidunt vehicula risus. Nulla eget metus eu erat semper", "codigo_de_barras" : "10055"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo producto\n	#Method POST api/producto/nuevo\n	#Input { "activo" : "1", "nombre_producto" : "ridiculus", "codigo_producto" : "ZEH82TBU4PI", "metodo_costeo" : "precio", "precio" : "50", "costo_estandar" : "40", "compra_en_mostrador" : "true", "auth_token" : "<GET_VAR:AUTH_TOKEN>", "id_empresas" : "[ \\"<GET_VAR:ID_EMP1>\\" ]", "descripcion_producto" : "tempus eu, ligula. Aenean euismod mauris eu elit. Nulla facilisi. Sed neque. Sed eget", "codigo_de_barras" : "10056"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo producto\n	#Method POST api/producto/nuevo\n	#Input { "activo" : "1", "nombre_producto" : "Aenean massa. Integer", "codigo_producto" : "USI11SSB3OC", "metodo_costeo" : "precio", "precio" : "82", "costo_estandar" : "11", "compra_en_mostrador" : "true", "auth_token" : "<GET_VAR:AUTH_TOKEN>", "id_empresas" : "[ \\"<GET_VAR:ID_EMP1>\\" ]", "descripcion_producto" : "sed dolor. Fusce mi lorem, vehicula et, rutrum eu, ultrices sit amet, risus. Donec", "codigo_de_barras" : "10057"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo producto\n	#Method POST api/producto/nuevo\n	#Input { "activo" : "1", "nombre_producto" : "a odio semper", "codigo_producto" : "GYW75EUI4OO", "metodo_costeo" : "precio", "precio" : "55", "costo_estandar" : "34", "compra_en_mostrador" : "true", "auth_token" : "<GET_VAR:AUTH_TOKEN>", "id_empresas" : "[ \\"<GET_VAR:ID_EMP1>\\" ]", "descripcion_producto" : "Curabitur sed tortor. Integer aliquam adipiscing lacus. Ut nec urna et arcu imperdiet ullamcorper. Duis", "codigo_de_barras" : "10058"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo producto\n	#Method POST api/producto/nuevo\n	#Input { "activo" : "1", "nombre_producto" : "Quisque purus", "codigo_producto" : "SEC07ESZ2NM", "metodo_costeo" : "precio", "precio" : "56", "costo_estandar" : "30", "compra_en_mostrador" : "false", "auth_token" : "<GET_VAR:AUTH_TOKEN>", "id_empresas" : "[ \\"<GET_VAR:ID_EMP1>\\" ]", "descripcion_producto" : "Cras eu tellus eu augue porttitor", "codigo_de_barras" : "10059"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo producto\n	#Method POST api/producto/nuevo\n	#Input { "activo" : "1", "nombre_producto" : "sapien, cursus", "codigo_producto" : "QHX08MFN8BN", "metodo_costeo" : "precio", "precio" : "63", "costo_estandar" : "4", "compra_en_mostrador" : "true", "auth_token" : "<GET_VAR:AUTH_TOKEN>", "id_empresas" : "[ \\"<GET_VAR:ID_EMP1>\\" ]", "descripcion_producto" : "enim. Mauris quis turpis vitae purus gravida sagittis. Duis gravida.", "codigo_de_barras" : "10060"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo producto\n	#Method POST api/producto/nuevo\n	#Input { "activo" : "1", "nombre_producto" : "in", "codigo_producto" : "IAE55QSE3TP", "metodo_costeo" : "precio", "precio" : "94", "costo_estandar" : "17", "compra_en_mostrador" : "true", "auth_token" : "<GET_VAR:AUTH_TOKEN>", "id_empresas" : "[ \\"<GET_VAR:ID_EMP1>\\" ]", "descripcion_producto" : "Mauris ut quam vel sapien imperdiet ornare.", "codigo_de_barras" : "10061"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo producto\n	#Method POST api/producto/nuevo\n	#Input { "activo" : "1", "nombre_producto" : "non, sollicitudin", "codigo_producto" : "TOO56CUR3GV", "metodo_costeo" : "precio", "precio" : "82", "costo_estandar" : "22", "compra_en_mostrador" : "true", "auth_token" : "<GET_VAR:AUTH_TOKEN>", "id_empresas" : "[ \\"<GET_VAR:ID_EMP1>\\" ]", "descripcion_producto" : "ligula eu enim. Etiam imperdiet dictum magna. Ut tincidunt orci quis lectus. Nullam", "codigo_de_barras" : "10062"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo producto\n	#Method POST api/producto/nuevo\n	#Input { "activo" : "1", "nombre_producto" : "nisl sem, consequat", "codigo_producto" : "FMK62AMP2RW", "metodo_costeo" : "precio", "precio" : "79", "costo_estandar" : "34", "compra_en_mostrador" : "false", "auth_token" : "<GET_VAR:AUTH_TOKEN>", "id_empresas" : "[ \\"<GET_VAR:ID_EMP1>\\" ]", "descripcion_producto" : "amet diam eu dolor egestas rhoncus. Proin", "codigo_de_barras" : "10063"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo producto\n	#Method POST api/producto/nuevo\n	#Input { "activo" : "1", "nombre_producto" : "semper", "codigo_producto" : "IYL61GHQ4ZF", "metodo_costeo" : "precio", "precio" : "60", "costo_estandar" : "11", "compra_en_mostrador" : "true", "auth_token" : "<GET_VAR:AUTH_TOKEN>", "id_empresas" : "[ \\"<GET_VAR:ID_EMP1>\\" ]", "descripcion_producto" : "ante bibendum ullamcorper. Duis cursus, diam at pretium aliquet, metus urna convallis erat,", "codigo_de_barras" : "10064"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo producto\n	#Method POST api/producto/nuevo\n	#Input { "activo" : "1", "nombre_producto" : "dolor,", "codigo_producto" : "QOO82KMY0QE", "metodo_costeo" : "precio", "precio" : "57", "costo_estandar" : "20", "compra_en_mostrador" : "true", "auth_token" : "<GET_VAR:AUTH_TOKEN>", "id_empresas" : "[ \\"<GET_VAR:ID_EMP1>\\" ]", "descripcion_producto" : "felis eget varius ultrices, mauris ipsum porta", "codigo_de_barras" : "10065"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo producto\n	#Method POST api/producto/nuevo\n	#Input { "activo" : "1", "nombre_producto" : "eros", "codigo_producto" : "CKY53ETP6LF", "metodo_costeo" : "precio", "precio" : "83", "costo_estandar" : "19", "compra_en_mostrador" : "false", "auth_token" : "<GET_VAR:AUTH_TOKEN>", "id_empresas" : "[ \\"<GET_VAR:ID_EMP1>\\" ]", "descripcion_producto" : "gravida. Aliquam tincidunt, nunc ac mattis ornare, lectus", "codigo_de_barras" : "10066"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo producto\n	#Method POST api/producto/nuevo\n	#Input { "activo" : "1", "nombre_producto" : "magna sed dui.", "codigo_producto" : "IFK38OMF0PB", "metodo_costeo" : "precio", "precio" : "57", "costo_estandar" : "45", "compra_en_mostrador" : "true", "auth_token" : "<GET_VAR:AUTH_TOKEN>", "id_empresas" : "[ \\"<GET_VAR:ID_EMP1>\\" ]", "descripcion_producto" : "lorem ut aliquam iaculis, lacus pede sagittis augue, eu tempor erat neque", "codigo_de_barras" : "10067"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo producto\n	#Method POST api/producto/nuevo\n	#Input { "activo" : "1", "nombre_producto" : "eu, euismod ac,", "codigo_producto" : "ALO68UHG6NE", "metodo_costeo" : "precio", "precio" : "68", "costo_estandar" : "49", "compra_en_mostrador" : "false", "auth_token" : "<GET_VAR:AUTH_TOKEN>", "id_empresas" : "[ \\"<GET_VAR:ID_EMP1>\\" ]", "descripcion_producto" : "Nulla dignissim. Maecenas ornare egestas ligula. Nullam feugiat placerat velit. Quisque varius.", "codigo_de_barras" : "10068"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo producto\n	#Method POST api/producto/nuevo\n	#Input { "activo" : "1", "nombre_producto" : "leo. Cras vehicula", "codigo_producto" : "YIQ99SDW8RS", "metodo_costeo" : "precio", "precio" : "76", "costo_estandar" : "32", "compra_en_mostrador" : "false", "auth_token" : "<GET_VAR:AUTH_TOKEN>", "id_empresas" : "[ \\"<GET_VAR:ID_EMP1>\\" ]", "descripcion_producto" : "lobortis risus. In mi pede, nonummy ut, molestie in, tempus eu, ligula. Aenean euismod mauris eu", "codigo_de_barras" : "10069"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo producto\n	#Method POST api/producto/nuevo\n	#Input { "activo" : "1", "nombre_producto" : "sem.", "codigo_producto" : "ZPB61GAC7PM", "metodo_costeo" : "precio", "precio" : "79", "costo_estandar" : "1", "compra_en_mostrador" : "true", "auth_token" : "<GET_VAR:AUTH_TOKEN>", "id_empresas" : "[ \\"<GET_VAR:ID_EMP1>\\" ]", "descripcion_producto" : "Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Aenean eget magna. Suspendisse", "codigo_de_barras" : "10070"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo producto\n	#Method POST api/producto/nuevo\n	#Input { "activo" : "1", "nombre_producto" : "commodo tincidunt", "codigo_producto" : "INS11LSV1RA", "metodo_costeo" : "precio", "precio" : "71", "costo_estandar" : "25", "compra_en_mostrador" : "true", "auth_token" : "<GET_VAR:AUTH_TOKEN>", "id_empresas" : "[ \\"<GET_VAR:ID_EMP1>\\" ]", "descripcion_producto" : "eget nisi dictum augue malesuada malesuada.", "codigo_de_barras" : "10071"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo producto\n	#Method POST api/producto/nuevo\n	#Input { "activo" : "1", "nombre_producto" : "cursus a, enim.", "codigo_producto" : "URG52TDH1BY", "metodo_costeo" : "precio", "precio" : "77", "costo_estandar" : "47", "compra_en_mostrador" : "true", "auth_token" : "<GET_VAR:AUTH_TOKEN>", "id_empresas" : "[ \\"<GET_VAR:ID_EMP1>\\" ]", "descripcion_producto" : "sit amet ultricies sem magna nec", "codigo_de_barras" : "10072"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo producto\n	#Method POST api/producto/nuevo\n	#Input { "activo" : "1", "nombre_producto" : "dictum placerat,", "codigo_producto" : "CEC28CQJ1RX", "metodo_costeo" : "precio", "precio" : "90", "costo_estandar" : "40", "compra_en_mostrador" : "false", "auth_token" : "<GET_VAR:AUTH_TOKEN>", "id_empresas" : "[ \\"<GET_VAR:ID_EMP1>\\" ]", "descripcion_producto" : "orci. Phasellus dapibus quam quis diam. Pellentesque habitant morbi tristique senectus", "codigo_de_barras" : "10073"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo producto\n	#Method POST api/producto/nuevo\n	#Input { "activo" : "1", "nombre_producto" : "odio.", "codigo_producto" : "UKB94ZNK2PB", "metodo_costeo" : "precio", "precio" : "87", "costo_estandar" : "41", "compra_en_mostrador" : "true", "auth_token" : "<GET_VAR:AUTH_TOKEN>", "id_empresas" : "[ \\"<GET_VAR:ID_EMP1>\\" ]", "descripcion_producto" : "amet luctus vulputate, nisi sem semper erat, in consectetuer ipsum nunc id enim. Curabitur massa. Vestibulum", "codigo_de_barras" : "10074"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo producto\n	#Method POST api/producto/nuevo\n	#Input { "activo" : "1", "nombre_producto" : "risus, at", "codigo_producto" : "AAE16BZM7LO", "metodo_costeo" : "precio", "precio" : "51", "costo_estandar" : "12", "compra_en_mostrador" : "true", "auth_token" : "<GET_VAR:AUTH_TOKEN>", "id_empresas" : "[ \\"<GET_VAR:ID_EMP1>\\" ]", "descripcion_producto" : "libero at auctor ullamcorper, nisl arcu iaculis enim, sit amet", "codigo_de_barras" : "10075"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo producto\n	#Method POST api/producto/nuevo\n	#Input { "activo" : "1", "nombre_producto" : "nibh.", "codigo_producto" : "HVH54IIG5HD", "metodo_costeo" : "precio", "precio" : "93", "costo_estandar" : "4", "compra_en_mostrador" : "true", "auth_token" : "<GET_VAR:AUTH_TOKEN>", "id_empresas" : "[ \\"<GET_VAR:ID_EMP1>\\" ]", "descripcion_producto" : "sem, consequat nec, mollis vitae, posuere at, velit. Cras lorem lorem, luctus ut, pellentesque eget,", "codigo_de_barras" : "10076"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo producto\n	#Method POST api/producto/nuevo\n	#Input { "activo" : "1", "nombre_producto" : "hendrerit.", "codigo_producto" : "IHB17PDZ9OG", "metodo_costeo" : "precio", "precio" : "62", "costo_estandar" : "22", "compra_en_mostrador" : "false", "auth_token" : "<GET_VAR:AUTH_TOKEN>", "id_empresas" : "[ \\"<GET_VAR:ID_EMP1>\\" ]", "descripcion_producto" : "neque. Morbi quis urna. Nunc quis", "codigo_de_barras" : "10077"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo producto\n	#Method POST api/producto/nuevo\n	#Input { "activo" : "1", "nombre_producto" : "purus,", "codigo_producto" : "BLS57WLU0IB", "metodo_costeo" : "precio", "precio" : "66", "costo_estandar" : "44", "compra_en_mostrador" : "true", "auth_token" : "<GET_VAR:AUTH_TOKEN>", "id_empresas" : "[ \\"<GET_VAR:ID_EMP1>\\" ]", "descripcion_producto" : "Vivamus nibh dolor, nonummy ac, feugiat non, lobortis quis, pede. Suspendisse dui.", "codigo_de_barras" : "10078"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo producto\n	#Method POST api/producto/nuevo\n	#Input { "activo" : "1", "nombre_producto" : "at, velit.", "codigo_producto" : "OPI41OTP1VI", "metodo_costeo" : "precio", "precio" : "61", "costo_estandar" : "15", "compra_en_mostrador" : "true", "auth_token" : "<GET_VAR:AUTH_TOKEN>", "id_empresas" : "[ \\"<GET_VAR:ID_EMP1>\\" ]", "descripcion_producto" : "auctor, velit eget laoreet posuere, enim nisl elementum purus, accumsan interdum libero dui", "codigo_de_barras" : "10079"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo producto\n	#Method POST api/producto/nuevo\n	#Input { "activo" : "1", "nombre_producto" : "Sed malesuada augue", "codigo_producto" : "WJF86GFO5VN", "metodo_costeo" : "precio", "precio" : "52", "costo_estandar" : "8", "compra_en_mostrador" : "true", "auth_token" : "<GET_VAR:AUTH_TOKEN>", "id_empresas" : "[ \\"<GET_VAR:ID_EMP1>\\" ]", "descripcion_producto" : "dui. Fusce aliquam, enim nec tempus scelerisque, lorem ipsum sodales purus, in molestie", "codigo_de_barras" : "10080"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo producto\n	#Method POST api/producto/nuevo\n	#Input { "activo" : "1", "nombre_producto" : "sem. Pellentesque", "codigo_producto" : "BIK11SKK0BK", "metodo_costeo" : "precio", "precio" : "50", "costo_estandar" : "23", "compra_en_mostrador" : "true", "auth_token" : "<GET_VAR:AUTH_TOKEN>", "id_empresas" : "[ \\"<GET_VAR:ID_EMP1>\\" ]", "descripcion_producto" : "pede nec ante blandit viverra. Donec tempus, lorem fringilla ornare", "codigo_de_barras" : "10081"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo producto\n	#Method POST api/producto/nuevo\n	#Input { "activo" : "1", "nombre_producto" : "dolor", "codigo_producto" : "XIP41DOI1FU", "metodo_costeo" : "precio", "precio" : "88", "costo_estandar" : "2", "compra_en_mostrador" : "false", "auth_token" : "<GET_VAR:AUTH_TOKEN>", "id_empresas" : "[ \\"<GET_VAR:ID_EMP1>\\" ]", "descripcion_producto" : "faucibus ut, nulla. Cras eu tellus", "codigo_de_barras" : "10082"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo producto\n	#Method POST api/producto/nuevo\n	#Input { "activo" : "1", "nombre_producto" : "nonummy ut, molestie", "codigo_producto" : "EJQ24BHX3QO", "metodo_costeo" : "precio", "precio" : "72", "costo_estandar" : "34", "compra_en_mostrador" : "true", "auth_token" : "<GET_VAR:AUTH_TOKEN>", "id_empresas" : "[ \\"<GET_VAR:ID_EMP1>\\" ]", "descripcion_producto" : "enim, sit amet ornare lectus justo eu arcu. Morbi sit amet massa. Quisque porttitor", "codigo_de_barras" : "10083"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo producto\n	#Method POST api/producto/nuevo\n	#Input { "activo" : "1", "nombre_producto" : "lacus. Cras interdum.", "codigo_producto" : "KNG67AJT8LF", "metodo_costeo" : "precio", "precio" : "91", "costo_estandar" : "33", "compra_en_mostrador" : "true", "auth_token" : "<GET_VAR:AUTH_TOKEN>", "id_empresas" : "[ \\"<GET_VAR:ID_EMP1>\\" ]", "descripcion_producto" : "pharetra nibh. Aliquam ornare, libero at auctor ullamcorper,", "codigo_de_barras" : "10084"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo producto\n	#Method POST api/producto/nuevo\n	#Input { "activo" : "1", "nombre_producto" : "faucibus id, libero.", "codigo_producto" : "IYN66CCH5WP", "metodo_costeo" : "precio", "precio" : "76", "costo_estandar" : "40", "compra_en_mostrador" : "true", "auth_token" : "<GET_VAR:AUTH_TOKEN>", "id_empresas" : "[ \\"<GET_VAR:ID_EMP1>\\" ]", "descripcion_producto" : "netus et malesuada fames ac turpis", "codigo_de_barras" : "10085"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo producto\n	#Method POST api/producto/nuevo\n	#Input { "activo" : "1", "nombre_producto" : "eu, placerat", "codigo_producto" : "CAO94TUD1ZL", "metodo_costeo" : "precio", "precio" : "90", "costo_estandar" : "31", "compra_en_mostrador" : "false", "auth_token" : "<GET_VAR:AUTH_TOKEN>", "id_empresas" : "[ \\"<GET_VAR:ID_EMP1>\\" ]", "descripcion_producto" : "a, enim. Suspendisse aliquet, sem ut cursus luctus, ipsum leo elementum sem, vitae aliquam", "codigo_de_barras" : "10086"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo producto\n	#Method POST api/producto/nuevo\n	#Input { "activo" : "1", "nombre_producto" : "Nulla dignissim.", "codigo_producto" : "GMR83HIE2JG", "metodo_costeo" : "precio", "precio" : "96", "costo_estandar" : "8", "compra_en_mostrador" : "true", "auth_token" : "<GET_VAR:AUTH_TOKEN>", "id_empresas" : "[ \\"<GET_VAR:ID_EMP1>\\" ]", "descripcion_producto" : "eu neque pellentesque massa lobortis ultrices. Vivamus rhoncus. Donec est. Nunc ullamcorper, velit in aliquet lobortis,", "codigo_de_barras" : "10087"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo producto\n	#Method POST api/producto/nuevo\n	#Input { "activo" : "1", "nombre_producto" : "vel", "codigo_producto" : "LCP50AKR7EV", "metodo_costeo" : "precio", "precio" : "59", "costo_estandar" : "28", "compra_en_mostrador" : "true", "auth_token" : "<GET_VAR:AUTH_TOKEN>", "id_empresas" : "[ \\"<GET_VAR:ID_EMP1>\\" ]", "descripcion_producto" : "amet diam eu dolor egestas rhoncus. Proin nisl sem, consequat nec, mollis vitae,", "codigo_de_barras" : "10088"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo producto\n	#Method POST api/producto/nuevo\n	#Input { "activo" : "1", "nombre_producto" : "morbi tristique senectus", "codigo_producto" : "NFG85MTT8SL", "metodo_costeo" : "precio", "precio" : "57", "costo_estandar" : "8", "compra_en_mostrador" : "false", "auth_token" : "<GET_VAR:AUTH_TOKEN>", "id_empresas" : "[ \\"<GET_VAR:ID_EMP1>\\" ]", "descripcion_producto" : "Donec vitae erat vel pede blandit congue. In", "codigo_de_barras" : "10089"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo producto\n	#Method POST api/producto/nuevo\n	#Input { "activo" : "1", "nombre_producto" : "sociis natoque", "codigo_producto" : "TXA50WTQ9LX", "metodo_costeo" : "precio", "precio" : "90", "costo_estandar" : "25", "compra_en_mostrador" : "true", "auth_token" : "<GET_VAR:AUTH_TOKEN>", "id_empresas" : "[ \\"<GET_VAR:ID_EMP1>\\" ]", "descripcion_producto" : "consequat auctor, nunc nulla vulputate dui,", "codigo_de_barras" : "10090"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo producto\n	#Method POST api/producto/nuevo\n	#Input { "activo" : "1", "nombre_producto" : "non", "codigo_producto" : "GZJ16VGV7NO", "metodo_costeo" : "precio", "precio" : "60", "costo_estandar" : "41", "compra_en_mostrador" : "true", "auth_token" : "<GET_VAR:AUTH_TOKEN>", "id_empresas" : "[ \\"<GET_VAR:ID_EMP1>\\" ]", "descripcion_producto" : "erat neque non quam. Pellentesque habitant morbi", "codigo_de_barras" : "10091"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo producto\n	#Method POST api/producto/nuevo\n	#Input { "activo" : "1", "nombre_producto" : "In mi pede,", "codigo_producto" : "RQW60TKO1LI", "metodo_costeo" : "precio", "precio" : "67", "costo_estandar" : "3", "compra_en_mostrador" : "false", "auth_token" : "<GET_VAR:AUTH_TOKEN>", "id_empresas" : "[ \\"<GET_VAR:ID_EMP1>\\" ]", "descripcion_producto" : "orci sem eget massa. Suspendisse eleifend. Cras sed leo.", "codigo_de_barras" : "10092"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo producto\n	#Method POST api/producto/nuevo\n	#Input { "activo" : "1", "nombre_producto" : "sed tortor. Integer", "codigo_producto" : "FYV94KDG7GC", "metodo_costeo" : "precio", "precio" : "80", "costo_estandar" : "23", "compra_en_mostrador" : "false", "auth_token" : "<GET_VAR:AUTH_TOKEN>", "id_empresas" : "[ \\"<GET_VAR:ID_EMP1>\\" ]", "descripcion_producto" : "auctor non, feugiat nec, diam. Duis mi enim,", "codigo_de_barras" : "10093"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo producto\n	#Method POST api/producto/nuevo\n	#Input { "activo" : "1", "nombre_producto" : "ornare, libero", "codigo_producto" : "BVW12EOI7WS", "metodo_costeo" : "precio", "precio" : "70", "costo_estandar" : "43", "compra_en_mostrador" : "false", "auth_token" : "<GET_VAR:AUTH_TOKEN>", "id_empresas" : "[ \\"<GET_VAR:ID_EMP1>\\" ]", "descripcion_producto" : "est arcu ac orci. Ut semper pretium neque. Morbi", "codigo_de_barras" : "10094"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo producto\n	#Method POST api/producto/nuevo\n	#Input { "activo" : "1", "nombre_producto" : "lorem tristique aliquet.", "codigo_producto" : "CAA82DLT9RB", "metodo_costeo" : "precio", "precio" : "68", "costo_estandar" : "47", "compra_en_mostrador" : "true", "auth_token" : "<GET_VAR:AUTH_TOKEN>", "id_empresas" : "[ \\"<GET_VAR:ID_EMP1>\\" ]", "descripcion_producto" : "imperdiet, erat nonummy ultricies ornare, elit elit fermentum", "codigo_de_barras" : "10095"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo producto\n	#Method POST api/producto/nuevo\n	#Input { "activo" : "1", "nombre_producto" : "dui.", "codigo_producto" : "ZVU76NDO4MH", "metodo_costeo" : "precio", "precio" : "67", "costo_estandar" : "12", "compra_en_mostrador" : "true", "auth_token" : "<GET_VAR:AUTH_TOKEN>", "id_empresas" : "[ \\"<GET_VAR:ID_EMP1>\\" ]", "descripcion_producto" : "Mauris ut quam vel sapien imperdiet ornare. In faucibus.", "codigo_de_barras" : "10096"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo producto\n	#Method POST api/producto/nuevo\n	#Input { "activo" : "1", "nombre_producto" : "tempus", "codigo_producto" : "KRJ33KSH5XC", "metodo_costeo" : "precio", "precio" : "89", "costo_estandar" : "20", "compra_en_mostrador" : "true", "auth_token" : "<GET_VAR:AUTH_TOKEN>", "id_empresas" : "[ \\"<GET_VAR:ID_EMP1>\\" ]", "descripcion_producto" : "odio. Phasellus at augue id ante dictum cursus. Nunc mauris elit, dictum", "codigo_de_barras" : "10097"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo producto\n	#Method POST api/producto/nuevo\n	#Input { "activo" : "1", "nombre_producto" : "enim, condimentum eget,", "codigo_producto" : "RXX13EMQ5WX", "metodo_costeo" : "precio", "precio" : "89", "costo_estandar" : "24", "compra_en_mostrador" : "true", "auth_token" : "<GET_VAR:AUTH_TOKEN>", "id_empresas" : "[ \\"<GET_VAR:ID_EMP1>\\" ]", "descripcion_producto" : "fringilla cursus purus. Nullam scelerisque neque sed sem egestas blandit.", "codigo_de_barras" : "10098"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo producto\n	#Method POST api/producto/nuevo\n	#Input { "activo" : "1", "nombre_producto" : "tristique aliquet.", "codigo_producto" : "HKB73DOS1EW", "metodo_costeo" : "precio", "precio" : "98", "costo_estandar" : "25", "compra_en_mostrador" : "false", "auth_token" : "<GET_VAR:AUTH_TOKEN>", "id_empresas" : "[ \\"<GET_VAR:ID_EMP1>\\" ]", "descripcion_producto" : "neque. Nullam nisl. Maecenas malesuada fringilla est. Mauris eu turpis. Nulla aliquet. Proin velit. Sed", "codigo_de_barras" : "10099"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nueva clasificacion de cliente, es clasificacon o categoria ???? EHH\n	#Method POST api/cliente/clasificacion/nueva\n	#Input { "clave_interna" : "ASDF", "nombre" : "favoritos", "auth_token" : "<GET_VAR:AUTH_TOKEN>"}\n	#Output { "status" : "ok", "id_categoria_cliente" : "<SET_VAR:CLASIF_CLIENTE>" }\n#endTest\n\n#beginTest\n	#Desc Nuevo cliente\n	#Method POST api/cliente/nuevo\n	#Input { "razon_social" : "Cathleen S. Butler", "clasificacion_cliente" : "<GET_VAR:CLASIF_CLIENTE>", "codigo_cliente" : "1", "password" : "NLH01PRZ5DP", "calle" : "567-3309 Pharetra Rd.", "numero_exterior" : "799", "telefono1" : "14*373*9", "id_ciudad" : "29", "rfc" : "XLJ47EGL1LE", "codigo_postal" : "75765", "telefono2" : "1-344-301-7767", "denominacion_comercial" : "Microsoft", "descuento" : "6", "limite_credito" : "3762", "auth_token" : "<GET_VAR:AUTH_TOKEN>"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo cliente\n	#Method POST api/cliente/nuevo\n	#Input { "razon_social" : "Kibo X. Neal", "clasificacion_cliente" : "<GET_VAR:CLASIF_CLIENTE>", "codigo_cliente" : "2", "password" : "HWQ05JBZ1KV", "calle" : "Ap #183-7611 Ullamcorper, St.", "numero_exterior" : "333", "telefono1" : "39*839*0", "id_ciudad" : "23", "rfc" : "SVK85STJ1II", "codigo_postal" : "03826", "telefono2" : "1-196-785-6439", "denominacion_comercial" : "Adobe", "descuento" : "7", "limite_credito" : "10786", "auth_token" : "<GET_VAR:AUTH_TOKEN>"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo cliente\n	#Method POST api/cliente/nuevo\n	#Input { "razon_social" : "Luke M. Yang", "clasificacion_cliente" : "<GET_VAR:CLASIF_CLIENTE>", "codigo_cliente" : "3", "password" : "DOD59BKV2EO", "calle" : "186-2959 Pharetra, Av.", "numero_exterior" : "703", "telefono1" : "37*865*0", "id_ciudad" : "4", "rfc" : "XRK09CEC0BT", "codigo_postal" : "07337", "telefono2" : "1-991-212-6483", "denominacion_comercial" : "Adobe", "descuento" : "7", "limite_credito" : "2854", "auth_token" : "<GET_VAR:AUTH_TOKEN>"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo cliente\n	#Method POST api/cliente/nuevo\n	#Input { "razon_social" : "Belle H. Mitchell", "clasificacion_cliente" : "<GET_VAR:CLASIF_CLIENTE>", "codigo_cliente" : "4", "password" : "QWZ06HGF8FO", "calle" : "P.O. Box 204, 3874 Egestas. Ave", "numero_exterior" : "349", "telefono1" : "825-1931", "id_ciudad" : "25", "rfc" : "JEU45EIZ8XO", "codigo_postal" : "71551", "telefono2" : "1-122-811-1630", "denominacion_comercial" : "Chami", "descuento" : "5", "limite_credito" : "934", "auth_token" : "<GET_VAR:AUTH_TOKEN>"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo cliente\n	#Method POST api/cliente/nuevo\n	#Input { "razon_social" : "Cathleen V. Frank", "clasificacion_cliente" : "<GET_VAR:CLASIF_CLIENTE>", "codigo_cliente" : "5", "password" : "RMZ38CJI1KG", "calle" : "333-7662 Nec Ave", "numero_exterior" : "36", "telefono1" : "1-260-774-1571", "id_ciudad" : "10", "rfc" : "ERT44UQC8HV", "codigo_postal" : "48209", "telefono2" : "1-444-269-4033", "denominacion_comercial" : "Yahoo", "descuento" : "4", "limite_credito" : "14417", "auth_token" : "<GET_VAR:AUTH_TOKEN>"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo cliente\n	#Method POST api/cliente/nuevo\n	#Input { "razon_social" : "Vanna D. Pollard", "clasificacion_cliente" : "<GET_VAR:CLASIF_CLIENTE>", "codigo_cliente" : "6", "password" : "OSN61XQX5KF", "calle" : "P.O. Box 109, 4001 Ipsum. Street", "numero_exterior" : "338", "telefono1" : "87*146*6", "id_ciudad" : "26", "rfc" : "LBA44JKT2TU", "codigo_postal" : "56539", "telefono2" : "1-464-180-6787", "denominacion_comercial" : "Cakewalk", "descuento" : "3", "limite_credito" : "18443", "auth_token" : "<GET_VAR:AUTH_TOKEN>"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo cliente\n	#Method POST api/cliente/nuevo\n	#Input { "razon_social" : "Gemma Q. English", "clasificacion_cliente" : "<GET_VAR:CLASIF_CLIENTE>", "codigo_cliente" : "7", "password" : "KJH11BMH6OO", "calle" : "Ap #467-7989 Dui Street", "numero_exterior" : "917", "telefono1" : "1-337-529-5493", "id_ciudad" : "2", "rfc" : "JKP72MAO2OW", "codigo_postal" : "02986", "telefono2" : "1-313-254-7117", "denominacion_comercial" : "Altavista", "descuento" : "3", "limite_credito" : "19738", "auth_token" : "<GET_VAR:AUTH_TOKEN>"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo cliente\n	#Method POST api/cliente/nuevo\n	#Input { "razon_social" : "Skyler R. Blackwell", "clasificacion_cliente" : "<GET_VAR:CLASIF_CLIENTE>", "codigo_cliente" : "8", "password" : "LNL56FUX1DF", "calle" : "334-9055 Facilisis, Avenue", "numero_exterior" : "718", "telefono1" : "95*474*5", "id_ciudad" : "19", "rfc" : "CXX37PSE5JO", "codigo_postal" : "82874", "telefono2" : "1-781-712-6400", "denominacion_comercial" : "Sibelius", "descuento" : "3", "limite_credito" : "7066", "auth_token" : "<GET_VAR:AUTH_TOKEN>"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo cliente\n	#Method POST api/cliente/nuevo\n	#Input { "razon_social" : "Elaine L. Dennis", "clasificacion_cliente" : "<GET_VAR:CLASIF_CLIENTE>", "codigo_cliente" : "9", "password" : "SMD15EMS1HI", "calle" : "624-3918 Suspendisse Rd.", "numero_exterior" : "716", "telefono1" : "192-4676", "id_ciudad" : "9", "rfc" : "XET45LPR7AE", "codigo_postal" : "49606", "telefono2" : "1-595-896-8104", "denominacion_comercial" : "Finale", "descuento" : "0", "limite_credito" : "9790", "auth_token" : "<GET_VAR:AUTH_TOKEN>"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo cliente\n	#Method POST api/cliente/nuevo\n	#Input { "razon_social" : "Wallace P. Hogan", "clasificacion_cliente" : "<GET_VAR:CLASIF_CLIENTE>", "codigo_cliente" : "10", "password" : "IBK41WIV1KI", "calle" : "1403 Pellentesque Road", "numero_exterior" : "695", "telefono1" : "222-6866", "id_ciudad" : "25", "rfc" : "YFG73YVX6UN", "codigo_postal" : "72487", "telefono2" : "1-818-400-6365", "denominacion_comercial" : "Macromedia", "descuento" : "8", "limite_credito" : "9460", "auth_token" : "<GET_VAR:AUTH_TOKEN>"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo cliente\n	#Method POST api/cliente/nuevo\n	#Input { "razon_social" : "Jared J. Bond", "clasificacion_cliente" : "<GET_VAR:CLASIF_CLIENTE>", "codigo_cliente" : "11", "password" : "HCZ67NPB2QD", "calle" : "5001 Facilisi. St.", "numero_exterior" : "442", "telefono1" : "94*649*7", "id_ciudad" : "19", "rfc" : "WYT74FIK1HE", "codigo_postal" : "71029", "telefono2" : "1-656-373-8217", "denominacion_comercial" : "Cakewalk", "descuento" : "3", "limite_credito" : "18771", "auth_token" : "<GET_VAR:AUTH_TOKEN>"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo cliente\n	#Method POST api/cliente/nuevo\n	#Input { "razon_social" : "Griffith A. Lawson", "clasificacion_cliente" : "<GET_VAR:CLASIF_CLIENTE>", "codigo_cliente" : "12", "password" : "YXV11OEF2OZ", "calle" : "401-8612 Orci, Av.", "numero_exterior" : "796", "telefono1" : "25*837*1", "id_ciudad" : "23", "rfc" : "OUF86ABG8MU", "codigo_postal" : "61687", "telefono2" : "1-164-168-0131", "denominacion_comercial" : "Altavista", "descuento" : "1", "limite_credito" : "16073", "auth_token" : "<GET_VAR:AUTH_TOKEN>"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo cliente\n	#Method POST api/cliente/nuevo\n	#Input { "razon_social" : "Chadwick U. Molina", "clasificacion_cliente" : "<GET_VAR:CLASIF_CLIENTE>", "codigo_cliente" : "13", "password" : "SNW88AKK3MU", "calle" : "P.O. Box 747, 9458 Odio Road", "numero_exterior" : "273", "telefono1" : "1-271-351-6258", "id_ciudad" : "30", "rfc" : "CLG83NZD6HR", "codigo_postal" : "36417", "telefono2" : "1-899-478-0264", "denominacion_comercial" : "Finale", "descuento" : "1", "limite_credito" : "944", "auth_token" : "<GET_VAR:AUTH_TOKEN>"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo cliente\n	#Method POST api/cliente/nuevo\n	#Input { "razon_social" : "Demetrius Z. Torres", "clasificacion_cliente" : "<GET_VAR:CLASIF_CLIENTE>", "codigo_cliente" : "14", "password" : "XUB14NLU1NU", "calle" : "8140 Dui Av.", "numero_exterior" : "136", "telefono1" : "11*265*0", "id_ciudad" : "3", "rfc" : "VGX60BNR7IM", "codigo_postal" : "37195", "telefono2" : "1-405-896-9969", "denominacion_comercial" : "Lavasoft", "descuento" : "8", "limite_credito" : "10854", "auth_token" : "<GET_VAR:AUTH_TOKEN>"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo cliente\n	#Method POST api/cliente/nuevo\n	#Input { "razon_social" : "Kaseem O. Kennedy", "clasificacion_cliente" : "<GET_VAR:CLASIF_CLIENTE>", "codigo_cliente" : "15", "password" : "FEM18KBJ3AC", "calle" : "3904 Leo. Rd.", "numero_exterior" : "148", "telefono1" : "25*755*0", "id_ciudad" : "18", "rfc" : "EYD13HSJ9PF", "codigo_postal" : "42196", "telefono2" : "1-234-626-7424", "denominacion_comercial" : "Lycos", "descuento" : "4", "limite_credito" : "18559", "auth_token" : "<GET_VAR:AUTH_TOKEN>"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo cliente\n	#Method POST api/cliente/nuevo\n	#Input { "razon_social" : "Nita P. Hood", "clasificacion_cliente" : "<GET_VAR:CLASIF_CLIENTE>", "codigo_cliente" : "16", "password" : "CBH53SKM3SI", "calle" : "P.O. Box 698, 1299 Id, Rd.", "numero_exterior" : "270", "telefono1" : "553-1744", "id_ciudad" : "18", "rfc" : "ZAV61CKX5OP", "codigo_postal" : "78490", "telefono2" : "1-851-646-1888", "denominacion_comercial" : "Chami", "descuento" : "3", "limite_credito" : "17067", "auth_token" : "<GET_VAR:AUTH_TOKEN>"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo cliente\n	#Method POST api/cliente/nuevo\n	#Input { "razon_social" : "Susan S. Welch", "clasificacion_cliente" : "<GET_VAR:CLASIF_CLIENTE>", "codigo_cliente" : "17", "password" : "KQX24TNS9QC", "calle" : "9200 Condimentum. Avenue", "numero_exterior" : "950", "telefono1" : "514-5881", "id_ciudad" : "8", "rfc" : "LDF30EEE8KQ", "codigo_postal" : "23481", "telefono2" : "1-543-409-5443", "denominacion_comercial" : "Lavasoft", "descuento" : "1", "limite_credito" : "12585", "auth_token" : "<GET_VAR:AUTH_TOKEN>"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo cliente\n	#Method POST api/cliente/nuevo\n	#Input { "razon_social" : "Uriah K. French", "clasificacion_cliente" : "<GET_VAR:CLASIF_CLIENTE>", "codigo_cliente" : "18", "password" : "KGY86GEG3OL", "calle" : "8466 Et, Rd.", "numero_exterior" : "812", "telefono1" : "340-5858", "id_ciudad" : "5", "rfc" : "EGS10NBA7IB", "codigo_postal" : "25999", "telefono2" : "1-713-286-5913", "denominacion_comercial" : "Lavasoft", "descuento" : "9", "limite_credito" : "14903", "auth_token" : "<GET_VAR:AUTH_TOKEN>"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo cliente\n	#Method POST api/cliente/nuevo\n	#Input { "razon_social" : "Winter J. Fitzgerald", "clasificacion_cliente" : "<GET_VAR:CLASIF_CLIENTE>", "codigo_cliente" : "19", "password" : "UXX70HDB4YN", "calle" : "Ap #160-8305 Mattis. Street", "numero_exterior" : "1", "telefono1" : "677-9568", "id_ciudad" : "11", "rfc" : "BRB14BYO4QI", "codigo_postal" : "85892", "telefono2" : "1-526-372-0516", "denominacion_comercial" : "Macromedia", "descuento" : "9", "limite_credito" : "5866", "auth_token" : "<GET_VAR:AUTH_TOKEN>"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo cliente\n	#Method POST api/cliente/nuevo\n	#Input { "razon_social" : "Fredericka M. Harrison", "clasificacion_cliente" : "<GET_VAR:CLASIF_CLIENTE>", "codigo_cliente" : "20", "password" : "IQN88DBV0BY", "calle" : "Ap #115-1293 Lobortis Avenue", "numero_exterior" : "187", "telefono1" : "82*899*9", "id_ciudad" : "27", "rfc" : "HXK20PQK5UB", "codigo_postal" : "37372", "telefono2" : "1-335-351-9239", "denominacion_comercial" : "Finale", "descuento" : "7", "limite_credito" : "9024", "auth_token" : "<GET_VAR:AUTH_TOKEN>"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo cliente\n	#Method POST api/cliente/nuevo\n	#Input { "razon_social" : "Ignatius O. Mitchell", "clasificacion_cliente" : "<GET_VAR:CLASIF_CLIENTE>", "codigo_cliente" : "21", "password" : "UVO01OOH3FG", "calle" : "P.O. Box 929, 2753 Sodales. Av.", "numero_exterior" : "251", "telefono1" : "880-3699", "id_ciudad" : "19", "rfc" : "BGT95ZOR6VG", "codigo_postal" : "00812", "telefono2" : "1-418-156-8604", "denominacion_comercial" : "Altavista", "descuento" : "6", "limite_credito" : "7970", "auth_token" : "<GET_VAR:AUTH_TOKEN>"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo cliente\n	#Method POST api/cliente/nuevo\n	#Input { "razon_social" : "Yoshi M. Freeman", "clasificacion_cliente" : "<GET_VAR:CLASIF_CLIENTE>", "codigo_cliente" : "22", "password" : "PZI20UVB9NO", "calle" : "731 Ad Rd.", "numero_exterior" : "244", "telefono1" : "1-516-970-9917", "id_ciudad" : "29", "rfc" : "JKN34TUP4RH", "codigo_postal" : "20844", "telefono2" : "1-562-647-1142", "denominacion_comercial" : "Sibelius", "descuento" : "9", "limite_credito" : "15351", "auth_token" : "<GET_VAR:AUTH_TOKEN>"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo cliente\n	#Method POST api/cliente/nuevo\n	#Input { "razon_social" : "Elizabeth F. Aguilar", "clasificacion_cliente" : "<GET_VAR:CLASIF_CLIENTE>", "codigo_cliente" : "23", "password" : "ZSK11QSK3WK", "calle" : "P.O. Box 336, 9583 Fusce Road", "numero_exterior" : "327", "telefono1" : "557-7541", "id_ciudad" : "15", "rfc" : "JUR67ZIS7WM", "codigo_postal" : "41976", "telefono2" : "1-883-869-4370", "denominacion_comercial" : "Apple Systems", "descuento" : "2", "limite_credito" : "13808", "auth_token" : "<GET_VAR:AUTH_TOKEN>"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo cliente\n	#Method POST api/cliente/nuevo\n	#Input { "razon_social" : "Minerva F. Sawyer", "clasificacion_cliente" : "<GET_VAR:CLASIF_CLIENTE>", "codigo_cliente" : "24", "password" : "KTR74TPI5CZ", "calle" : "6164 Lectus Ave", "numero_exterior" : "726", "telefono1" : "1-904-731-7267", "id_ciudad" : "13", "rfc" : "BCC87VTU2MC", "codigo_postal" : "94943", "telefono2" : "1-423-900-9550", "denominacion_comercial" : "Lavasoft", "descuento" : "4", "limite_credito" : "19128", "auth_token" : "<GET_VAR:AUTH_TOKEN>"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo cliente\n	#Method POST api/cliente/nuevo\n	#Input { "razon_social" : "Dorian P. Parks", "clasificacion_cliente" : "<GET_VAR:CLASIF_CLIENTE>", "codigo_cliente" : "25", "password" : "DUO63QEF5LW", "calle" : "Ap #675-531 Nec St.", "numero_exterior" : "360", "telefono1" : "22*734*2", "id_ciudad" : "9", "rfc" : "GWW89FGB2BE", "codigo_postal" : "22836", "telefono2" : "1-605-844-2407", "denominacion_comercial" : "Lycos", "descuento" : "10", "limite_credito" : "5669", "auth_token" : "<GET_VAR:AUTH_TOKEN>"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo cliente\n	#Method POST api/cliente/nuevo\n	#Input { "razon_social" : "Kessie Y. Pratt", "clasificacion_cliente" : "<GET_VAR:CLASIF_CLIENTE>", "codigo_cliente" : "26", "password" : "EGE63YZM9NK", "calle" : "Ap #494-6688 Sed Rd.", "numero_exterior" : "974", "telefono1" : "623-5367", "id_ciudad" : "24", "rfc" : "UZJ26ISJ6DK", "codigo_postal" : "04610", "telefono2" : "1-558-914-1505", "denominacion_comercial" : "Adobe", "descuento" : "7", "limite_credito" : "18054", "auth_token" : "<GET_VAR:AUTH_TOKEN>"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo cliente\n	#Method POST api/cliente/nuevo\n	#Input { "razon_social" : "Quentin X. Gallagher", "clasificacion_cliente" : "<GET_VAR:CLASIF_CLIENTE>", "codigo_cliente" : "27", "password" : "NUB08PFN1GW", "calle" : "7987 Vel Ave", "numero_exterior" : "944", "telefono1" : "991-3861", "id_ciudad" : "7", "rfc" : "IJY01WNZ4YN", "codigo_postal" : "05749", "telefono2" : "1-890-780-6934", "denominacion_comercial" : "Macromedia", "descuento" : "0", "limite_credito" : "8583", "auth_token" : "<GET_VAR:AUTH_TOKEN>"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo cliente\n	#Method POST api/cliente/nuevo\n	#Input { "razon_social" : "Iona L. Mcclure", "clasificacion_cliente" : "<GET_VAR:CLASIF_CLIENTE>", "codigo_cliente" : "28", "password" : "MQD49QCL0NV", "calle" : "Ap #459-5224 Tempor Avenue", "numero_exterior" : "788", "telefono1" : "103-4505", "id_ciudad" : "10", "rfc" : "COY40TTD7BQ", "codigo_postal" : "08656", "telefono2" : "1-539-919-9545", "denominacion_comercial" : "Yahoo", "descuento" : "10", "limite_credito" : "986", "auth_token" : "<GET_VAR:AUTH_TOKEN>"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo cliente\n	#Method POST api/cliente/nuevo\n	#Input { "razon_social" : "Colorado E. Mercer", "clasificacion_cliente" : "<GET_VAR:CLASIF_CLIENTE>", "codigo_cliente" : "29", "password" : "GPE79SJZ2YE", "calle" : "Ap #274-3313 Lectus Avenue", "numero_exterior" : "47", "telefono1" : "68*798*0", "id_ciudad" : "1", "rfc" : "XXO12PDV6CN", "codigo_postal" : "07762", "telefono2" : "1-409-877-4063", "denominacion_comercial" : "Chami", "descuento" : "10", "limite_credito" : "14352", "auth_token" : "<GET_VAR:AUTH_TOKEN>"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo cliente\n	#Method POST api/cliente/nuevo\n	#Input { "razon_social" : "Sade P. Gilliam", "clasificacion_cliente" : "<GET_VAR:CLASIF_CLIENTE>", "codigo_cliente" : "30", "password" : "QBC67LNL4FY", "calle" : "347-3046 Velit. Ave", "numero_exterior" : "880", "telefono1" : "24*367*7", "id_ciudad" : "21", "rfc" : "EQD49AMI4NL", "codigo_postal" : "83837", "telefono2" : "1-639-550-3188", "denominacion_comercial" : "Lycos", "descuento" : "0", "limite_credito" : "14640", "auth_token" : "<GET_VAR:AUTH_TOKEN>"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo cliente\n	#Method POST api/cliente/nuevo\n	#Input { "razon_social" : "Xandra I. Ortiz", "clasificacion_cliente" : "<GET_VAR:CLASIF_CLIENTE>", "codigo_cliente" : "31", "password" : "OUS76OMM5PQ", "calle" : "Ap #733-739 Eu, Rd.", "numero_exterior" : "679", "telefono1" : "1-872-853-1689", "id_ciudad" : "8", "rfc" : "WUV58NJQ7FD", "codigo_postal" : "31577", "telefono2" : "1-148-933-8002", "denominacion_comercial" : "Lycos", "descuento" : "0", "limite_credito" : "18064", "auth_token" : "<GET_VAR:AUTH_TOKEN>"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo cliente\n	#Method POST api/cliente/nuevo\n	#Input { "razon_social" : "Maggy R. Munoz", "clasificacion_cliente" : "<GET_VAR:CLASIF_CLIENTE>", "codigo_cliente" : "32", "password" : "EYN20VTQ3KI", "calle" : "Ap #927-2613 Enim Ave", "numero_exterior" : "840", "telefono1" : "984-6031", "id_ciudad" : "12", "rfc" : "UDA63WVA4BO", "codigo_postal" : "66387", "telefono2" : "1-297-377-1131", "denominacion_comercial" : "Borland", "descuento" : "3", "limite_credito" : "4988", "auth_token" : "<GET_VAR:AUTH_TOKEN>"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo cliente\n	#Method POST api/cliente/nuevo\n	#Input { "razon_social" : "Emmanuel E. Orr", "clasificacion_cliente" : "<GET_VAR:CLASIF_CLIENTE>", "codigo_cliente" : "33", "password" : "WKI07MNF9KS", "calle" : "297-7275 Viverra. Road", "numero_exterior" : "51", "telefono1" : "975-1594", "id_ciudad" : "17", "rfc" : "GXA46CRT3FC", "codigo_postal" : "37199", "telefono2" : "1-811-491-0426", "denominacion_comercial" : "Apple Systems", "descuento" : "4", "limite_credito" : "9565", "auth_token" : "<GET_VAR:AUTH_TOKEN>"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo cliente\n	#Method POST api/cliente/nuevo\n	#Input { "razon_social" : "Kenneth A. Hickman", "clasificacion_cliente" : "<GET_VAR:CLASIF_CLIENTE>", "codigo_cliente" : "34", "password" : "EOC68TZO9YH", "calle" : "2742 Ac, Ave", "numero_exterior" : "123", "telefono1" : "953-3559", "id_ciudad" : "2", "rfc" : "PSV49YFB4FP", "codigo_postal" : "18126", "telefono2" : "1-512-322-8663", "denominacion_comercial" : "Sibelius", "descuento" : "4", "limite_credito" : "6701", "auth_token" : "<GET_VAR:AUTH_TOKEN>"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo cliente\n	#Method POST api/cliente/nuevo\n	#Input { "razon_social" : "Nash P. Hawkins", "clasificacion_cliente" : "<GET_VAR:CLASIF_CLIENTE>", "codigo_cliente" : "35", "password" : "PQL22VLW8VE", "calle" : "9520 Non Street", "numero_exterior" : "891", "telefono1" : "561-8275", "id_ciudad" : "8", "rfc" : "WPP65MSZ7MV", "codigo_postal" : "58112", "telefono2" : "1-412-897-4067", "denominacion_comercial" : "Adobe", "descuento" : "6", "limite_credito" : "10640", "auth_token" : "<GET_VAR:AUTH_TOKEN>"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo cliente\n	#Method POST api/cliente/nuevo\n	#Input { "razon_social" : "Carla L. Mathis", "clasificacion_cliente" : "<GET_VAR:CLASIF_CLIENTE>", "codigo_cliente" : "36", "password" : "MHY59RJB1EB", "calle" : "5088 Nam Road", "numero_exterior" : "818", "telefono1" : "932-4877", "id_ciudad" : "27", "rfc" : "UQG51BWQ9JR", "codigo_postal" : "52336", "telefono2" : "1-372-151-3761", "denominacion_comercial" : "Microsoft", "descuento" : "7", "limite_credito" : "16312", "auth_token" : "<GET_VAR:AUTH_TOKEN>"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo cliente\n	#Method POST api/cliente/nuevo\n	#Input { "razon_social" : "Dillon C. Espinoza", "clasificacion_cliente" : "<GET_VAR:CLASIF_CLIENTE>", "codigo_cliente" : "37", "password" : "QLM40RZM6XO", "calle" : "850-824 Ullamcorper Rd.", "numero_exterior" : "994", "telefono1" : "82*676*2", "id_ciudad" : "7", "rfc" : "GGO03OLD7MU", "codigo_postal" : "37300", "telefono2" : "1-981-526-2915", "denominacion_comercial" : "Sibelius", "descuento" : "4", "limite_credito" : "3406", "auth_token" : "<GET_VAR:AUTH_TOKEN>"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo cliente\n	#Method POST api/cliente/nuevo\n	#Input { "razon_social" : "Kibo J. Kinney", "clasificacion_cliente" : "<GET_VAR:CLASIF_CLIENTE>", "codigo_cliente" : "38", "password" : "NDP43ELN5QK", "calle" : "Ap #521-4881 Ridiculus Rd.", "numero_exterior" : "995", "telefono1" : "1-504-923-4177", "id_ciudad" : "21", "rfc" : "ING79GIC7FI", "codigo_postal" : "59438", "telefono2" : "1-265-935-9695", "denominacion_comercial" : "Yahoo", "descuento" : "5", "limite_credito" : "3409", "auth_token" : "<GET_VAR:AUTH_TOKEN>"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo cliente\n	#Method POST api/cliente/nuevo\n	#Input { "razon_social" : "Zelenia Y. Holman", "clasificacion_cliente" : "<GET_VAR:CLASIF_CLIENTE>", "codigo_cliente" : "39", "password" : "JYY08MAT9TT", "calle" : "967-4201 Suspendisse Ave", "numero_exterior" : "493", "telefono1" : "28*715*7", "id_ciudad" : "9", "rfc" : "SST61GEL5EY", "codigo_postal" : "59390", "telefono2" : "1-973-737-5316", "denominacion_comercial" : "Lycos", "descuento" : "8", "limite_credito" : "16657", "auth_token" : "<GET_VAR:AUTH_TOKEN>"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo cliente\n	#Method POST api/cliente/nuevo\n	#Input { "razon_social" : "Gail D. Mason", "clasificacion_cliente" : "<GET_VAR:CLASIF_CLIENTE>", "codigo_cliente" : "40", "password" : "YJR25IMA1NH", "calle" : "267-8933 Tempus St.", "numero_exterior" : "76", "telefono1" : "76*126*3", "id_ciudad" : "27", "rfc" : "PWF77HQF7IN", "codigo_postal" : "23823", "telefono2" : "1-922-932-4049", "denominacion_comercial" : "Cakewalk", "descuento" : "3", "limite_credito" : "13848", "auth_token" : "<GET_VAR:AUTH_TOKEN>"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo cliente\n	#Method POST api/cliente/nuevo\n	#Input { "razon_social" : "Anastasia I. Frederick", "clasificacion_cliente" : "<GET_VAR:CLASIF_CLIENTE>", "codigo_cliente" : "41", "password" : "VPU90UCK5VX", "calle" : "2716 Dui St.", "numero_exterior" : "392", "telefono1" : "69*830*2", "id_ciudad" : "26", "rfc" : "FIA05KIM2XS", "codigo_postal" : "54204", "telefono2" : "1-735-704-1269", "denominacion_comercial" : "Adobe", "descuento" : "5", "limite_credito" : "9909", "auth_token" : "<GET_VAR:AUTH_TOKEN>"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo cliente\n	#Method POST api/cliente/nuevo\n	#Input { "razon_social" : "Amethyst E. Dunn", "clasificacion_cliente" : "<GET_VAR:CLASIF_CLIENTE>", "codigo_cliente" : "42", "password" : "ORH83FBU6GD", "calle" : "Ap #170-5663 Porttitor Rd.", "numero_exterior" : "535", "telefono1" : "46*944*6", "id_ciudad" : "17", "rfc" : "CFH17VFK1UO", "codigo_postal" : "07074", "telefono2" : "1-734-367-3218", "denominacion_comercial" : "Apple Systems", "descuento" : "4", "limite_credito" : "4212", "auth_token" : "<GET_VAR:AUTH_TOKEN>"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo cliente\n	#Method POST api/cliente/nuevo\n	#Input { "razon_social" : "Hayes I. Stafford", "clasificacion_cliente" : "<GET_VAR:CLASIF_CLIENTE>", "codigo_cliente" : "43", "password" : "XPQ17NST7XS", "calle" : "111-6146 Praesent Rd.", "numero_exterior" : "970", "telefono1" : "683-9795", "id_ciudad" : "6", "rfc" : "LBM46LDR2HX", "codigo_postal" : "83840", "telefono2" : "1-225-871-7014", "denominacion_comercial" : "Altavista", "descuento" : "4", "limite_credito" : "5241", "auth_token" : "<GET_VAR:AUTH_TOKEN>"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo cliente\n	#Method POST api/cliente/nuevo\n	#Input { "razon_social" : "Marshall M. Jarvis", "clasificacion_cliente" : "<GET_VAR:CLASIF_CLIENTE>", "codigo_cliente" : "44", "password" : "AQE07RAL0RG", "calle" : "8136 Turpis Av.", "numero_exterior" : "147", "telefono1" : "18*777*2", "id_ciudad" : "15", "rfc" : "NZH48LOI4GG", "codigo_postal" : "05096", "telefono2" : "1-662-401-7766", "denominacion_comercial" : "Adobe", "descuento" : "2", "limite_credito" : "5453", "auth_token" : "<GET_VAR:AUTH_TOKEN>"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo cliente\n	#Method POST api/cliente/nuevo\n	#Input { "razon_social" : "Ezekiel R. Acosta", "clasificacion_cliente" : "<GET_VAR:CLASIF_CLIENTE>", "codigo_cliente" : "45", "password" : "FEM97EKL9QX", "calle" : "Ap #925-2256 Parturient Ave", "numero_exterior" : "838", "telefono1" : "348-9694", "id_ciudad" : "4", "rfc" : "BJT95OHQ1UY", "codigo_postal" : "56572", "telefono2" : "1-989-362-6413", "denominacion_comercial" : "Lavasoft", "descuento" : "6", "limite_credito" : "17362", "auth_token" : "<GET_VAR:AUTH_TOKEN>"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo cliente\n	#Method POST api/cliente/nuevo\n	#Input { "razon_social" : "Katelyn D. Bishop", "clasificacion_cliente" : "<GET_VAR:CLASIF_CLIENTE>", "codigo_cliente" : "46", "password" : "IHV74FFC1LH", "calle" : "P.O. Box 826, 4297 Quis Av.", "numero_exterior" : "822", "telefono1" : "1-876-457-6557", "id_ciudad" : "29", "rfc" : "ZYY73UPB3AR", "codigo_postal" : "29819", "telefono2" : "1-162-736-9236", "denominacion_comercial" : "Finale", "descuento" : "0", "limite_credito" : "5892", "auth_token" : "<GET_VAR:AUTH_TOKEN>"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo cliente\n	#Method POST api/cliente/nuevo\n	#Input { "razon_social" : "Fulton M. Warner", "clasificacion_cliente" : "<GET_VAR:CLASIF_CLIENTE>", "codigo_cliente" : "47", "password" : "OQL79BCR0BB", "calle" : "544-2120 Nec Rd.", "numero_exterior" : "448", "telefono1" : "1-273-209-2749", "id_ciudad" : "7", "rfc" : "ITN89YZR3DR", "codigo_postal" : "06577", "telefono2" : "1-333-728-3185", "denominacion_comercial" : "Sibelius", "descuento" : "3", "limite_credito" : "19419", "auth_token" : "<GET_VAR:AUTH_TOKEN>"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo cliente\n	#Method POST api/cliente/nuevo\n	#Input { "razon_social" : "Stella I. Zamora", "clasificacion_cliente" : "<GET_VAR:CLASIF_CLIENTE>", "codigo_cliente" : "48", "password" : "FWS36HBY7FR", "calle" : "9600 Dis Rd.", "numero_exterior" : "999", "telefono1" : "1-630-169-5531", "id_ciudad" : "26", "rfc" : "JIJ32JXQ3ZG", "codigo_postal" : "93565", "telefono2" : "1-458-660-5627", "denominacion_comercial" : "Macromedia", "descuento" : "6", "limite_credito" : "15183", "auth_token" : "<GET_VAR:AUTH_TOKEN>"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo cliente\n	#Method POST api/cliente/nuevo\n	#Input { "razon_social" : "Reagan D. Gibbs", "clasificacion_cliente" : "<GET_VAR:CLASIF_CLIENTE>", "codigo_cliente" : "49", "password" : "MKS16MAZ2OC", "calle" : "1721 Nulla Ave", "numero_exterior" : "816", "telefono1" : "1-142-609-9313", "id_ciudad" : "13", "rfc" : "IIE24ZIZ2XB", "codigo_postal" : "21344", "telefono2" : "1-284-312-9346", "denominacion_comercial" : "Adobe", "descuento" : "10", "limite_credito" : "7326", "auth_token" : "<GET_VAR:AUTH_TOKEN>"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo cliente\n	#Method POST api/cliente/nuevo\n	#Input { "razon_social" : "Alexander C. Heath", "clasificacion_cliente" : "<GET_VAR:CLASIF_CLIENTE>", "codigo_cliente" : "50", "password" : "FQA50RRB7OG", "calle" : "Ap #922-5280 Convallis Street", "numero_exterior" : "394", "telefono1" : "64*424*2", "id_ciudad" : "21", "rfc" : "ADJ96THO0QV", "codigo_postal" : "95197", "telefono2" : "1-786-513-3803", "denominacion_comercial" : "Cakewalk", "descuento" : "9", "limite_credito" : "14102", "auth_token" : "<GET_VAR:AUTH_TOKEN>"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo cliente\n	#Method POST api/cliente/nuevo\n	#Input { "razon_social" : "Plato C. Walls", "clasificacion_cliente" : "<GET_VAR:CLASIF_CLIENTE>", "codigo_cliente" : "51", "password" : "MGL23UKF7XO", "calle" : "P.O. Box 128, 4441 Eget Av.", "numero_exterior" : "707", "telefono1" : "53*795*5", "id_ciudad" : "3", "rfc" : "NRF51XUN1WQ", "codigo_postal" : "48425", "telefono2" : "1-235-619-3856", "denominacion_comercial" : "", "descuento" : "8", "limite_credito" : "17634", "auth_token" : "<GET_VAR:AUTH_TOKEN>"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo cliente\n	#Method POST api/cliente/nuevo\n	#Input { "razon_social" : "Venus S. Hester", "clasificacion_cliente" : "<GET_VAR:CLASIF_CLIENTE>", "codigo_cliente" : "52", "password" : "DKC09SWJ8AQ", "calle" : "103-4826 Rutrum Ave", "numero_exterior" : "760", "telefono1" : "13*986*8", "id_ciudad" : "10", "rfc" : "WPT80NON1YW", "codigo_postal" : "20581", "telefono2" : "1-561-426-3283", "denominacion_comercial" : "Altavista", "descuento" : "8", "limite_credito" : "2643", "auth_token" : "<GET_VAR:AUTH_TOKEN>"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo cliente\n	#Method POST api/cliente/nuevo\n	#Input { "razon_social" : "Mona G. Gonzalez", "clasificacion_cliente" : "<GET_VAR:CLASIF_CLIENTE>", "codigo_cliente" : "53", "password" : "AAO28XVX2TZ", "calle" : "5712 Convallis Street", "numero_exterior" : "205", "telefono1" : "1-728-409-5327", "id_ciudad" : "13", "rfc" : "PNT50YFJ7OK", "codigo_postal" : "32118", "telefono2" : "1-717-192-0414", "denominacion_comercial" : "Lavasoft", "descuento" : "8", "limite_credito" : "15211", "auth_token" : "<GET_VAR:AUTH_TOKEN>"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo cliente\n	#Method POST api/cliente/nuevo\n	#Input { "razon_social" : "Walter H. Fuller", "clasificacion_cliente" : "<GET_VAR:CLASIF_CLIENTE>", "codigo_cliente" : "54", "password" : "IPK87UYV1XP", "calle" : "4148 Ornare. Rd.", "numero_exterior" : "608", "telefono1" : "608-8314", "id_ciudad" : "25", "rfc" : "SWJ62ZRJ3DG", "codigo_postal" : "15252", "telefono2" : "1-632-378-3676", "denominacion_comercial" : "Lavasoft", "descuento" : "6", "limite_credito" : "17988", "auth_token" : "<GET_VAR:AUTH_TOKEN>"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo cliente\n	#Method POST api/cliente/nuevo\n	#Input { "razon_social" : "Dorian E. Huff", "clasificacion_cliente" : "<GET_VAR:CLASIF_CLIENTE>", "codigo_cliente" : "55", "password" : "XHM50CHF4CT", "calle" : "772-4234 Mauris Av.", "numero_exterior" : "681", "telefono1" : "1-136-623-5517", "id_ciudad" : "15", "rfc" : "WYV63NRS2IY", "codigo_postal" : "92818", "telefono2" : "1-694-768-0842", "denominacion_comercial" : "Yahoo", "descuento" : "2", "limite_credito" : "9728", "auth_token" : "<GET_VAR:AUTH_TOKEN>"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo cliente\n	#Method POST api/cliente/nuevo\n	#Input { "razon_social" : "Jessamine Z. Hebert", "clasificacion_cliente" : "<GET_VAR:CLASIF_CLIENTE>", "codigo_cliente" : "56", "password" : "JHA27FPG1NX", "calle" : "P.O. Box 969, 3029 Nisl St.", "numero_exterior" : "302", "telefono1" : "65*917*0", "id_ciudad" : "20", "rfc" : "AWV91CWL1ZE", "codigo_postal" : "96792", "telefono2" : "1-706-113-0503", "denominacion_comercial" : "Chami", "descuento" : "10", "limite_credito" : "624", "auth_token" : "<GET_VAR:AUTH_TOKEN>"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo cliente\n	#Method POST api/cliente/nuevo\n	#Input { "razon_social" : "Haviva Y. Chan", "clasificacion_cliente" : "<GET_VAR:CLASIF_CLIENTE>", "codigo_cliente" : "57", "password" : "TMZ25JNF3GW", "calle" : "Ap #411-8029 Mauris. Ave", "numero_exterior" : "195", "telefono1" : "950-8358", "id_ciudad" : "4", "rfc" : "AAQ38VLO6LH", "codigo_postal" : "32559", "telefono2" : "1-172-161-5608", "denominacion_comercial" : "Chami", "descuento" : "8", "limite_credito" : "1723", "auth_token" : "<GET_VAR:AUTH_TOKEN>"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo cliente\n	#Method POST api/cliente/nuevo\n	#Input { "razon_social" : "Galena X. Solomon", "clasificacion_cliente" : "<GET_VAR:CLASIF_CLIENTE>", "codigo_cliente" : "58", "password" : "GAM90JEW8LX", "calle" : "337-6048 Aliquam Avenue", "numero_exterior" : "64", "telefono1" : "686-4079", "id_ciudad" : "15", "rfc" : "NQZ72AYC0XB", "codigo_postal" : "27858", "telefono2" : "1-417-693-4685", "denominacion_comercial" : "Macromedia", "descuento" : "3", "limite_credito" : "3072", "auth_token" : "<GET_VAR:AUTH_TOKEN>"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo cliente\n	#Method POST api/cliente/nuevo\n	#Input { "razon_social" : "Cameron G. Clark", "clasificacion_cliente" : "<GET_VAR:CLASIF_CLIENTE>", "codigo_cliente" : "59", "password" : "MNS13FLD7NG", "calle" : "990-3288 Cras St.", "numero_exterior" : "253", "telefono1" : "72*523*3", "id_ciudad" : "18", "rfc" : "XXB82IYR1GG", "codigo_postal" : "31346", "telefono2" : "1-490-104-2319", "denominacion_comercial" : "Finale", "descuento" : "8", "limite_credito" : "12543", "auth_token" : "<GET_VAR:AUTH_TOKEN>"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo cliente\n	#Method POST api/cliente/nuevo\n	#Input { "razon_social" : "Palmer F. Preston", "clasificacion_cliente" : "<GET_VAR:CLASIF_CLIENTE>", "codigo_cliente" : "60", "password" : "KFM72KWT0FU", "calle" : "P.O. Box 625, 714 Arcu. Av.", "numero_exterior" : "431", "telefono1" : "837-0795", "id_ciudad" : "23", "rfc" : "AKX64ISV9PV", "codigo_postal" : "47361", "telefono2" : "1-685-784-1558", "denominacion_comercial" : "Borland", "descuento" : "3", "limite_credito" : "13107", "auth_token" : "<GET_VAR:AUTH_TOKEN>"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo cliente\n	#Method POST api/cliente/nuevo\n	#Input { "razon_social" : "Wanda Y. Lambert", "clasificacion_cliente" : "<GET_VAR:CLASIF_CLIENTE>", "codigo_cliente" : "61", "password" : "VYB34YWP3PS", "calle" : "5461 Gravida. Street", "numero_exterior" : "660", "telefono1" : "46*635*2", "id_ciudad" : "3", "rfc" : "ZXI84AXU9TK", "codigo_postal" : "15092", "telefono2" : "1-611-858-2906", "denominacion_comercial" : "Adobe", "descuento" : "6", "limite_credito" : "16781", "auth_token" : "<GET_VAR:AUTH_TOKEN>"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo cliente\n	#Method POST api/cliente/nuevo\n	#Input { "razon_social" : "Linda H. Weber", "clasificacion_cliente" : "<GET_VAR:CLASIF_CLIENTE>", "codigo_cliente" : "62", "password" : "IUP38GOB3LY", "calle" : "P.O. Box 238, 3573 Consequat, Av.", "numero_exterior" : "195", "telefono1" : "1-311-900-3861", "id_ciudad" : "22", "rfc" : "SZV83AEN1CO", "codigo_postal" : "38684", "telefono2" : "1-244-957-3621", "denominacion_comercial" : "Cakewalk", "descuento" : "4", "limite_credito" : "10843", "auth_token" : "<GET_VAR:AUTH_TOKEN>"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo cliente\n	#Method POST api/cliente/nuevo\n	#Input { "razon_social" : "Scarlet V. Valenzuela", "clasificacion_cliente" : "<GET_VAR:CLASIF_CLIENTE>", "codigo_cliente" : "63", "password" : "LQD08GNI4SE", "calle" : "4666 Justo Ave", "numero_exterior" : "442", "telefono1" : "26*731*1", "id_ciudad" : "27", "rfc" : "GHP07BGG0QE", "codigo_postal" : "97459", "telefono2" : "1-540-863-9869", "denominacion_comercial" : "Sibelius", "descuento" : "3", "limite_credito" : "17351", "auth_token" : "<GET_VAR:AUTH_TOKEN>"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo cliente\n	#Method POST api/cliente/nuevo\n	#Input { "razon_social" : "Curran G. Saunders", "clasificacion_cliente" : "<GET_VAR:CLASIF_CLIENTE>", "codigo_cliente" : "64", "password" : "UFE68CEM1HV", "calle" : "851-8176 Nibh Rd.", "numero_exterior" : "5", "telefono1" : "869-0412", "id_ciudad" : "11", "rfc" : "ZEQ80QFQ4ZD", "codigo_postal" : "68674", "telefono2" : "1-335-843-4449", "denominacion_comercial" : "Microsoft", "descuento" : "1", "limite_credito" : "17653", "auth_token" : "<GET_VAR:AUTH_TOKEN>"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo cliente\n	#Method POST api/cliente/nuevo\n	#Input { "razon_social" : "Mechelle M. Horne", "clasificacion_cliente" : "<GET_VAR:CLASIF_CLIENTE>", "codigo_cliente" : "65", "password" : "HVZ72XJZ9BA", "calle" : "330-9148 Penatibus Street", "numero_exterior" : "924", "telefono1" : "186-4144", "id_ciudad" : "23", "rfc" : "RQG95EIS3VT", "codigo_postal" : "73496", "telefono2" : "1-901-121-8960", "denominacion_comercial" : "Cakewalk", "descuento" : "8", "limite_credito" : "256", "auth_token" : "<GET_VAR:AUTH_TOKEN>"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo cliente\n	#Method POST api/cliente/nuevo\n	#Input { "razon_social" : "Helen I. Gibson", "clasificacion_cliente" : "<GET_VAR:CLASIF_CLIENTE>", "codigo_cliente" : "66", "password" : "XLF80GFD1IP", "calle" : "931-7827 Scelerisque St.", "numero_exterior" : "844", "telefono1" : "318-5037", "id_ciudad" : "4", "rfc" : "PQN54JQA5NR", "codigo_postal" : "43522", "telefono2" : "1-686-139-1252", "denominacion_comercial" : "Borland", "descuento" : "8", "limite_credito" : "10512", "auth_token" : "<GET_VAR:AUTH_TOKEN>"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo cliente\n	#Method POST api/cliente/nuevo\n	#Input { "razon_social" : "Ina T. Blackwell", "clasificacion_cliente" : "<GET_VAR:CLASIF_CLIENTE>", "codigo_cliente" : "67", "password" : "AZY24EVU3VC", "calle" : "Ap #359-462 Cursus Road", "numero_exterior" : "808", "telefono1" : "1-624-478-1865", "id_ciudad" : "30", "rfc" : "IQQ66LFW9OQ", "codigo_postal" : "71846", "telefono2" : "1-764-410-7830", "denominacion_comercial" : "Borland", "descuento" : "7", "limite_credito" : "8693", "auth_token" : "<GET_VAR:AUTH_TOKEN>"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo cliente\n	#Method POST api/cliente/nuevo\n	#Input { "razon_social" : "Aristotle O. Morrow", "clasificacion_cliente" : "<GET_VAR:CLASIF_CLIENTE>", "codigo_cliente" : "68", "password" : "FRH09JKN0XL", "calle" : "P.O. Box 517, 6359 Cursus Street", "numero_exterior" : "83", "telefono1" : "684-1014", "id_ciudad" : "3", "rfc" : "XSF33HVZ9YA", "codigo_postal" : "53311", "telefono2" : "1-464-340-0911", "denominacion_comercial" : "Cakewalk", "descuento" : "2", "limite_credito" : "8906", "auth_token" : "<GET_VAR:AUTH_TOKEN>"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo cliente\n	#Method POST api/cliente/nuevo\n	#Input { "razon_social" : "Summer A. Norman", "clasificacion_cliente" : "<GET_VAR:CLASIF_CLIENTE>", "codigo_cliente" : "69", "password" : "KSC38GKM4QW", "calle" : "P.O. Box 463, 4877 Fusce Rd.", "numero_exterior" : "207", "telefono1" : "1-367-500-7439", "id_ciudad" : "17", "rfc" : "IPQ70VAT5OV", "codigo_postal" : "23327", "telefono2" : "1-623-925-2889", "denominacion_comercial" : "Lavasoft", "descuento" : "2", "limite_credito" : "2142", "auth_token" : "<GET_VAR:AUTH_TOKEN>"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo cliente\n	#Method POST api/cliente/nuevo\n	#Input { "razon_social" : "Regina G. Castaneda", "clasificacion_cliente" : "<GET_VAR:CLASIF_CLIENTE>", "codigo_cliente" : "70", "password" : "DTN06NGX5RU", "calle" : "5333 Leo. Ave", "numero_exterior" : "419", "telefono1" : "876-9977", "id_ciudad" : "20", "rfc" : "BNK80VYT5BS", "codigo_postal" : "06582", "telefono2" : "1-316-894-5544", "denominacion_comercial" : "Finale", "descuento" : "1", "limite_credito" : "17888", "auth_token" : "<GET_VAR:AUTH_TOKEN>"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo cliente\n	#Method POST api/cliente/nuevo\n	#Input { "razon_social" : "Nola N. Dickson", "clasificacion_cliente" : "<GET_VAR:CLASIF_CLIENTE>", "codigo_cliente" : "71", "password" : "TSB21NOH5OU", "calle" : "Ap #177-2144 Sed Rd.", "numero_exterior" : "356", "telefono1" : "1-220-316-1527", "id_ciudad" : "29", "rfc" : "MUM50VTH8AL", "codigo_postal" : "84657", "telefono2" : "1-510-793-7825", "denominacion_comercial" : "Lavasoft", "descuento" : "4", "limite_credito" : "15564", "auth_token" : "<GET_VAR:AUTH_TOKEN>"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo cliente\n	#Method POST api/cliente/nuevo\n	#Input { "razon_social" : "Germaine U. Cervantes", "clasificacion_cliente" : "<GET_VAR:CLASIF_CLIENTE>", "codigo_cliente" : "72", "password" : "NNN37DYX8IM", "calle" : "P.O. Box 870, 2852 Curae; Av.", "numero_exterior" : "118", "telefono1" : "727-4720", "id_ciudad" : "11", "rfc" : "FEK04NJR2BR", "codigo_postal" : "76410", "telefono2" : "1-542-109-2749", "denominacion_comercial" : "Sibelius", "descuento" : "1", "limite_credito" : "2156", "auth_token" : "<GET_VAR:AUTH_TOKEN>"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo cliente\n	#Method POST api/cliente/nuevo\n	#Input { "razon_social" : "Patricia W. Ray", "clasificacion_cliente" : "<GET_VAR:CLASIF_CLIENTE>", "codigo_cliente" : "73", "password" : "XTD62CSR1RI", "calle" : "7449 Imperdiet Rd.", "numero_exterior" : "730", "telefono1" : "67*474*1", "id_ciudad" : "5", "rfc" : "MER49KEI7WV", "codigo_postal" : "73348", "telefono2" : "1-281-919-6341", "denominacion_comercial" : "Finale", "descuento" : "6", "limite_credito" : "17964", "auth_token" : "<GET_VAR:AUTH_TOKEN>"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo cliente\n	#Method POST api/cliente/nuevo\n	#Input { "razon_social" : "Edward V. Suarez", "clasificacion_cliente" : "<GET_VAR:CLASIF_CLIENTE>", "codigo_cliente" : "74", "password" : "HUM62RZY5ED", "calle" : "Ap #672-5840 Vivamus Av.", "numero_exterior" : "361", "telefono1" : "454-2826", "id_ciudad" : "17", "rfc" : "AJB69LYA0WZ", "codigo_postal" : "96378", "telefono2" : "1-275-529-0718", "denominacion_comercial" : "Yahoo", "descuento" : "6", "limite_credito" : "19912", "auth_token" : "<GET_VAR:AUTH_TOKEN>"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo cliente\n	#Method POST api/cliente/nuevo\n	#Input { "razon_social" : "Nicholas T. Campos", "clasificacion_cliente" : "<GET_VAR:CLASIF_CLIENTE>", "codigo_cliente" : "75", "password" : "PCU33RJF9WL", "calle" : "Ap #944-2704 Etiam Ave", "numero_exterior" : "679", "telefono1" : "1-684-281-8873", "id_ciudad" : "18", "rfc" : "WZD82VKC2PX", "codigo_postal" : "60552", "telefono2" : "1-447-288-2369", "denominacion_comercial" : "Microsoft", "descuento" : "8", "limite_credito" : "12305", "auth_token" : "<GET_VAR:AUTH_TOKEN>"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo cliente\n	#Method POST api/cliente/nuevo\n	#Input { "razon_social" : "Pearl M. Mckinney", "clasificacion_cliente" : "<GET_VAR:CLASIF_CLIENTE>", "codigo_cliente" : "76", "password" : "RMT91RZL6XZ", "calle" : "Ap #561-6214 Vel, Avenue", "numero_exterior" : "368", "telefono1" : "292-6564", "id_ciudad" : "8", "rfc" : "SKZ20IHL1EM", "codigo_postal" : "98483", "telefono2" : "1-893-855-8724", "denominacion_comercial" : "Cakewalk", "descuento" : "4", "limite_credito" : "1507", "auth_token" : "<GET_VAR:AUTH_TOKEN>"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo cliente\n	#Method POST api/cliente/nuevo\n	#Input { "razon_social" : "Priscilla X. Parker", "clasificacion_cliente" : "<GET_VAR:CLASIF_CLIENTE>", "codigo_cliente" : "77", "password" : "KHS15DPG1WB", "calle" : "Ap #742-1543 Urna. Road", "numero_exterior" : "883", "telefono1" : "53*905*1", "id_ciudad" : "19", "rfc" : "VIF54CRI4FH", "codigo_postal" : "82930", "telefono2" : "1-664-636-4877", "denominacion_comercial" : "Finale", "descuento" : "9", "limite_credito" : "6795", "auth_token" : "<GET_VAR:AUTH_TOKEN>"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo cliente\n	#Method POST api/cliente/nuevo\n	#Input { "razon_social" : "Hiroko X. Wise", "clasificacion_cliente" : "<GET_VAR:CLASIF_CLIENTE>", "codigo_cliente" : "78", "password" : "BQI84BMA1JP", "calle" : "574-7623 Nulla Ave", "numero_exterior" : "827", "telefono1" : "1-999-836-0165", "id_ciudad" : "8", "rfc" : "KWN96JXP2TY", "codigo_postal" : "28953", "telefono2" : "1-980-645-9993", "denominacion_comercial" : "Altavista", "descuento" : "9", "limite_credito" : "12389", "auth_token" : "<GET_VAR:AUTH_TOKEN>"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo cliente\n	#Method POST api/cliente/nuevo\n	#Input { "razon_social" : "Leroy M. Kelley", "clasificacion_cliente" : "<GET_VAR:CLASIF_CLIENTE>", "codigo_cliente" : "79", "password" : "RBL60TXS3TF", "calle" : "Ap #175-189 Placerat, Street", "numero_exterior" : "630", "telefono1" : "37*314*6", "id_ciudad" : "20", "rfc" : "JEJ41AUL4AJ", "codigo_postal" : "48448", "telefono2" : "1-671-397-1686", "denominacion_comercial" : "Macromedia", "descuento" : "3", "limite_credito" : "9489", "auth_token" : "<GET_VAR:AUTH_TOKEN>"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo cliente\n	#Method POST api/cliente/nuevo\n	#Input { "razon_social" : "Reagan U. Finch", "clasificacion_cliente" : "<GET_VAR:CLASIF_CLIENTE>", "codigo_cliente" : "80", "password" : "VBX49OTL4TG", "calle" : "Ap #590-2784 Magna. St.", "numero_exterior" : "568", "telefono1" : "782-4633", "id_ciudad" : "29", "rfc" : "AUR50GGU0HZ", "codigo_postal" : "79015", "telefono2" : "1-901-908-8335", "denominacion_comercial" : "Macromedia", "descuento" : "9", "limite_credito" : "9683", "auth_token" : "<GET_VAR:AUTH_TOKEN>"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo cliente\n	#Method POST api/cliente/nuevo\n	#Input { "razon_social" : "Lev N. Saunders", "clasificacion_cliente" : "<GET_VAR:CLASIF_CLIENTE>", "codigo_cliente" : "81", "password" : "IRJ69XGS5DK", "calle" : "207-2969 Sed, Ave", "numero_exterior" : "610", "telefono1" : "67*984*5", "id_ciudad" : "25", "rfc" : "ORI69YRN2ON", "codigo_postal" : "65165", "telefono2" : "1-400-732-3393", "denominacion_comercial" : "Altavista", "descuento" : "4", "limite_credito" : "6838", "auth_token" : "<GET_VAR:AUTH_TOKEN>"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo cliente\n	#Method POST api/cliente/nuevo\n	#Input { "razon_social" : "Benedict R. Keller", "clasificacion_cliente" : "<GET_VAR:CLASIF_CLIENTE>", "codigo_cliente" : "82", "password" : "JSB76KWP3SN", "calle" : "P.O. Box 797, 692 A Avenue", "numero_exterior" : "55", "telefono1" : "36*422*7", "id_ciudad" : "24", "rfc" : "VWU59WTK6IF", "codigo_postal" : "85939", "telefono2" : "1-875-158-1887", "denominacion_comercial" : "Borland", "descuento" : "0", "limite_credito" : "5666", "auth_token" : "<GET_VAR:AUTH_TOKEN>"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo cliente\n	#Method POST api/cliente/nuevo\n	#Input { "razon_social" : "Laith U. Cooley", "clasificacion_cliente" : "<GET_VAR:CLASIF_CLIENTE>", "codigo_cliente" : "83", "password" : "VBZ68TOT8DB", "calle" : "P.O. Box 409, 5578 Ut Avenue", "numero_exterior" : "930", "telefono1" : "936-7277", "id_ciudad" : "13", "rfc" : "OMM90KIA7TH", "codigo_postal" : "49567", "telefono2" : "1-454-504-9621", "denominacion_comercial" : "Apple Systems", "descuento" : "6", "limite_credito" : "12747", "auth_token" : "<GET_VAR:AUTH_TOKEN>"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo cliente\n	#Method POST api/cliente/nuevo\n	#Input { "razon_social" : "Dillon J. Gibson", "clasificacion_cliente" : "<GET_VAR:CLASIF_CLIENTE>", "codigo_cliente" : "84", "password" : "DVH70LEE4DU", "calle" : "9272 Quisque Rd.", "numero_exterior" : "241", "telefono1" : "14*645*8", "id_ciudad" : "22", "rfc" : "PWF47LXF9VE", "codigo_postal" : "54588", "telefono2" : "1-167-691-9496", "denominacion_comercial" : "Finale", "descuento" : "8", "limite_credito" : "7785", "auth_token" : "<GET_VAR:AUTH_TOKEN>"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo cliente\n	#Method POST api/cliente/nuevo\n	#Input { "razon_social" : "Quamar W. Sweeney", "clasificacion_cliente" : "<GET_VAR:CLASIF_CLIENTE>", "codigo_cliente" : "85", "password" : "IBV79MVL1HO", "calle" : "530-821 Maecenas Street", "numero_exterior" : "23", "telefono1" : "1-500-248-1752", "id_ciudad" : "5", "rfc" : "TLQ25RRO6WY", "codigo_postal" : "93713", "telefono2" : "1-596-227-0462", "denominacion_comercial" : "Adobe", "descuento" : "2", "limite_credito" : "18314", "auth_token" : "<GET_VAR:AUTH_TOKEN>"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo cliente\n	#Method POST api/cliente/nuevo\n	#Input { "razon_social" : "Ryder G. Hogan", "clasificacion_cliente" : "<GET_VAR:CLASIF_CLIENTE>", "codigo_cliente" : "86", "password" : "QDH07PTC8OP", "calle" : "Ap #343-6293 At St.", "numero_exterior" : "167", "telefono1" : "1-980-375-0397", "id_ciudad" : "24", "rfc" : "OII89MVV5BQ", "codigo_postal" : "85371", "telefono2" : "1-100-985-2121", "denominacion_comercial" : "Apple Systems", "descuento" : "5", "limite_credito" : "7244", "auth_token" : "<GET_VAR:AUTH_TOKEN>"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo cliente\n	#Method POST api/cliente/nuevo\n	#Input { "razon_social" : "Uma X. Zamora", "clasificacion_cliente" : "<GET_VAR:CLASIF_CLIENTE>", "codigo_cliente" : "87", "password" : "WNF97KLD5AD", "calle" : "Ap #785-3645 Natoque Av.", "numero_exterior" : "816", "telefono1" : "25*966*5", "id_ciudad" : "24", "rfc" : "AMM78HDB0AR", "codigo_postal" : "38899", "telefono2" : "1-621-155-4786", "denominacion_comercial" : "Sibelius", "descuento" : "5", "limite_credito" : "4430", "auth_token" : "<GET_VAR:AUTH_TOKEN>"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo cliente\n	#Method POST api/cliente/nuevo\n	#Input { "razon_social" : "August Z. Guerra", "clasificacion_cliente" : "<GET_VAR:CLASIF_CLIENTE>", "codigo_cliente" : "88", "password" : "OXK38CVF9WO", "calle" : "662-495 Bibendum. Rd.", "numero_exterior" : "241", "telefono1" : "36*818*8", "id_ciudad" : "13", "rfc" : "GOU85AEO9YU", "codigo_postal" : "52729", "telefono2" : "1-622-986-4704", "denominacion_comercial" : "Finale", "descuento" : "0", "limite_credito" : "6279", "auth_token" : "<GET_VAR:AUTH_TOKEN>"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo cliente\n	#Method POST api/cliente/nuevo\n	#Input { "razon_social" : "Brady U. Michael", "clasificacion_cliente" : "<GET_VAR:CLASIF_CLIENTE>", "codigo_cliente" : "89", "password" : "WHF63RGE4MX", "calle" : "271-1132 Aenean Rd.", "numero_exterior" : "249", "telefono1" : "28*330*8", "id_ciudad" : "28", "rfc" : "ELJ35QZY5PQ", "codigo_postal" : "52737", "telefono2" : "1-385-832-4579", "denominacion_comercial" : "Sibelius", "descuento" : "3", "limite_credito" : "17302", "auth_token" : "<GET_VAR:AUTH_TOKEN>"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo cliente\n	#Method POST api/cliente/nuevo\n	#Input { "razon_social" : "Grace Q. Jefferson", "clasificacion_cliente" : "<GET_VAR:CLASIF_CLIENTE>", "codigo_cliente" : "90", "password" : "AUD55CRB2PZ", "calle" : "Ap #994-3723 Donec Rd.", "numero_exterior" : "632", "telefono1" : "656-2544", "id_ciudad" : "1", "rfc" : "LXT42JEW2FI", "codigo_postal" : "24887", "telefono2" : "1-442-368-8313", "denominacion_comercial" : "Apple Systems", "descuento" : "9", "limite_credito" : "17973", "auth_token" : "<GET_VAR:AUTH_TOKEN>"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo cliente\n	#Method POST api/cliente/nuevo\n	#Input { "razon_social" : "Emi W. Dixon", "clasificacion_cliente" : "<GET_VAR:CLASIF_CLIENTE>", "codigo_cliente" : "91", "password" : "GCS52CHU6AW", "calle" : "Ap #658-5286 Gravida. Ave", "numero_exterior" : "989", "telefono1" : "620-5412", "id_ciudad" : "2", "rfc" : "VCT46TQR4RP", "codigo_postal" : "71005", "telefono2" : "1-947-623-8283", "denominacion_comercial" : "Google", "descuento" : "9", "limite_credito" : "8796", "auth_token" : "<GET_VAR:AUTH_TOKEN>"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo cliente\n	#Method POST api/cliente/nuevo\n	#Input { "razon_social" : "Macaulay N. Sherman", "clasificacion_cliente" : "<GET_VAR:CLASIF_CLIENTE>", "codigo_cliente" : "92", "password" : "NFK71TCF1VP", "calle" : "481 Ante Ave", "numero_exterior" : "640", "telefono1" : "757-5027", "id_ciudad" : "27", "rfc" : "RHP53GLO5XR", "codigo_postal" : "58818", "telefono2" : "1-442-999-5655", "denominacion_comercial" : "Adobe", "descuento" : "1", "limite_credito" : "12982", "auth_token" : "<GET_VAR:AUTH_TOKEN>"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo cliente\n	#Method POST api/cliente/nuevo\n	#Input { "razon_social" : "Philip O. Meyer", "clasificacion_cliente" : "<GET_VAR:CLASIF_CLIENTE>", "codigo_cliente" : "93", "password" : "GPC81QTM6OR", "calle" : "3594 Pellentesque Rd.", "numero_exterior" : "244", "telefono1" : "1-916-522-4952", "id_ciudad" : "2", "rfc" : "XVN81TWJ4IR", "codigo_postal" : "62835", "telefono2" : "1-776-200-3699", "denominacion_comercial" : "Sibelius", "descuento" : "1", "limite_credito" : "632", "auth_token" : "<GET_VAR:AUTH_TOKEN>"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo cliente\n	#Method POST api/cliente/nuevo\n	#Input { "razon_social" : "Kelly I. Sharp", "clasificacion_cliente" : "<GET_VAR:CLASIF_CLIENTE>", "codigo_cliente" : "94", "password" : "GVQ88QIK3NS", "calle" : "P.O. Box 598, 9548 Sed St.", "numero_exterior" : "647", "telefono1" : "19*433*7", "id_ciudad" : "1", "rfc" : "EBG70XGF8YM", "codigo_postal" : "54511", "telefono2" : "1-911-659-4716", "denominacion_comercial" : "Macromedia", "descuento" : "9", "limite_credito" : "4804", "auth_token" : "<GET_VAR:AUTH_TOKEN>"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo cliente\n	#Method POST api/cliente/nuevo\n	#Input { "razon_social" : "Audra S. Price", "clasificacion_cliente" : "<GET_VAR:CLASIF_CLIENTE>", "codigo_cliente" : "95", "password" : "ATE78VQW4KG", "calle" : "314-5231 Mauris Road", "numero_exterior" : "779", "telefono1" : "89*958*4", "id_ciudad" : "3", "rfc" : "WIN18HFS1EU", "codigo_postal" : "00350", "telefono2" : "1-429-982-0120", "denominacion_comercial" : "Adobe", "descuento" : "6", "limite_credito" : "97", "auth_token" : "<GET_VAR:AUTH_TOKEN>"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo cliente\n	#Method POST api/cliente/nuevo\n	#Input { "razon_social" : "Audrey P. Bass", "clasificacion_cliente" : "<GET_VAR:CLASIF_CLIENTE>", "codigo_cliente" : "96", "password" : "IIQ45SUZ6AK", "calle" : "566-3022 Mauris St.", "numero_exterior" : "8", "telefono1" : "1-298-709-0120", "id_ciudad" : "12", "rfc" : "PKQ17RIS5CS", "codigo_postal" : "21206", "telefono2" : "1-509-717-4204", "denominacion_comercial" : "Lycos", "descuento" : "6", "limite_credito" : "8547", "auth_token" : "<GET_VAR:AUTH_TOKEN>"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo cliente\n	#Method POST api/cliente/nuevo\n	#Input { "razon_social" : "Bell E. Whitfield", "clasificacion_cliente" : "<GET_VAR:CLASIF_CLIENTE>", "codigo_cliente" : "97", "password" : "QRO97ZRX8JT", "calle" : "P.O. Box 622, 2234 Ultrices St.", "numero_exterior" : "939", "telefono1" : "79*538*4", "id_ciudad" : "18", "rfc" : "NVQ00OPB4SL", "codigo_postal" : "39304", "telefono2" : "1-718-476-4162", "denominacion_comercial" : "Finale", "descuento" : "10", "limite_credito" : "17014", "auth_token" : "<GET_VAR:AUTH_TOKEN>"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo cliente\n	#Method POST api/cliente/nuevo\n	#Input { "razon_social" : "Lawrence L. Eaton", "clasificacion_cliente" : "<GET_VAR:CLASIF_CLIENTE>", "codigo_cliente" : "98", "password" : "ZXX15DNU0UN", "calle" : "Ap #485-5303 Varius. Av.", "numero_exterior" : "404", "telefono1" : "1-381-365-2066", "id_ciudad" : "22", "rfc" : "AFL47VUN0AF", "codigo_postal" : "93040", "telefono2" : "1-622-392-1970", "denominacion_comercial" : "Chami", "descuento" : "9", "limite_credito" : "8517", "auth_token" : "<GET_VAR:AUTH_TOKEN>"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo cliente\n	#Method POST api/cliente/nuevo\n	#Input { "razon_social" : "Ahmed I. Shelton", "clasificacion_cliente" : "<GET_VAR:CLASIF_CLIENTE>", "codigo_cliente" : "99", "password" : "ZDM99OSD6XX", "calle" : "372-4950 Mi Road", "numero_exterior" : "782", "telefono1" : "113-3048", "id_ciudad" : "12", "rfc" : "IZS64NDN1NA", "codigo_postal" : "44760", "telefono2" : "1-639-780-7138", "denominacion_comercial" : "Finale", "descuento" : "7", "limite_credito" : "530", "auth_token" : "<GET_VAR:AUTH_TOKEN>"}\n	#Output { "status" : "ok" }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo cliente\n	#Method POST api/cliente/nuevo\n	#Input { "razon_social" : "Amy M. Copeland", "clasificacion_cliente" : "<GET_VAR:CLASIF_CLIENTE>", "codigo_cliente" : "100", "password" : "HFH45EAS0YF", "calle" : "Ap #881-1826 Magnis Road", "numero_exterior" : "564", "telefono1" : "91*697*7", "id_ciudad" : "29", "rfc" : "JHR24FHD2ZW", "codigo_postal" : "12127", "telefono2" : "1-988-695-8273", "denominacion_comercial" : "Sibelius", "descuento" : "9", "limite_credito" : "7721", "auth_token" : "<GET_VAR:AUTH_TOKEN>"}\n	#Output { "status" : "ok" }\n#endTest\n\n', 'Pruebas basicas', 'Pruebas que deben pasarse para poder hacer commit. ', 0);
INSERT INTO `httptesting_paquete_de_pruebas` (`id_paquete_de_pruebas`, `id_proyecto`, `pruebas`, `nombre`, `descripcion`, `locked`) VALUES
(2, 1, '#beginTest\n	#Desc Iniciar sesion con credenciales correctas\n	#Method POST api/sesion/iniciar\n	#Input { "usuario" : "1", "password" : "123"  }\n	#Output {"status":"ok", "auth_token" : "<SET_VAR:AUTH_TOKEN>"}\n#endTest\n\n\n#beginTest\n	#Desc Nuevo producto de importacion de AdminPAQ\n	#Method POST api/producto/nuevo\n	#Input { "codigo_producto" : "PROAMD070", "metodo_costeo" : "precio", "nombre_producto" : "PROCESADOR+AMD+PHENOM+X3+TRIPLE+CORE8450+2.1GHZ", "compra_en_mostrador" : "1", "costo_estandar" : "0.00000", "activo" : "1", "control_de_existencia" : "0", "clasificaciones" : "[\\"4\\"]", "descripcion_producto" : "36+meses+de+garantia", "peso_producto" : "0.00000", "precio" : "0.00000", "codigo_barras" : "PROAMD070", "auth_token" : "<GET_VAR:AUTH_TOKEN>" }\n	#Output { "status" : "ok" }\n#endTest\n\n#beginTest\n	#Desc Nuevo producto de importacion de AdminPAQ\n	#Method POST api/producto/nuevo\n	#Input { "codigo_producto" : "PROAMD080", "metodo_costeo" : "precio", "nombre_producto" : "PROCESADOR+AMD+PHENOM+8650+TRIPLE-+CORE+2.3+GHZ+AM2", "compra_en_mostrador" : "1", "costo_estandar" : "0.00000", "activo" : "1", "control_de_existencia" : "0", "clasificaciones" : "[\\"4\\"]", "peso_producto" : "0.00000", "precio" : "0.00000", "codigo_barras" : "PROAMD080", "auth_token" : "<GET_VAR:AUTH_TOKEN>" }\n	#Output { "status" : "ok" }\n#endTest\n\n#beginTest\n	#Desc Nuevo producto de importacion de AdminPAQ\n	#Method POST api/producto/nuevo\n	#Input { "codigo_producto" : "PROAMD090", "metodo_costeo" : "precio", "nombre_producto" : "PROCESADOR+AMD+PHENOM+9950+X4+2.6+++SKT-AM2", "compra_en_mostrador" : "1", "costo_estandar" : "0.00000", "activo" : "1", "control_de_existencia" : "0", "clasificaciones" : "[\\"4\\"]", "peso_producto" : "0.00000", "precio" : "0.00000", "codigo_barras" : "PROAMD090", "auth_token" : "<GET_VAR:AUTH_TOKEN>" }\n	#Output { "status" : "ok" }\n#endTest\n\n#beginTest\n	#Desc Nuevo producto de importacion de AdminPAQ\n	#Method POST api/producto/nuevo\n	#Input { "codigo_producto" : "PROAMD100", "metodo_costeo" : "precio", "nombre_producto" : "PROCESADOR+AMD+PHENOM+llX2+550+3.1GHZ+SCK+AM3", "compra_en_mostrador" : "1", "costo_estandar" : "0.00000", "activo" : "1", "control_de_existencia" : "0", "clasificaciones" : "[\\"4\\"]", "peso_producto" : "0.00000", "precio" : "1305.20000", "codigo_barras" : "PROAMD100", "auth_token" : "<GET_VAR:AUTH_TOKEN>" }\n	#Output { "status" : "ok" }\n#endTest\n\n#beginTest\n	#Desc Nuevo producto de importacion de AdminPAQ\n	#Method POST api/producto/nuevo\n	#Input { "codigo_producto" : "PROAMD110", "metodo_costeo" : "precio", "nombre_producto" : "PROCESADOR+AMD+PHENOM+9650+2.3GHZ+140MBK+1066MHZ+AM2", "compra_en_mostrador" : "1", "costo_estandar" : "0.00000", "activo" : "1", "control_de_existencia" : "0", "clasificaciones" : "[\\"4\\"]", "peso_producto" : "0.00000", "precio" : "0.00000", "codigo_barras" : "PROAMD110", "auth_token" : "<GET_VAR:AUTH_TOKEN>" }\n	#Output { "status" : "ok" }\n#endTest\n\n#beginTest\n	#Desc Nuevo producto de importacion de AdminPAQ\n	#Method POST api/producto/nuevo\n	#Input { "codigo_producto" : "PROAMD120", "metodo_costeo" : "precio", "nombre_producto" : "PROCESADOR+AMD+PHENOM+X2+545+3.0GHZ+SKTAM3", "compra_en_mostrador" : "1", "costo_estandar" : "0.00000", "activo" : "1", "control_de_existencia" : "0", "clasificaciones" : "[\\"4\\"]", "peso_producto" : "0.00000", "precio" : "1412.17000", "codigo_barras" : "PROAMD120", "auth_token" : "<GET_VAR:AUTH_TOKEN>" }\n	#Output { "status" : "ok" }\n#endTest\n\n#beginTest\n	#Desc Nuevo producto de importacion de AdminPAQ\n	#Method POST api/producto/nuevo\n	#Input { "codigo_producto" : "PROAMD130", "metodo_costeo" : "precio", "nombre_producto" : "PROCESADOR+AMD+ATHLON+X2+245+2.9+GHZ+AM3", "compra_en_mostrador" : "1", "costo_estandar" : "0.00000", "activo" : "1", "control_de_existencia" : "0", "clasificaciones" : "[\\"4\\"]", "peso_producto" : "0.00000", "precio" : "965.18000", "codigo_barras" : "PROAMD130", "auth_token" : "<GET_VAR:AUTH_TOKEN>" }\n	#Output { "status" : "ok" }\n#endTest\n\n#beginTest\n	#Desc Nuevo producto de importacion de AdminPAQ\n	#Method POST api/producto/nuevo\n	#Input { "codigo_producto" : "PROAMD140", "metodo_costeo" : "precio", "nombre_producto" : "PROCESADOR+AMD+SEMPRON+LE-1300+2.3+GHZ+64BITS+SKT+AM2+AGRANE", "compra_en_mostrador" : "1", "costo_estandar" : "0.00000", "activo" : "1", "control_de_existencia" : "0", "clasificaciones" : "[\\"4\\"]", "peso_producto" : "0.00000", "precio" : "481.91000", "codigo_barras" : "PROAMD140", "auth_token" : "<GET_VAR:AUTH_TOKEN>" }\n	#Output { "status" : "ok" }\n#endTest\n\n#beginTest\n	#Desc Nuevo producto de importacion de AdminPAQ\n	#Method POST api/producto/nuevo\n	#Input { "codigo_producto" : "PROAMD150", "metodo_costeo" : "precio", "nombre_producto" : "PROCESADOR+AMD+ATHLON+425+2.7+X3+AM3", "compra_en_mostrador" : "1", "costo_estandar" : "0.00000", "activo" : "1", "control_de_existencia" : "0", "clasificaciones" : "[\\"4\\"]", "peso_producto" : "0.00000", "precio" : "1290.48000", "codigo_barras" : "PROAMD150", "auth_token" : "<GET_VAR:AUTH_TOKEN>" }\n	#Output { "status" : "ok" }\n#endTest\n\n#beginTest\n	#Desc Nuevo producto de importacion de AdminPAQ\n	#Method POST api/producto/nuevo\n	#Input { "codigo_producto" : "PROAMD160", "metodo_costeo" : "precio", "nombre_producto" : "PROCESADOR+AMD+PHENON+X2+550+3.1GHZ+7.0MB+CACHE", "compra_en_mostrador" : "1", "costo_estandar" : "0.00000", "activo" : "1", "control_de_existencia" : "0", "clasificaciones" : "[\\"4\\"]", "peso_producto" : "0.00000", "precio" : "1369.61000", "codigo_barras" : "PROAMD160", "auth_token" : "<GET_VAR:AUTH_TOKEN>" }\n	#Output { "status" : "ok" }\n#endTest\n\n#beginTest\n	#Desc Nuevo producto de importacion de AdminPAQ\n	#Method POST api/producto/nuevo\n	#Input { "codigo_producto" : "PROAMD220", "metodo_costeo" : "precio", "nombre_producto" : "PROCESADOR+AMD+ATHLON+X2+250+3.0+GHZ+2MB+DUAL+CORE", "compra_en_mostrador" : "1", "costo_estandar" : "0.00000", "activo" : "1", "control_de_existencia" : "0", "clasificaciones" : "[\\"4\\"]", "peso_producto" : "0.00000", "precio" : "941.23000", "codigo_barras" : "PROAMD220", "auth_token" : "<GET_VAR:AUTH_TOKEN>" }\n	#Output { "status" : "ok" }\n#endTest\n\n#beginTest\n	#Desc Nuevo producto de importacion de AdminPAQ\n	#Method POST api/producto/nuevo\n	#Input { "codigo_producto" : "PROBEN010", "metodo_costeo" : "precio", "nombre_producto" : "PROYECTOR+BEN-Q+MP515+2500+SVGA+600*800", "compra_en_mostrador" : "1", "costo_estandar" : "0.00000", "activo" : "1", "control_de_existencia" : "0", "clasificaciones" : "[\\"8\\"]", "peso_producto" : "0.00000", "precio" : "5647.07000", "codigo_barras" : "PROBEN010", "auth_token" : "<GET_VAR:AUTH_TOKEN>" }\n	#Output { "status" : "ok" }\n#endTest\n\n#beginTest\n	#Desc Nuevo producto de importacion de AdminPAQ\n	#Method POST api/producto/nuevo\n	#Input { "codigo_producto" : "PROCEL010", "metodo_costeo" : "precio", "nombre_producto" : "PROCESADOR+CELERON+430+1.8GHZ+800MHZ+512K", "compra_en_mostrador" : "1", "costo_estandar" : "0.00000", "activo" : "1", "control_de_existencia" : "0", "clasificaciones" : "[\\"4\\"]", "peso_producto" : "0.00000", "precio" : "616.95000", "codigo_barras" : "PROCEL010", "auth_token" : "<GET_VAR:AUTH_TOKEN>" }\n	#Output { "status" : "ok" }\n#endTest\n\n#beginTest\n	#Desc Nuevo producto de importacion de AdminPAQ\n	#Method POST api/producto/nuevo\n	#Input { "codigo_producto" : "PROCEL020", "metodo_costeo" : "precio", "nombre_producto" : "PROCESADOR+CELERON+DUAL+CORE+2.2GHZ++E1500+800MHZ", "compra_en_mostrador" : "1", "costo_estandar" : "0.00000", "activo" : "1", "control_de_existencia" : "0", "clasificaciones" : "[\\"4\\"]", "peso_producto" : "0.00000", "precio" : "0.00000", "codigo_barras" : "PROCEL020", "auth_token" : "<GET_VAR:AUTH_TOKEN>" }\n	#Output { "status" : "ok" }\n#endTest\n\n#beginTest\n	#Desc Nuevo producto de importacion de AdminPAQ\n	#Method POST api/producto/nuevo\n	#Input { "codigo_producto" : "PROCEL030", "metodo_costeo" : "precio", "nombre_producto" : "PROCESADOR+INTEL+CELERON+1.8+SKT775", "compra_en_mostrador" : "1", "costo_estandar" : "0.00000", "activo" : "1", "control_de_existencia" : "0", "clasificaciones" : "[\\"4\\"]", "peso_producto" : "0.00000", "precio" : "575.97000", "codigo_barras" : "PROCEL030", "auth_token" : "<GET_VAR:AUTH_TOKEN>" }\n	#Output { "status" : "ok" }\n#endTest\n\n#beginTest\n	#Desc Nuevo producto de importacion de AdminPAQ\n	#Method POST api/producto/nuevo\n	#Input { "codigo_producto" : "PROCEL040", "metodo_costeo" : "precio", "nombre_producto" : "PROCESADOR+CELERON+2.5+GHZ+LGA775", "compra_en_mostrador" : "1", "costo_estandar" : "0.00000", "activo" : "1", "control_de_existencia" : "0", "clasificaciones" : "[\\"4\\"]", "peso_producto" : "0.00000", "precio" : "771.50000", "codigo_barras" : "PROCEL040", "auth_token" : "<GET_VAR:AUTH_TOKEN>" }\n	#Output { "status" : "ok" }\n#endTest\n\n#beginTest\n	#Desc Nuevo producto de importacion de AdminPAQ\n	#Method POST api/producto/nuevo\n	#Input { "codigo_producto" : "PROCEL060", "metodo_costeo" : "precio", "nombre_producto" : "PROCESADOR+CELERON+DUAL+CORE+E3200+2.4GHZ+800MHZ+1MB+SKT775", "compra_en_mostrador" : "1", "costo_estandar" : "0.00000", "activo" : "1", "control_de_existencia" : "0", "clasificaciones" : "[\\"4\\"]", "peso_producto" : "0.00000", "precio" : "887.02000", "codigo_barras" : "PROCEL060", "auth_token" : "<GET_VAR:AUTH_TOKEN>" }\n	#Output { "status" : "ok" }\n#endTest\n\n#beginTest\n	#Desc Nuevo producto de importacion de AdminPAQ\n	#Method POST api/producto/nuevo\n	#Input { "codigo_producto" : "PROCEL070", "metodo_costeo" : "precio", "nombre_producto" : "PROCESADOR+CELERON+DUAL+CORE+E3300+2.5GHZ+800MHZ", "compra_en_mostrador" : "1", "costo_estandar" : "0.00000", "activo" : "1", "control_de_existencia" : "0", "clasificaciones" : "[\\"4\\"]", "peso_producto" : "0.00000", "precio" : "699.54000", "codigo_barras" : "PROCEL070", "auth_token" : "<GET_VAR:AUTH_TOKEN>" }\n	#Output { "status" : "ok" }\n#endTest\n\n#beginTest\n	#Desc Nuevo producto de importacion de AdminPAQ\n	#Method POST api/producto/nuevo\n	#Input { "codigo_producto" : "PROCEL080", "metodo_costeo" : "precio", "nombre_producto" : "PROCESADOR+INTEL+CELERON+DUAL+CORE+E3400+2.6GHZ+800MHZ", "compra_en_mostrador" : "1", "costo_estandar" : "0.00000", "activo" : "1", "control_de_existencia" : "0", "clasificaciones" : "[\\"4\\"]", "peso_producto" : "0.00000", "precio" : "687.77000", "codigo_barras" : "PROCEL080", "auth_token" : "<GET_VAR:AUTH_TOKEN>" }\n	#Output { "status" : "ok" }\n#endTest\n\n#beginTest\n	#Desc Nuevo producto de importacion de AdminPAQ\n	#Method POST api/producto/nuevo\n	#Input { "codigo_producto" : "PROINT010", "metodo_costeo" : "precio", "nombre_producto" : "PROCESADOR+INTEL+DUAL+CORE+2.0+GHZ", "compra_en_mostrador" : "1", "costo_estandar" : "0.00000", "activo" : "1", "control_de_existencia" : "0", "clasificaciones" : "[\\"4\\"]", "peso_producto" : "0.00000", "precio" : "853.22000", "codigo_barras" : "PROINT010", "auth_token" : "<GET_VAR:AUTH_TOKEN>" }\n	#Output { "status" : "ok" }\n#endTest\n\n#beginTest\n	#Desc Nuevo producto de importacion de AdminPAQ\n	#Method POST api/producto/nuevo\n	#Input { "codigo_producto" : "PROINT020", "metodo_costeo" : "precio", "nombre_producto" : "PROCESADOR+INTEL+DUAL+CORE+E2220+2.2", "compra_en_mostrador" : "1", "costo_estandar" : "0.00000", "activo" : "1", "control_de_existencia" : "0", "clasificaciones" : "[\\"4\\"]", "peso_producto" : "0.00000", "precio" : "1029.67000", "codigo_barras" : "PROINT020", "auth_token" : "<GET_VAR:AUTH_TOKEN>" }\n	#Output { "status" : "ok" }\n#endTest\n\n#beginTest\n	#Desc Nuevo producto de importacion de AdminPAQ\n	#Method POST api/producto/nuevo\n	#Input { "codigo_producto" : "PROINT030", "metodo_costeo" : "precio", "nombre_producto" : "PROCESADOR+INTEL+DUAL+CORE+E5400+2.7GHZ", "compra_en_mostrador" : "1", "costo_estandar" : "0.00000", "activo" : "1", "control_de_existencia" : "0", "clasificaciones" : "[\\"4\\"]", "peso_producto" : "0.00000", "precio" : "1056.59000", "codigo_barras" : "PROINT030", "auth_token" : "<GET_VAR:AUTH_TOKEN>" }\n	#Output { "status" : "ok" }\n#endTest\n\n#beginTest\n	#Desc Nuevo producto de importacion de AdminPAQ\n	#Method POST api/producto/nuevo\n	#Input { "codigo_producto" : "PROINT040", "metodo_costeo" : "precio", "nombre_producto" : "PROCESADOR+INTEL+DUAL+CORE+E6500+2.93GHZ", "compra_en_mostrador" : "1", "costo_estandar" : "0.00000", "activo" : "1", "control_de_existencia" : "0", "clasificaciones" : "[\\"4\\"]", "peso_producto" : "0.00000", "precio" : "1169.01000", "codigo_barras" : "PROINT040", "auth_token" : "<GET_VAR:AUTH_TOKEN>" }\n	#Output { "status" : "ok" }\n#endTest\n\n#beginTest\n	#Desc Nuevo producto de importacion de AdminPAQ\n	#Method POST api/producto/nuevo\n	#Input { "codigo_producto" : "PROINT050", "metodo_costeo" : "costo", "nombre_producto" : "PROCESADOR+INTEL++CORE+2+QUAD+6600+2.4+8M+106", "compra_en_mostrador" : "1", "costo_estandar" : "2091.48000", "activo" : "1", "control_de_existencia" : "0", "clasificaciones" : "[\\"4\\"]", "peso_producto" : "0.00000", "precio" : "0.00000", "codigo_barras" : "PROINT050", "auth_token" : "<GET_VAR:AUTH_TOKEN>" }\n	#Output { "status" : "ok" }\n#endTest\n\n#beginTest\n	#Desc Nuevo producto de importacion de AdminPAQ\n	#Method POST api/producto/nuevo\n	#Input { "codigo_producto" : "PROINT060", "metodo_costeo" : "precio", "nombre_producto" : "PROCESADOR+INTEL+DUAL+CORE+E5200++2.5GHZ+800MHZ", "compra_en_mostrador" : "1", "costo_estandar" : "0.00000", "activo" : "1", "control_de_existencia" : "0", "clasificaciones" : "[\\"4\\"]", "peso_producto" : "0.00000", "precio" : "1134.79000", "codigo_barras" : "PROINT060", "auth_token" : "<GET_VAR:AUTH_TOKEN>" }\n	#Output { "status" : "ok" }\n#endTest\n\n#beginTest\n	#Desc Nuevo producto de importacion de AdminPAQ\n	#Method POST api/producto/nuevo\n	#Input { "codigo_producto" : "PROINT070", "metodo_costeo" : "precio", "nombre_producto" : "PROCESADOR+INTEL+DUAL+CORE+2.4+GHZ++SKT775", "compra_en_mostrador" : "1", "costo_estandar" : "0.00000", "activo" : "1", "control_de_existencia" : "0", "clasificaciones" : "[\\"4\\"]", "peso_producto" : "0.00000", "precio" : "0.00000", "codigo_barras" : "PROINT070", "auth_token" : "<GET_VAR:AUTH_TOKEN>" }\n	#Output { "status" : "ok" }\n#endTest\n\n#beginTest\n	#Desc Nuevo producto de importacion de AdminPAQ\n	#Method POST api/producto/nuevo\n	#Input { "codigo_producto" : "PROINT080", "metodo_costeo" : "precio", "nombre_producto" : "PROCESADOR+INTEL+DUAL+CORE+E5300+2.6GHZ++SOC775", "compra_en_mostrador" : "1", "costo_estandar" : "0.00000", "activo" : "1", "control_de_existencia" : "0", "clasificaciones" : "[\\"4\\"]", "peso_producto" : "0.00000", "precio" : "1028.14000", "codigo_barras" : "PROINT080", "auth_token" : "<GET_VAR:AUTH_TOKEN>" }\n	#Output { "status" : "ok" }\n#endTest\n\n#beginTest\n	#Desc Nuevo producto de importacion de AdminPAQ\n	#Method POST api/producto/nuevo\n	#Input { "codigo_producto" : "PROINT090", "metodo_costeo" : "precio", "nombre_producto" : "PROCESADOR+INTEL+CORE+2+DUO+E7400+2.8+GHZ+1066+MHZ++SKT775", "compra_en_mostrador" : "1", "costo_estandar" : "0.00000", "activo" : "1", "control_de_existencia" : "0", "clasificaciones" : "[\\"4\\"]", "peso_producto" : "0.00000", "precio" : "0.00000", "codigo_barras" : "PROINT090", "auth_token" : "<GET_VAR:AUTH_TOKEN>" }\n	#Output { "status" : "ok" }\n#endTest\n\n#beginTest\n	#Desc Nuevo producto de importacion de AdminPAQ\n	#Method POST api/producto/nuevo\n	#Input { "codigo_producto" : "PROINT100", "metodo_costeo" : "precio", "nombre_producto" : "PROCESADOR+INTEL+CORE+2+QUAD+Q8200+2.33GHZ+1333MHZ", "compra_en_mostrador" : "1", "costo_estandar" : "0.00000", "activo" : "1", "control_de_existencia" : "0", "clasificaciones" : "[\\"4\\"]", "peso_producto" : "0.00000", "precio" : "0.00000", "codigo_barras" : "PROINT100", "auth_token" : "<GET_VAR:AUTH_TOKEN>" }\n	#Output { "status" : "ok" }\n#endTest\n\n#beginTest\n	#Desc Nuevo producto de importacion de AdminPAQ\n	#Method POST api/producto/nuevo\n	#Input { "codigo_producto" : "PROINT110", "metodo_costeo" : "precio", "nombre_producto" : "PROCESADOR+INTEL+CORE+2+DUO+E7300+2.66GHZ+1066MHZ+SKT775", "compra_en_mostrador" : "1", "costo_estandar" : "0.00000", "activo" : "1", "control_de_existencia" : "0", "clasificaciones" : "[\\"4\\"]", "peso_producto" : "0.00000", "precio" : "0.00000", "codigo_barras" : "PROINT110", "auth_token" : "<GET_VAR:AUTH_TOKEN>" }\n	#Output { "status" : "ok" }\n#endTest\n\n#beginTest\n	#Desc Nuevo producto de importacion de AdminPAQ\n	#Method POST api/producto/nuevo\n	#Input { "codigo_producto" : "PROINT120", "metodo_costeo" : "precio", "nombre_producto" : "PROCESADOR+INTEL+CORE+2+DUO+E7500+2.9GHZ+3M+LGA775", "compra_en_mostrador" : "1", "costo_estandar" : "0.00000", "activo" : "1", "control_de_existencia" : "0", "clasificaciones" : "[\\"4\\"]", "peso_producto" : "0.00000", "precio" : "1812.10000", "codigo_barras" : "PROINT120", "auth_token" : "<GET_VAR:AUTH_TOKEN>" }\n	#Output { "status" : "ok" }\n#endTest\n\n#beginTest\n	#Desc Nuevo producto de importacion de AdminPAQ\n	#Method POST api/producto/nuevo\n	#Input { "codigo_producto" : "PROINT130", "metodo_costeo" : "precio", "nombre_producto" : "PROCESADOR+INTEL+I7+920+DDR3-800%2F1066+8LGA1366A", "compra_en_mostrador" : "1", "costo_estandar" : "0.00000", "activo" : "1", "control_de_existencia" : "0", "clasificaciones" : "[\\"4\\"]", "peso_producto" : "0.00000", "precio" : "0.00000", "codigo_barras" : "PROINT130", "auth_token" : "<GET_VAR:AUTH_TOKEN>" }\n	#Output { "status" : "ok" }\n#endTest\n\n#beginTest\n	#Desc Nuevo producto de importacion de AdminPAQ\n	#Method POST api/producto/nuevo\n	#Input { "codigo_producto" : "PROINT140", "metodo_costeo" : "precio", "nombre_producto" : "PROCESADOR+INTEL+CORE+2+QUAD+Q8400+2.66HZ+1333MHZ+4MB+SOK775", "compra_en_mostrador" : "1", "costo_estandar" : "0.00000", "activo" : "1", "control_de_existencia" : "0", "clasificaciones" : "[\\"4\\"]", "peso_producto" : "0.00000", "precio" : "2527.01000", "codigo_barras" : "PROINT140", "auth_token" : "<GET_VAR:AUTH_TOKEN>" }\n	#Output { "status" : "ok" }\n#endTest\n\n#beginTest\n	#Desc Nuevo producto de importacion de AdminPAQ\n	#Method POST api/producto/nuevo\n	#Input { "codigo_producto" : "PROINT150", "metodo_costeo" : "precio", "nombre_producto" : "PROCESADOR+INTEL+CORE+2+QUAD+Q8300+2.5GHZ+1333MHZ+4MB", "compra_en_mostrador" : "1", "costo_estandar" : "0.00000", "activo" : "1", "control_de_existencia" : "0", "clasificaciones" : "[\\"4\\"]", "peso_producto" : "0.00000", "precio" : "2285.01000", "codigo_barras" : "PROINT150", "auth_token" : "<GET_VAR:AUTH_TOKEN>" }\n	#Output { "status" : "ok" }\n#endTest\n\n#beginTest\n	#Desc Nuevo producto de importacion de AdminPAQ\n	#Method POST api/producto/nuevo\n	#Input { "codigo_producto" : "PROINT160", "metodo_costeo" : "precio", "nombre_producto" : "PROCESADOR+INTEL+CORE+I3+2100+3.1GHZ", "compra_en_mostrador" : "1", "costo_estandar" : "0.00000", "activo" : "1", "control_de_existencia" : "0", "clasificaciones" : "[\\"4\\"]", "peso_producto" : "0.00000", "precio" : "1935.12000", "codigo_barras" : "PROINT160", "auth_token" : "<GET_VAR:AUTH_TOKEN>" }\n	#Output { "status" : "ok" }\n#endTest\n\n#beginTest\n	#Desc Nuevo producto de importacion de AdminPAQ\n	#Method POST api/producto/nuevo\n	#Input { "codigo_producto" : "PROINT166", "metodo_costeo" : "precio", "nombre_producto" : "PROCESADOR+INTEL+CORE+2+DUO+E8500+3.16+GHZ", "compra_en_mostrador" : "1", "costo_estandar" : "0.00000", "activo" : "1", "control_de_existencia" : "0", "clasificaciones" : "[\\"4\\"]", "peso_producto" : "0.00000", "precio" : "3041.79000", "codigo_barras" : "PROINT166", "auth_token" : "<GET_VAR:AUTH_TOKEN>" }\n	#Output { "status" : "ok" }\n#endTest\n\n#beginTest\n	#Desc Nuevo producto de importacion de AdminPAQ\n	#Method POST api/producto/nuevo\n	#Input { "codigo_producto" : "PROINT180", "metodo_costeo" : "precio", "nombre_producto" : "PROCESADOR+INTEL+DUAL+CORE+G6950+2.8+SKT+1156", "compra_en_mostrador" : "1", "costo_estandar" : "0.00000", "activo" : "1", "control_de_existencia" : "0", "clasificaciones" : "[\\"4\\"]", "peso_producto" : "0.00000", "precio" : "1476.56000", "codigo_barras" : "PROINT180", "auth_token" : "<GET_VAR:AUTH_TOKEN>" }\n	#Output { "status" : "ok" }\n#endTest\n\n#beginTest\n	#Desc Nuevo producto de importacion de AdminPAQ\n	#Method POST api/producto/nuevo\n	#Input { "codigo_producto" : "RED3CO020", "metodo_costeo" : "precio", "nombre_producto" : "SWITCH+3COM+24+PTOS++10%2F100+%2B+2PT+10%2F100%2F1000", "compra_en_mostrador" : "1", "costo_estandar" : "0.00000", "activo" : "1", "control_de_existencia" : "0", "clasificaciones" : "[\\"9\\"]", "peso_producto" : "0.00000", "precio" : "0.00000", "codigo_barras" : "RED3CO020", "auth_token" : "<GET_VAR:AUTH_TOKEN>" }\n	#Output { "status" : "ok" }\n#endTest\n\n#beginTest\n	#Desc Nuevo producto de importacion de AdminPAQ\n	#Method POST api/producto/nuevo\n	#Input { "codigo_producto" : "RED3CO040", "metodo_costeo" : "precio", "nombre_producto" : "SWITCH+3+COM+16+PTOS+10%2F100+NO+ADNISTRABLE", "compra_en_mostrador" : "1", "costo_estandar" : "0.00000", "activo" : "1", "control_de_existencia" : "0", "clasificaciones" : "[\\"9\\"]", "peso_producto" : "0.00000", "precio" : "0.00000", "codigo_barras" : "RED3CO040", "auth_token" : "<GET_VAR:AUTH_TOKEN>" }\n	#Output { "status" : "ok" }\n#endTest\n\n#beginTest\n	#Desc Nuevo producto de importacion de AdminPAQ\n	#Method POST api/producto/nuevo\n	#Input { "codigo_producto" : "REDADV010", "metodo_costeo" : "precio", "nombre_producto" : "TARJETA+PCI+ADVANTECK+3+PTOS+FIREWIRE", "compra_en_mostrador" : "1", "costo_estandar" : "0.00000", "activo" : "1", "control_de_existencia" : "0", "clasificaciones" : "[\\"1\\"]", "peso_producto" : "0.00000", "precio" : "0.00000", "codigo_barras" : "REDADV010", "auth_token" : "<GET_VAR:AUTH_TOKEN>" }\n	#Output { "status" : "ok" }\n#endTest\n\n#beginTest\n	#Desc Nuevo producto de importacion de AdminPAQ\n	#Method POST api/producto/nuevo\n	#Input { "codigo_producto" : "REDADV020", "metodo_costeo" : "precio", "nombre_producto" : "TARJETA+DE+RED+ADVANTEK+ETHERNET+ADAPTER", "compra_en_mostrador" : "1", "costo_estandar" : "0.00000", "activo" : "1", "control_de_existencia" : "0", "clasificaciones" : "[\\"9\\"]", "peso_producto" : "0.00000", "precio" : "145.45000", "codigo_barras" : "REDADV020", "auth_token" : "<GET_VAR:AUTH_TOKEN>" }\n	#Output { "status" : "ok" }\n#endTest\n\n#beginTest\n	#Desc Nuevo producto de importacion de AdminPAQ\n	#Method POST api/producto/nuevo\n	#Input { "codigo_producto" : "REDADV030", "metodo_costeo" : "precio", "nombre_producto" : "SWITCH+ADVANTEK+8+PTOS+10%2F100+MPS", "compra_en_mostrador" : "1", "costo_estandar" : "0.00000", "activo" : "1", "control_de_existencia" : "0", "clasificaciones" : "[\\"9\\"]", "peso_producto" : "0.00000", "precio" : "243.97000", "codigo_barras" : "REDADV030", "auth_token" : "<GET_VAR:AUTH_TOKEN>" }\n	#Output { "status" : "ok" }\n#endTest\n\n#beginTest\n	#Desc Nuevo producto de importacion de AdminPAQ\n	#Method POST api/producto/nuevo\n	#Input { "codigo_producto" : "REDADV040", "metodo_costeo" : "precio", "nombre_producto" : "SWITCH+ADVANTEK+5+PTOS+10%2F100MBPS", "compra_en_mostrador" : "1", "costo_estandar" : "0.00000", "activo" : "1", "control_de_existencia" : "0", "clasificaciones" : "[\\"9\\"]", "peso_producto" : "0.00000", "precio" : "203.50000", "codigo_barras" : "REDADV040", "auth_token" : "<GET_VAR:AUTH_TOKEN>" }\n	#Output { "status" : "ok" }\n#endTest\n\n#beginTest\n	#Desc Nuevo producto de importacion de AdminPAQ\n	#Method POST api/producto/nuevo\n	#Input { "codigo_producto" : "REDADV050", "metodo_costeo" : "precio", "nombre_producto" : "TARJETA+DE+RED+USB+ADVANTEK+CON+ANTENA+EXTRA+RANGE+802.11+G", "compra_en_mostrador" : "1", "costo_estandar" : "0.00000", "activo" : "1", "control_de_existencia" : "0", "clasificaciones" : "[\\"9\\"]", "peso_producto" : "0.00000", "precio" : "317.18000", "codigo_barras" : "REDADV050", "auth_token" : "<GET_VAR:AUTH_TOKEN>" }\n	#Output { "status" : "ok" }\n#endTest\n\n#beginTest\n	#Desc Nuevo producto de importacion de AdminPAQ\n	#Method POST api/producto/nuevo\n	#Input { "codigo_producto" : "REDADV060", "metodo_costeo" : "precio", "nombre_producto" : "FAX+MODEM+ADVANTEK++USB+EXTERNO+56K+V92", "compra_en_mostrador" : "1", "costo_estandar" : "0.00000", "activo" : "1", "control_de_existencia" : "0", "clasificaciones" : "[\\"9\\"]", "peso_producto" : "0.00000", "precio" : "345.27000", "codigo_barras" : "REDADV060", "auth_token" : "<GET_VAR:AUTH_TOKEN>" }\n	#Output { "status" : "ok" }\n#endTest\n\n#beginTest\n	#Desc Nuevo producto de importacion de AdminPAQ\n	#Method POST api/producto/nuevo\n	#Input { "codigo_producto" : "REDADV070", "metodo_costeo" : "precio", "nombre_producto" : "TARJETA+DE+RED+ADVANTEK+PCI+INALAMBRICA", "compra_en_mostrador" : "1", "costo_estandar" : "0.00000", "activo" : "1", "control_de_existencia" : "0", "clasificaciones" : "[\\"9\\"]", "peso_producto" : "0.00000", "precio" : "289.19000", "codigo_barras" : "REDADV070", "auth_token" : "<GET_VAR:AUTH_TOKEN>" }\n	#Output { "status" : "ok" }\n#endTest\n\n#beginTest\n	#Desc Nuevo producto de importacion de AdminPAQ\n	#Method POST api/producto/nuevo\n	#Input { "codigo_producto" : "REDADV080", "metodo_costeo" : "precio", "nombre_producto" : "TARJETA+PCI+DE+PTOS+FIREWIRE+1394", "compra_en_mostrador" : "1", "costo_estandar" : "0.00000", "activo" : "1", "control_de_existencia" : "0", "clasificaciones" : "[\\"9\\"]", "peso_producto" : "0.00000", "precio" : "152.64000", "codigo_barras" : "REDADV080", "auth_token" : "<GET_VAR:AUTH_TOKEN>" }\n	#Output { "status" : "ok" }\n#endTest\n\n#beginTest\n	#Desc Nuevo producto de importacion de AdminPAQ\n	#Method POST api/producto/nuevo\n	#Input { "codigo_producto" : "REDAND050", "metodo_costeo" : "precio", "nombre_producto" : "ANTENA+ANSEL+ESTERIOR+CONLINEA+DE+VISTA++HASTA+20KM", "compra_en_mostrador" : "1", "costo_estandar" : "0.00000", "activo" : "1", "control_de_existencia" : "0", "clasificaciones" : "[\\"9\\"]", "peso_producto" : "0.00000", "precio" : "2689.65000", "codigo_barras" : "REDAND050", "auth_token" : "<GET_VAR:AUTH_TOKEN>" }\n	#Output { "status" : "ok" }\n#endTest\n\n#beginTest\n	#Desc Nuevo producto de importacion de AdminPAQ\n	#Method POST api/producto/nuevo\n	#Input { "codigo_producto" : "REDANS010", "metodo_costeo" : "precio", "nombre_producto" : "TARJETA+DE+RED+USB+INALAMBRICA+ANSEL+802.11+G+54+MBPS", "compra_en_mostrador" : "1", "costo_estandar" : "0.00000", "activo" : "1", "control_de_existencia" : "0", "clasificaciones" : "[\\"9\\"]", "peso_producto" : "0.00000", "precio" : "0.00000", "codigo_barras" : "REDANS010", "auth_token" : "<GET_VAR:AUTH_TOKEN>" }\n	#Output { "status" : "ok" }\n#endTest\n\n#beginTest\n	#Desc Nuevo producto de importacion de AdminPAQ\n	#Method POST api/producto/nuevo\n	#Input { "codigo_producto" : "REDANS020", "metodo_costeo" : "precio", "nombre_producto" : "TARJETA+DE+RED+ANSEL+PCI+10%2F100+TXPCI", "compra_en_mostrador" : "1", "costo_estandar" : "0.00000", "activo" : "1", "control_de_existencia" : "0", "clasificaciones" : "[\\"9\\"]", "peso_producto" : "0.00000", "precio" : "0.00000", "codigo_barras" : "REDANS020", "auth_token" : "<GET_VAR:AUTH_TOKEN>" }\n	#Output { "status" : "ok" }\n#endTest\n\n#beginTest\n	#Desc Nuevo producto de importacion de AdminPAQ\n	#Method POST api/producto/nuevo\n	#Input { "codigo_producto" : "REDANS030", "metodo_costeo" : "precio", "nombre_producto" : "SWITCH+ANSEL+8+PTOS+10%2F100+MBPS-NWAY+MINI", "compra_en_mostrador" : "1", "costo_estandar" : "0.00000", "activo" : "1", "control_de_existencia" : "0", "clasificaciones" : "[\\"9\\"]", "peso_producto" : "0.00000", "precio" : "196.75000", "codigo_barras" : "REDANS030", "auth_token" : "<GET_VAR:AUTH_TOKEN>" }\n	#Output { "status" : "ok" }\n#endTest\n\n#beginTest\n	#Desc Nuevo producto de importacion de AdminPAQ\n	#Method POST api/producto/nuevo\n	#Input { "codigo_producto" : "REDARL01", "metodo_costeo" : "precio", "nombre_producto" : "CONCENTRADOR+AIRLINK+16+PTOS+10%2F100", "compra_en_mostrador" : "1", "costo_estandar" : "0.00000", "activo" : "1", "control_de_existencia" : "0", "clasificaciones" : "[\\"9\\"]", "peso_producto" : "0.00000", "precio" : "497.36000", "codigo_barras" : "REDARL01", "auth_token" : "<GET_VAR:AUTH_TOKEN>" }\n	#Output { "status" : "ok" }\n#endTest\n\n#beginTest\n	#Desc Nuevo producto de importacion de AdminPAQ\n	#Method POST api/producto/nuevo\n	#Input { "codigo_producto" : "REDDLI010", "metodo_costeo" : "costo", "nombre_producto" : "TARJETA+DE+RED+DLINK+PCI+GIGABIT+10%2F100%2F1000MBPS", "compra_en_mostrador" : "1", "costo_estandar" : "18.59000", "activo" : "1", "control_de_existencia" : "0", "clasificaciones" : "[\\"9\\"]", "peso_producto" : "0.00000", "precio" : "0.00000", "codigo_barras" : "REDDLI010", "auth_token" : "<GET_VAR:AUTH_TOKEN>" }\n	#Output { "status" : "ok" }\n#endTest\n\n#beginTest\n	#Desc Nuevo producto de importacion de AdminPAQ\n	#Method POST api/producto/nuevo\n	#Input { "codigo_producto" : "REDENC020", "metodo_costeo" : "precio", "nombre_producto" : "SWITCH+24PTOS+10%2F100+ENCORE+P%2FMONTAR+EN+RACK", "compra_en_mostrador" : "1", "costo_estandar" : "472.12000", "activo" : "1", "control_de_existencia" : "0", "clasificaciones" : "[\\"9\\"]", "peso_producto" : "0.00000", "precio" : "687.91000", "codigo_barras" : "REDENC020", "auth_token" : "<GET_VAR:AUTH_TOKEN>" }\n	#Output { "status" : "ok" }\n#endTest\n\n#beginTest\n	#Desc Nuevo producto de importacion de AdminPAQ\n	#Method POST api/producto/nuevo\n	#Input { "codigo_producto" : "REDENC110", "metodo_costeo" : "costo", "nombre_producto" : "TARJETA+PCI+ENCORE+5+PTOS+USB", "compra_en_mostrador" : "1", "costo_estandar" : "91.33000", "activo" : "1", "control_de_existencia" : "0", "clasificaciones" : "[\\"9\\"]", "peso_producto" : "0.00000", "precio" : "0.00000", "codigo_barras" : "REDENC110", "auth_token" : "<GET_VAR:AUTH_TOKEN>" }\n	#Output { "status" : "ok" }\n#endTest\n\n#beginTest\n	#Desc Nuevo producto de importacion de AdminPAQ\n	#Method POST api/producto/nuevo\n	#Input { "codigo_producto" : "REDGEN010", "metodo_costeo" : "precio", "nombre_producto" : "CONECTOR+RJ45", "compra_en_mostrador" : "1", "costo_estandar" : "1.60000", "activo" : "1", "control_de_existencia" : "0", "clasificaciones" : "[\\"9\\"]", "peso_producto" : "0.00000", "precio" : "2.30000", "codigo_barras" : "REDGEN010", "auth_token" : "<GET_VAR:AUTH_TOKEN>" }\n	#Output { "status" : "ok" }\n#endTest\n\n#beginTest\n	#Desc Nuevo producto de importacion de AdminPAQ\n	#Method POST api/producto/nuevo\n	#Input { "codigo_producto" : "REDGEN020", "metodo_costeo" : "costo", "nombre_producto" : "CUBIERTA+PROTECTORA+PARA+CONECTOR+RJ45", "compra_en_mostrador" : "1", "costo_estandar" : "0.50000", "activo" : "1", "control_de_existencia" : "0", "clasificaciones" : "[\\"9\\"]", "peso_producto" : "0.00000", "precio" : "0.00000", "codigo_barras" : "REDGEN020", "auth_token" : "<GET_VAR:AUTH_TOKEN>" }\n	#Output { "status" : "ok" }\n#endTest\n\n#beginTest\n	#Desc Nuevo producto de importacion de AdminPAQ\n	#Method POST api/producto/nuevo\n	#Input { "codigo_producto" : "REDGEN030", "metodo_costeo" : "precio", "nombre_producto" : "PROBADOR+DE+CABLE+DE+RED+UTP+Y+COAXIAL", "compra_en_mostrador" : "1", "costo_estandar" : "0.00000", "activo" : "1", "control_de_existencia" : "0", "clasificaciones" : "[\\"9\\"]", "peso_producto" : "0.00000", "precio" : "286.87000", "codigo_barras" : "REDGEN030", "auth_token" : "<GET_VAR:AUTH_TOKEN>" }\n	#Output { "status" : "ok" }\n#endTest\n\n#beginTest\n	#Desc Nuevo producto de importacion de AdminPAQ\n	#Method POST api/producto/nuevo\n	#Input { "codigo_producto" : "REDGEN040", "metodo_costeo" : "precio", "nombre_producto" : "PONCHADORA+PROF.D+IMPACTO", "compra_en_mostrador" : "1", "costo_estandar" : "0.00000", "activo" : "1", "control_de_existencia" : "0", "clasificaciones" : "[\\"9\\"]", "peso_producto" : "0.00000", "precio" : "456.54000", "codigo_barras" : "REDGEN040", "auth_token" : "<GET_VAR:AUTH_TOKEN>" }\n	#Output { "status" : "ok" }\n#endTest\n\n#beginTest\n	#Desc Nuevo producto de importacion de AdminPAQ\n	#Method POST api/producto/nuevo\n	#Input { "codigo_producto" : "REDGEN050", "metodo_costeo" : "precio", "nombre_producto" : "NAVAJA+REVESTIBLE+P+PONCHADORA", "compra_en_mostrador" : "1", "costo_estandar" : "0.00000", "activo" : "1", "control_de_existencia" : "0", "clasificaciones" : "[\\"9\\"]", "peso_producto" : "0.00000", "precio" : "121.36000", "codigo_barras" : "REDGEN050", "auth_token" : "<GET_VAR:AUTH_TOKEN>" }\n	#Output { "status" : "ok" }\n#endTest\n\n#beginTest\n	#Desc Nuevo producto de importacion de AdminPAQ\n	#Method POST api/producto/nuevo\n	#Input { "codigo_producto" : "REDLIN030", "metodo_costeo" : "precio", "nombre_producto" : "TARJETA+DE+RED+PCI+LINKSYS+WMP54G+2.4GHZ+801", "compra_en_mostrador" : "1", "costo_estandar" : "0.00000", "activo" : "1", "control_de_existencia" : "0", "clasificaciones" : "[\\"9\\"]", "peso_producto" : "0.00000", "precio" : "0.00000", "codigo_barras" : "REDLIN030", "auth_token" : "<GET_VAR:AUTH_TOKEN>" }\n	#Output { "status" : "ok" }\n#endTest\n\n#beginTest\n	#Desc Nuevo producto de importacion de AdminPAQ\n	#Method POST api/producto/nuevo\n	#Input { "codigo_producto" : "REDLIN040", "metodo_costeo" : "precio", "nombre_producto" : "ACCESS+POINT+INALAMBRICO+D-LINK++DWL-7700AP+80.211A%2F11G", "compra_en_mostrador" : "1", "costo_estandar" : "0.00000", "activo" : "1", "control_de_existencia" : "0", "clasificaciones" : "[\\"9\\"]", "peso_producto" : "0.00000", "precio" : "0.00000", "codigo_barras" : "REDLIN040", "auth_token" : "<GET_VAR:AUTH_TOKEN>" }\n	#Output { "status" : "ok" }\n#endTest\n\n#beginTest\n	#Desc Nuevo producto de importacion de AdminPAQ\n	#Method POST api/producto/nuevo\n	#Input { "codigo_producto" : "REDLIN050", "metodo_costeo" : "precio", "nombre_producto" : "ACCESS+POINT+INALAMBRICO+D-LINK+DWL-7700AP+80.211A%2F11G", "compra_en_mostrador" : "1", "costo_estandar" : "0.00000", "activo" : "1", "control_de_existencia" : "0", "clasificaciones" : "[\\"9\\"]", "peso_producto" : "0.00000", "precio" : "15149.80000", "codigo_barras" : "REDLIN050", "auth_token" : "<GET_VAR:AUTH_TOKEN>" }\n	#Output { "status" : "ok" }\n#endTest\n\n#beginTest\n	#Desc Nuevo producto de importacion de AdminPAQ\n	#Method POST api/producto/nuevo\n	#Input { "codigo_producto" : "REDSMC010", "metodo_costeo" : "precio", "nombre_producto" : "SWITCH+SMC+8+PTOS+10%2F100%2F1000+SMART+POE%2F1+P", "compra_en_mostrador" : "1", "costo_estandar" : "0.00000", "activo" : "1", "control_de_existencia" : "0", "clasificaciones" : "[\\"9\\"]", "peso_producto" : "0.00000", "precio" : "3962.83000", "codigo_barras" : "REDSMC010", "auth_token" : "<GET_VAR:AUTH_TOKEN>" }\n	#Output { "status" : "ok" }\n#endTest\n\n#beginTest\n	#Desc Nuevo producto de importacion de AdminPAQ\n	#Method POST api/producto/nuevo\n	#Input { "codigo_producto" : "REDSTE010", "metodo_costeo" : "precio", "nombre_producto" : "ADAPTADOR+DE+UNION+DB9", "compra_en_mostrador" : "1", "costo_estandar" : "0.00000", "activo" : "1", "control_de_existencia" : "0", "clasificaciones" : "[\\"9\\"]", "peso_producto" : "0.00000", "precio" : "38.01000", "codigo_barras" : "REDSTE010", "auth_token" : "<GET_VAR:AUTH_TOKEN>" }\n	#Output { "status" : "ok" }\n#endTest\n\n#beginTest\n	#Desc Nuevo producto de importacion de AdminPAQ\n	#Method POST api/producto/nuevo\n	#Input { "codigo_producto" : "REDSTE020", "metodo_costeo" : "precio", "nombre_producto" : "ADAPTADOR+DE+UNIONDB25", "compra_en_mostrador" : "1", "costo_estandar" : "0.00000", "activo" : "1", "control_de_existencia" : "0", "clasificaciones" : "[\\"9\\"]", "peso_producto" : "0.00000", "precio" : "17.30000", "codigo_barras" : "REDSTE020", "auth_token" : "<GET_VAR:AUTH_TOKEN>" }\n	#Output { "status" : "ok" }\n#endTest\n\n#beginTest\n	#Desc Nuevo producto de importacion de AdminPAQ\n	#Method POST api/producto/nuevo\n	#Input { "codigo_producto" : "REDSTE030", "metodo_costeo" : "precio", "nombre_producto" : "CONECTOR+TIPO+DB25+PARA+PONCHAR", "compra_en_mostrador" : "1", "costo_estandar" : "0.00000", "activo" : "1", "control_de_existencia" : "0", "clasificaciones" : "[\\"9\\"]", "peso_producto" : "0.00000", "precio" : "9.81000", "codigo_barras" : "REDSTE030", "auth_token" : "<GET_VAR:AUTH_TOKEN>" }\n	#Output { "status" : "ok" }\n#endTest\n\n#beginTest\n	#Desc Nuevo producto de importacion de AdminPAQ\n	#Method POST api/producto/nuevo\n	#Input { "codigo_producto" : "REDSTE040", "metodo_costeo" : "precio", "nombre_producto" : "JACK+C%2F4+CABLES+P%2F+CONECTAR", "compra_en_mostrador" : "1", "costo_estandar" : "0.00000", "activo" : "1", "control_de_existencia" : "0", "clasificaciones" : "[\\"9\\"]", "peso_producto" : "0.00000", "precio" : "7.35000", "codigo_barras" : "REDSTE040", "auth_token" : "<GET_VAR:AUTH_TOKEN>" }\n	#Output { "status" : "ok" }\n#endTest\n\n#beginTest\n	#Desc Nuevo producto de importacion de AdminPAQ\n	#Method POST api/producto/nuevo\n	#Input { "codigo_producto" : "REDSTE050", "metodo_costeo" : "precio", "nombre_producto" : "JACK+TELEFONICO+DE+PLAC", "compra_en_mostrador" : "1", "costo_estandar" : "0.00000", "activo" : "1", "control_de_existencia" : "0", "clasificaciones" : "[\\"9\\"]", "peso_producto" : "0.00000", "precio" : "18.40000", "codigo_barras" : "REDSTE050", "auth_token" : "<GET_VAR:AUTH_TOKEN>" }\n	#Output { "status" : "ok" }\n#endTest\n\n#beginTest\n	#Desc Nuevo producto de importacion de AdminPAQ\n	#Method POST api/producto/nuevo\n	#Input { "codigo_producto" : "REGOPT010", "metodo_costeo" : "costo", "nombre_producto" : "REGULADOR+OPTI-UPS+8+CONTACTOS+NEGRO+SBAH821", "compra_en_mostrador" : "1", "costo_estandar" : "156.75000", "activo" : "1", "control_de_existencia" : "0", "clasificaciones" : "[\\"1\\"]", "peso_producto" : "0.00000", "precio" : "0.00000", "codigo_barras" : "REGOPT010", "auth_token" : "<GET_VAR:AUTH_TOKEN>" }\n	#Output { "status" : "ok" }\n#endTest\n\n#beginTest\n	#Desc Nuevo producto de importacion de AdminPAQ\n	#Method POST api/producto/nuevo\n	#Input { "codigo_producto" : "REGOPT020", "metodo_costeo" : "costo", "nombre_producto" : "REGULADOR+OPTI-UPS++6+CONTACT.+NEGRO+SS1200", "compra_en_mostrador" : "1", "costo_estandar" : "133.67000", "activo" : "1", "control_de_existencia" : "0", "clasificaciones" : "[\\"1\\"]", "peso_producto" : "0.00000", "precio" : "0.00000", "codigo_barras" : "REGOPT020", "auth_token" : "<GET_VAR:AUTH_TOKEN>" }\n	#Output { "status" : "ok" }\n#endTest\n\n#beginTest\n	#Desc Nuevo producto de importacion de AdminPAQ\n	#Method POST api/producto/nuevo\n	#Input { "codigo_producto" : "REGTDE010", "metodo_costeo" : "precio", "nombre_producto" : "REGULADOR+TDE+NET+1000CA++NEGRO+T1664", "compra_en_mostrador" : "1", "costo_estandar" : "0.00000", "activo" : "1", "control_de_existencia" : "0", "clasificaciones" : "[\\"1\\"]", "peso_producto" : "0.00000", "precio" : "229.32000", "codigo_barras" : "REGTDE010", "auth_token" : "<GET_VAR:AUTH_TOKEN>" }\n	#Output { "status" : "ok" }\n#endTest\n\n#beginTest\n	#Desc Nuevo servicio de importacion de AdminPAQ\n	#Method GET api/servicios/nuevo\n	#Input { "codigo_servicio" : "SERVICIO01", "metodo_costeo" : "precio", "nombre_servicio" : "MANTENIMIENTO+A+EQUIPO+DE+COMPUTO", "compra_en_mostrador" : "1", "costo_estandar" : "0.00000", "activo" : "1", "control_de_existencia" : "0", "precio" : "0.00000", "auth_token" : "<GET_VAR:AUTH_TOKEN>" }\n	#Output { "status" : "ok" }\n#endTest\n\n#beginTest\n	#Desc Nuevo servicio de importacion de AdminPAQ\n	#Method GET api/servicios/nuevo\n	#Input { "codigo_servicio" : "SERVICIO02", "metodo_costeo" : "precio", "nombre_servicio" : "SAUZ+MANTENIMIENTO+EQUIPO+DE+COMPUTO", "compra_en_mostrador" : "1", "costo_estandar" : "0.00000", "activo" : "1", "control_de_existencia" : "0", "precio" : "0.00000", "auth_token" : "<GET_VAR:AUTH_TOKEN>" }\n	#Output { "status" : "ok" }\n#endTest\n\n#beginTest\n	#Desc Nuevo servicio de importacion de AdminPAQ\n	#Method GET api/servicios/nuevo\n	#Input { "codigo_servicio" : "SERVICIO03", "metodo_costeo" : "precio", "nombre_servicio" : "SERVICIO+DE+INTERNET", "compra_en_mostrador" : "1", "costo_estandar" : "0.00000", "activo" : "1", "control_de_existencia" : "0", "precio" : "0.00000", "auth_token" : "<GET_VAR:AUTH_TOKEN>" }\n	#Output { "status" : "ok" }\n#endTest\n\n#beginTest\n	#Desc Nuevo servicio de importacion de AdminPAQ\n	#Method GET api/servicios/nuevo\n	#Input { "codigo_servicio" : "SERVICIO04", "metodo_costeo" : "precio", "nombre_servicio" : "SERVICIO+DE+ESCANEADO", "compra_en_mostrador" : "1", "costo_estandar" : "0.00000", "activo" : "1", "control_de_existencia" : "0", "precio" : "0.00000", "auth_token" : "<GET_VAR:AUTH_TOKEN>" }\n	#Output { "status" : "ok" }\n#endTest\n\n#beginTest\n	#Desc Nuevo servicio de importacion de AdminPAQ\n	#Method GET api/servicios/nuevo\n	#Input { "codigo_servicio" : "SERVICIO05", "metodo_costeo" : "precio", "nombre_servicio" : "SERVICIO+DE+IMPRESIONES", "compra_en_mostrador" : "1", "costo_estandar" : "0.00000", "activo" : "1", "control_de_existencia" : "0", "precio" : "0.00000", "auth_token" : "<GET_VAR:AUTH_TOKEN>" }\n	#Output { "status" : "ok" }\n#endTest\n\n#beginTest\n	#Desc Nuevo servicio de importacion de AdminPAQ\n	#Method GET api/servicios/nuevo\n	#Input { "codigo_servicio" : "SERVICIO06", "metodo_costeo" : "precio", "nombre_servicio" : "SERVICIO+DE+INTERNET+Y+COPIADO", "compra_en_mostrador" : "1", "costo_estandar" : "0.00000", "activo" : "1", "control_de_existencia" : "0", "precio" : "0.00000", "auth_token" : "<GET_VAR:AUTH_TOKEN>" }\n	#Output { "status" : "ok" }\n#endTest\n\n#beginTest\n	#Desc Nuevo servicio de importacion de AdminPAQ\n	#Method GET api/servicios/nuevo\n	#Input { "codigo_servicio" : "SERVICIO07", "metodo_costeo" : "precio", "nombre_servicio" : "SERVICIO+DE+INTERNET+E+IMPRESIONES", "compra_en_mostrador" : "1", "costo_estandar" : "0.00000", "activo" : "1", "control_de_existencia" : "0", "precio" : "0.00000", "auth_token" : "<GET_VAR:AUTH_TOKEN>" }\n	#Output { "status" : "ok" }\n#endTest\n\n#beginTest\n	#Desc Nuevo servicio de importacion de AdminPAQ\n	#Method GET api/servicios/nuevo\n	#Input { "codigo_servicio" : "SERVICIO08", "metodo_costeo" : "precio", "nombre_servicio" : "INSCRIPCION+CURSO+BASICO", "compra_en_mostrador" : "1", "costo_estandar" : "0.00000", "activo" : "1", "control_de_existencia" : "0", "precio" : "0.00000", "auth_token" : "<GET_VAR:AUTH_TOKEN>" }\n	#Output { "status" : "ok" }\n#endTest\n\n#beginTest\n	#Desc Nuevo servicio de importacion de AdminPAQ\n	#Method GET api/servicios/nuevo\n	#Input { "codigo_servicio" : "SERVICIO09", "metodo_costeo" : "precio", "nombre_servicio" : "COLEGIATURA+CURSO+BASICO", "compra_en_mostrador" : "1", "costo_estandar" : "0.00000", "activo" : "1", "control_de_existencia" : "0", "precio" : "0.00000", "auth_token" : "<GET_VAR:AUTH_TOKEN>" }\n	#Output { "status" : "ok" }\n#endTest\n\n#beginTest\n	#Desc Nuevo producto de importacion de AdminPAQ\n	#Method POST api/producto/nuevo\n	#Input { "codigo_producto" : "SOFBIT010", "metodo_costeo" : "precio", "nombre_producto" : "ANTIVIRUS+BITDEFENDER+INTERNET+SECURITY+2011+1+USUARIO", "compra_en_mostrador" : "1", "costo_estandar" : "0.00000", "activo" : "1", "control_de_existencia" : "0", "clasificaciones" : "[\\"7\\"]", "peso_producto" : "0.00000", "precio" : "275.10000", "codigo_barras" : "SOFBIT010", "auth_token" : "<GET_VAR:AUTH_TOKEN>" }\n	#Output { "status" : "ok" }\n#endTest\n\n#beginTest\n	#Desc Nuevo producto de importacion de AdminPAQ\n	#Method POST api/producto/nuevo\n	#Input { "codigo_producto" : "SOFKAS010", "metodo_costeo" : "precio", "nombre_producto" : "KASPERSKY+ANTIVIRUS+OEM", "compra_en_mostrador" : "1", "costo_estandar" : "55.10000", "activo" : "1", "control_de_existencia" : "0", "clasificaciones" : "[\\"7\\"]", "peso_producto" : "0.00000", "precio" : "284.40000", "codigo_barras" : "SOFKAS010", "auth_token" : "<GET_VAR:AUTH_TOKEN>" }\n	#Output { "status" : "ok" }\n#endTest\n\n#beginTest\n	#Desc Nuevo producto de importacion de AdminPAQ\n	#Method POST api/producto/nuevo\n	#Input { "codigo_producto" : "SOFKAS020", "metodo_costeo" : "precio", "nombre_producto" : "KASPERSKY+ANTIVIRUS+8.0+%281A%EF%BF%BDO%29+3+LICENCIAS", "compra_en_mostrador" : "1", "costo_estandar" : "0.00000", "activo" : "1", "control_de_existencia" : "0", "clasificaciones" : "[\\"7\\"]", "peso_producto" : "0.00000", "precio" : "606.85000", "codigo_barras" : "SOFKAS020", "auth_token" : "<GET_VAR:AUTH_TOKEN>" }\n	#Output { "status" : "ok" }\n#endTest\n\n#beginTest\n	#Desc Nuevo producto de importacion de AdminPAQ\n	#Method POST api/producto/nuevo\n	#Input { "codigo_producto" : "SOFNOR010", "metodo_costeo" : "precio", "nombre_producto" : "ANTIVIRUS+NORTON+2009+10+USUARIOS", "compra_en_mostrador" : "1", "costo_estandar" : "0.00000", "activo" : "1", "control_de_existencia" : "0", "clasificaciones" : "[\\"7\\"]", "peso_producto" : "0.00000", "precio" : "0.00000", "codigo_barras" : "SOFNOR010", "auth_token" : "<GET_VAR:AUTH_TOKEN>" }\n	#Output { "status" : "ok" }\n#endTest\n\n#beginTest\n	#Desc Nuevo producto de importacion de AdminPAQ\n	#Method POST api/producto/nuevo\n	#Input { "codigo_producto" : "SOFPAN010", "metodo_costeo" : "precio", "nombre_producto" : "ANTIVIRUS+PANDA+SECURITY+2010+3+USUARIOS", "compra_en_mostrador" : "1", "costo_estandar" : "0.00000", "activo" : "1", "control_de_existencia" : "0", "clasificaciones" : "[\\"7\\"]", "peso_producto" : "0.00000", "precio" : "647.18000", "codigo_barras" : "SOFPAN010", "auth_token" : "<GET_VAR:AUTH_TOKEN>" }\n	#Output { "status" : "ok" }\n#endTest\n\n#beginTest\n	#Desc Nuevo producto de importacion de AdminPAQ\n	#Method POST api/producto/nuevo\n	#Input { "codigo_producto" : "TAVECS030", "metodo_costeo" : "precio", "nombre_producto" : "TARJ.DE+VIDEO+ECS+NGT240-1GRL-F+1GB+DDR3+PCIE", "compra_en_mostrador" : "1", "costo_estandar" : "0.00000", "activo" : "1", "control_de_existencia" : "0", "clasificaciones" : "[\\"8\\"]", "peso_producto" : "0.00000", "precio" : "1395.08000", "codigo_barras" : "TAVECS030", "auth_token" : "<GET_VAR:AUTH_TOKEN>" }\n	#Output { "status" : "ok" }\n#endTest\n\n#beginTest\n	#Desc Nuevo producto de importacion de AdminPAQ\n	#Method POST api/producto/nuevo\n	#Input { "codigo_producto" : "TAVENC020", "metodo_costeo" : "costo", "nombre_producto" : "TV+TUNNER+ENCORE++USB+TV+TUNER", "compra_en_mostrador" : "1", "costo_estandar" : "413.32000", "activo" : "1", "control_de_existencia" : "0", "clasificaciones" : "[\\"8\\"]", "peso_producto" : "0.00000", "precio" : "0.00000", "codigo_barras" : "TAVENC020", "auth_token" : "<GET_VAR:AUTH_TOKEN>" }\n	#Output { "status" : "ok" }\n#endTest\n\n#beginTest\n	#Desc Nuevo producto de importacion de AdminPAQ\n	#Method POST api/producto/nuevo\n	#Input { "codigo_producto" : "TECACT120", "metodo_costeo" : "precio", "nombre_producto" : "TECLADO+NUMERICO+ACTECK+PLATA%2FNEGRO+AT-1100", "compra_en_mostrador" : "1", "costo_estandar" : "0.00000", "activo" : "1", "control_de_existencia" : "0", "clasificaciones" : "[\\"1\\"]", "peso_producto" : "0.00000", "precio" : "0.00000", "codigo_barras" : "TECACT120", "auth_token" : "<GET_VAR:AUTH_TOKEN>" }\n	#Output { "status" : "ok" }\n#endTest\n\n#beginTest\n	#Desc Nuevo producto de importacion de AdminPAQ\n	#Method POST api/producto/nuevo\n	#Input { "codigo_producto" : "TECACT130", "metodo_costeo" : "precio", "nombre_producto" : "TECLADO+ACTECK+AT-4720+MULTIMEDIA+PS2+NEGRO", "compra_en_mostrador" : "1", "costo_estandar" : "0.00000", "activo" : "1", "control_de_existencia" : "0", "clasificaciones" : "[\\"1\\"]", "peso_producto" : "0.00000", "precio" : "0.00000", "codigo_barras" : "TECACT130", "auth_token" : "<GET_VAR:AUTH_TOKEN>" }\n	#Output { "status" : "ok" }\n#endTest\n\n#beginTest\n	#Desc Nuevo producto de importacion de AdminPAQ\n	#Method POST api/producto/nuevo\n	#Input { "codigo_producto" : "TECACT140", "metodo_costeo" : "precio", "nombre_producto" : "TECLADO+%2B+MOUSE++ACTECK+ESTANDAR++AK-8100+NEGRO+PS2", "compra_en_mostrador" : "1", "costo_estandar" : "0.00000", "activo" : "1", "control_de_existencia" : "0", "clasificaciones" : "[\\"1\\"]", "peso_producto" : "0.00000", "precio" : "0.00000", "codigo_barras" : "TECACT140", "auth_token" : "<GET_VAR:AUTH_TOKEN>" }\n	#Output { "status" : "ok" }\n#endTest\n\n#beginTest\n	#Desc Nuevo producto de importacion de AdminPAQ\n	#Method POST api/producto/nuevo\n	#Input { "codigo_producto" : "TECBEN020", "metodo_costeo" : "precio", "nombre_producto" : "TECLADO+BENQ+SLIM+I300+MULTIMEDIA+NEGRO+USB", "compra_en_mostrador" : "1", "costo_estandar" : "0.00000", "activo" : "1", "control_de_existencia" : "0", "clasificaciones" : "[\\"1\\"]", "peso_producto" : "0.00000", "precio" : "0.00000", "codigo_barras" : "TECBEN020", "auth_token" : "<GET_VAR:AUTH_TOKEN>" }\n	#Output { "status" : "ok" }\n#endTest\n\n#beginTest\n	#Desc Nuevo producto de importacion de AdminPAQ\n	#Method POST api/producto/nuevo\n	#Input { "codigo_producto" : "TECGEN010", "metodo_costeo" : "costo", "nombre_producto" : "TECLADO%2BMOUSE+GENIUS+INTERNET+GK-C210+NEGRO", "compra_en_mostrador" : "1", "costo_estandar" : "117.16000", "activo" : "1", "control_de_existencia" : "0", "clasificaciones" : "[\\"1\\"]", "peso_producto" : "0.00000", "precio" : "0.00000", "codigo_barras" : "TECGEN010", "auth_token" : "<GET_VAR:AUTH_TOKEN>" }\n	#Output { "status" : "ok" }\n#endTest\n\n#beginTest\n	#Desc Nuevo producto de importacion de AdminPAQ\n	#Method POST api/producto/nuevo\n	#Input { "codigo_producto" : "TECGEN020", "metodo_costeo" : "precio", "nombre_producto" : "TECLADO+GENIUS+CONFY+KB-06X+NEGRO+PS2", "compra_en_mostrador" : "1", "costo_estandar" : "0.00000", "activo" : "1", "control_de_existencia" : "0", "clasificaciones" : "[\\"1\\"]", "peso_producto" : "0.00000", "precio" : "76.56000", "codigo_barras" : "TECGEN020", "auth_token" : "<GET_VAR:AUTH_TOKEN>" }\n	#Output { "status" : "ok" }\n#endTest\n\n#beginTest\n	#Desc Nuevo producto de importacion de AdminPAQ\n	#Method POST api/producto/nuevo\n	#Input { "codigo_producto" : "TECGEN040", "metodo_costeo" : "precio", "nombre_producto" : "TECLADO%2BMOUSE+GENIUS+600+USB", "compra_en_mostrador" : "1", "costo_estandar" : "0.00000", "activo" : "1", "control_de_existencia" : "0", "clasificaciones" : "[\\"1\\"]", "peso_producto" : "0.00000", "precio" : "0.00000", "codigo_barras" : "TECGEN040", "auth_token" : "<GET_VAR:AUTH_TOKEN>" }\n	#Output { "status" : "ok" }\n#endTest\n\n#beginTest\n	#Desc Nuevo producto de importacion de AdminPAQ\n	#Method POST api/producto/nuevo\n	#Input { "codigo_producto" : "TECGEN050", "metodo_costeo" : "costo", "nombre_producto" : "TECLADO+GENIUS+NUMERICO+NUMPAD", "compra_en_mostrador" : "1", "costo_estandar" : "72.31000", "activo" : "1", "control_de_existencia" : "0", "clasificaciones" : "[\\"1\\"]", "peso_producto" : "0.00000", "precio" : "0.00000", "codigo_barras" : "TECGEN050", "auth_token" : "<GET_VAR:AUTH_TOKEN>" }\n	#Output { "status" : "ok" }\n#endTest\n\n#beginTest\n	#Desc Nuevo producto de importacion de AdminPAQ\n	#Method POST api/producto/nuevo\n	#Input { "codigo_producto" : "TECGEN080", "metodo_costeo" : "precio", "nombre_producto" : "TECLADO+GENIUS+MULTIMEDIA++C210++NEGRO+PS2", "compra_en_mostrador" : "1", "costo_estandar" : "0.00000", "activo" : "1", "control_de_existencia" : "0", "clasificaciones" : "[\\"1\\"]", "peso_producto" : "0.00000", "precio" : "0.00000", "codigo_barras" : "TECGEN080", "auth_token" : "<GET_VAR:AUTH_TOKEN>" }\n	#Output { "status" : "ok" }\n#endTest\n\n#beginTest\n	#Desc Nuevo producto de importacion de AdminPAQ\n	#Method POST api/producto/nuevo\n	#Input { "codigo_producto" : "TECGEN100", "metodo_costeo" : "precio", "nombre_producto" : "TECLADO+GENIUS+MULTIMEDIA+KB-200+NEGRO+PS2", "compra_en_mostrador" : "1", "costo_estandar" : "0.00000", "activo" : "1", "control_de_existencia" : "0", "clasificaciones" : "[\\"1\\"]", "peso_producto" : "0.00000", "precio" : "0.00000", "codigo_barras" : "TECGEN100", "auth_token" : "<GET_VAR:AUTH_TOKEN>" }\n	#Output { "status" : "ok" }\n#endTest\n\n#beginTest\n	#Desc Nuevo producto de importacion de AdminPAQ\n	#Method POST api/producto/nuevo\n	#Input { "codigo_producto" : "TECGHI010", "metodo_costeo" : "precio", "nombre_producto" : "TECLADO%2BMOUSE+GHIA+NEGRO+STANDAR+KB-292", "compra_en_mostrador" : "1", "costo_estandar" : "0.00000", "activo" : "1", "control_de_existencia" : "0", "clasificaciones" : "[\\"1\\"]", "peso_producto" : "0.00000", "precio" : "0.00000", "codigo_barras" : "TECGHI010", "auth_token" : "<GET_VAR:AUTH_TOKEN>" }\n	#Output { "status" : "ok" }\n#endTest\n\n#beginTest\n	#Desc Nuevo producto de importacion de AdminPAQ\n	#Method POST api/producto/nuevo\n	#Input { "codigo_producto" : "TECGHI020", "metodo_costeo" : "precio", "nombre_producto" : "TECLADO%2BMOUSE+GHIA+MULTIMEDIA+NEGRO+PIANO", "compra_en_mostrador" : "1", "costo_estandar" : "0.00000", "activo" : "1", "control_de_existencia" : "0", "clasificaciones" : "[\\"1\\"]", "peso_producto" : "0.00000", "precio" : "0.00000", "codigo_barras" : "TECGHI020", "auth_token" : "<GET_VAR:AUTH_TOKEN>" }\n	#Output { "status" : "ok" }\n#endTest\n\n#beginTest\n	#Desc Nuevo producto de importacion de AdminPAQ\n	#Method POST api/producto/nuevo\n	#Input { "codigo_producto" : "TECGHI030", "metodo_costeo" : "precio", "nombre_producto" : "TECLADO%2BMOUSE+GHIA+INALAMBRICO+NEGRO+ACABADO+PIANO", "compra_en_mostrador" : "1", "costo_estandar" : "0.00000", "activo" : "1", "control_de_existencia" : "0", "clasificaciones" : "[\\"1\\"]", "peso_producto" : "0.00000", "precio" : "268.58000", "codigo_barras" : "TECGHI030", "auth_token" : "<GET_VAR:AUTH_TOKEN>" }\n	#Output { "status" : "ok" }\n#endTest\n\n#beginTest\n	#Desc Nuevo producto de importacion de AdminPAQ\n	#Method POST api/producto/nuevo\n	#Input { "codigo_producto" : "TECLAB010", "metodo_costeo" : "precio", "nombre_producto" : "TECLADO+LABTEC+PS2+NEGRO", "compra_en_mostrador" : "1", "costo_estandar" : "0.00000", "activo" : "1", "control_de_existencia" : "0", "clasificaciones" : "[\\"1\\"]", "peso_producto" : "0.00000", "precio" : "0.00000", "codigo_barras" : "TECLAB010", "auth_token" : "<GET_VAR:AUTH_TOKEN>" }\n	#Output { "status" : "ok" }\n#endTest\n\n#beginTest\n	#Desc Nuevo producto de importacion de AdminPAQ\n	#Method POST api/producto/nuevo\n	#Input { "codigo_producto" : "TECLOG010", "metodo_costeo" : "precio", "nombre_producto" : "TECLADO+LOGITECH+DELUX+250++NEGRO++PS2", "compra_en_mostrador" : "1", "costo_estandar" : "0.00000", "activo" : "1", "control_de_existencia" : "0", "clasificaciones" : "[\\"1\\"]", "peso_producto" : "0.00000", "precio" : "96.80000", "codigo_barras" : "TECLOG010", "auth_token" : "<GET_VAR:AUTH_TOKEN>" }\n	#Output { "status" : "ok" }\n#endTest\n\n#beginTest\n	#Desc Nuevo producto de importacion de AdminPAQ\n	#Method POST api/producto/nuevo\n	#Input { "codigo_producto" : "TECLOG020", "metodo_costeo" : "precio", "nombre_producto" : "TECLADO+LOGITECH+CORDLESS+DESKTOP+EX110", "compra_en_mostrador" : "1", "costo_estandar" : "0.00000", "activo" : "1", "control_de_existencia" : "0", "clasificaciones" : "[\\"1\\"]", "peso_producto" : "0.00000", "precio" : "0.00000", "codigo_barras" : "TECLOG020", "auth_token" : "<GET_VAR:AUTH_TOKEN>" }\n	#Output { "status" : "ok" }\n#endTest\n\n#beginTest\n	#Desc Nuevo producto de importacion de AdminPAQ\n	#Method POST api/producto/nuevo\n	#Input { "codigo_producto" : "TECLOG030", "metodo_costeo" : "costo", "nombre_producto" : "TECLADO+LOGITECH++INTERNET+CLASICO+200+USB+KEYBOARD", "compra_en_mostrador" : "1", "costo_estandar" : "86.02000", "activo" : "1", "control_de_existencia" : "0", "clasificaciones" : "[\\"1\\"]", "peso_producto" : "0.00000", "precio" : "0.00000", "codigo_barras" : "TECLOG030", "auth_token" : "<GET_VAR:AUTH_TOKEN>" }\n	#Output { "status" : "ok" }\n#endTest\n\n#beginTest\n	#Desc Nuevo producto de importacion de AdminPAQ\n	#Method POST api/producto/nuevo\n	#Input { "codigo_producto" : "TECLOG040", "metodo_costeo" : "precio", "nombre_producto" : "TECLADO%2BMOUSE+LOGITECH+DELUXE+NEGRO+PS2", "compra_en_mostrador" : "1", "costo_estandar" : "0.00000", "activo" : "1", "control_de_existencia" : "0", "clasificaciones" : "[\\"1\\"]", "peso_producto" : "0.00000", "precio" : "0.00000", "codigo_barras" : "TECLOG040", "auth_token" : "<GET_VAR:AUTH_TOKEN>" }\n	#Output { "status" : "ok" }\n#endTest\n\n#beginTest\n	#Desc Nuevo producto de importacion de AdminPAQ\n	#Method POST api/producto/nuevo\n	#Input { "codigo_producto" : "TECLOG050", "metodo_costeo" : "precio", "nombre_producto" : "TECLADO+LOGITECH+WAVE+KEYBORD", "compra_en_mostrador" : "1", "costo_estandar" : "0.00000", "activo" : "1", "control_de_existencia" : "0", "clasificaciones" : "[\\"1\\"]", "peso_producto" : "0.00000", "precio" : "0.00000", "codigo_barras" : "TECLOG050", "auth_token" : "<GET_VAR:AUTH_TOKEN>" }\n	#Output { "status" : "ok" }\n#endTest\n\n#beginTest\n	#Desc Nuevo producto de importacion de AdminPAQ\n	#Method POST api/producto/nuevo\n	#Input { "codigo_producto" : "TECPCH010", "metodo_costeo" : "precio", "nombre_producto" : "TECLADO+MULTIMEDIA+ULTRADELGADO+USB+%28PC-200482%29", "compra_en_mostrador" : "1", "costo_estandar" : "0.00000", "activo" : "1", "control_de_existencia" : "0", "clasificaciones" : "[\\"1\\"]", "peso_producto" : "0.00000", "precio" : "142.20000", "codigo_barras" : "TECPCH010", "auth_token" : "<GET_VAR:AUTH_TOKEN>" }\n	#Output { "status" : "ok" }\n#endTest\n\n#beginTest\n	#Desc Nuevo producto de importacion de AdminPAQ\n	#Method POST api/producto/nuevo\n	#Input { "codigo_producto" : "TECPCH040", "metodo_costeo" : "precio", "nombre_producto" : "TECLADO+PCH+MULTIMEDIA+COMPACTO+PS%2F2+PC-2002222", "compra_en_mostrador" : "1", "costo_estandar" : "0.00000", "activo" : "1", "control_de_existencia" : "0", "clasificaciones" : "[\\"1\\"]", "peso_producto" : "0.00000", "precio" : "0.00000", "codigo_barras" : "TECPCH040", "auth_token" : "<GET_VAR:AUTH_TOKEN>" }\n	#Output { "status" : "ok" }\n#endTest\n\n#beginTest\n	#Desc Nuevo producto de importacion de AdminPAQ\n	#Method POST api/producto/nuevo\n	#Input { "codigo_producto" : "TECPCH120", "metodo_costeo" : "precio", "nombre_producto" : "TECLADO+NUMERICO+RETRACTIL+USB+%28PC-200444%29", "compra_en_mostrador" : "1", "costo_estandar" : "0.00000", "activo" : "1", "control_de_existencia" : "0", "clasificaciones" : "[\\"1\\"]", "peso_producto" : "0.00000", "precio" : "0.00000", "codigo_barras" : "TECPCH120", "auth_token" : "<GET_VAR:AUTH_TOKEN>" }\n	#Output { "status" : "ok" }\n#endTest\n\n#beginTest\n	#Desc Nuevo producto de importacion de AdminPAQ\n	#Method POST api/producto/nuevo\n	#Input { "codigo_producto" : "TONCANE20", "metodo_costeo" : "precio", "nombre_producto" : "TONER+CANON+NEGRO+E-20+PARA+PC%2F940", "compra_en_mostrador" : "1", "costo_estandar" : "0.00000", "activo" : "1", "control_de_existencia" : "0", "peso_producto" : "0.00000", "precio" : "0.00000", "codigo_barras" : "TONCANE20", "auth_token" : "<GET_VAR:AUTH_TOKEN>" }\n	#Output { "status" : "ok" }\n#endTest\n\n#beginTest\n	#Desc Nuevo producto de importacion de AdminPAQ\n	#Method POST api/producto/nuevo\n	#Input { "codigo_producto" : "TONHP05A", "metodo_costeo" : "precio", "nombre_producto" : "TONER+HP+LASSERJET+P2035+NEGRO+CE505A", "compra_en_mostrador" : "1", "costo_estandar" : "0.00000", "activo" : "1", "control_de_existencia" : "0", "clasificaciones" : "[\\"2\\"]", "peso_producto" : "0.00000", "precio" : "0.00000", "codigo_barras" : "TONHP05A", "auth_token" : "<GET_VAR:AUTH_TOKEN>" }\n	#Output { "status" : "ok" }\n#endTest\n\n#beginTest\n	#Desc Nuevo producto de importacion de AdminPAQ\n	#Method POST api/producto/nuevo\n	#Input { "codigo_producto" : "TONHP12A", "metodo_costeo" : "precio", "nombre_producto" : "TONER+HP+LASSERJET1015+Q2612A", "compra_en_mostrador" : "1", "costo_estandar" : "700.09000", "activo" : "1", "control_de_existencia" : "0", "clasificaciones" : "[\\"2\\"]", "peso_producto" : "0.00000", "precio" : "1321.50000", "codigo_barras" : "TONHP12A", "auth_token" : "<GET_VAR:AUTH_TOKEN>" }\n	#Output { "status" : "ok" }\n#endTest\n\n#beginTest\n	#Desc Nuevo producto de importacion de AdminPAQ\n	#Method POST api/producto/nuevo\n	#Input { "codigo_producto" : "TONHP540", "metodo_costeo" : "precio", "nombre_producto" : "TONER+HP+CB540A+LASERJET+NEGRO", "compra_en_mostrador" : "1", "costo_estandar" : "0.00000", "activo" : "1", "control_de_existencia" : "0", "clasificaciones" : "[\\"2\\"]", "peso_producto" : "0.00000", "precio" : "0.00000", "codigo_barras" : "TONHP540", "auth_token" : "<GET_VAR:AUTH_TOKEN>" }\n	#Output { "status" : "ok" }\n#endTest\n\n#beginTest\n	#Desc Nuevo producto de importacion de AdminPAQ\n	#Method POST api/producto/nuevo\n	#Input { "codigo_producto" : "TONHP60A", "metodo_costeo" : "costo", "nombre_producto" : "TONER+HP+Q3960A+LASSERJET+2550+NEGRO", "compra_en_mostrador" : "1", "costo_estandar" : "796.10000", "activo" : "1", "control_de_existencia" : "0", "clasificaciones" : "[\\"2\\"]", "peso_producto" : "0.00000", "precio" : "0.00000", "codigo_barras" : "TONHP60A", "auth_token" : "<GET_VAR:AUTH_TOKEN>" }\n	#Output { "status" : "ok" }\n#endTest\n\n#beginTest\n	#Desc Nuevo producto de importacion de AdminPAQ\n	#Method POST api/producto/nuevo\n	#Input { "codigo_producto" : "TONHPQ2610A", "metodo_costeo" : "precio", "nombre_producto" : "TONER+HP+SMART+LASERT+2300+Q2610A", "compra_en_mostrador" : "1", "costo_estandar" : "0.00000", "activo" : "1", "control_de_existencia" : "0", "clasificaciones" : "[\\"2\\"]", "peso_producto" : "0.00000", "precio" : "0.00000", "codigo_barras" : "TONHPQ2610A", "auth_token" : "<GET_VAR:AUTH_TOKEN>" }\n	#Output { "status" : "ok" }\n#endTest\n\n#beginTest\n	#Desc Nuevo producto de importacion de AdminPAQ\n	#Method POST api/producto/nuevo\n	#Input { "codigo_producto" : "TONSAM108", "metodo_costeo" : "precio", "nombre_producto" : "TONER+SAMSUNG+108+P%2FML1640%2FML-2240", "compra_en_mostrador" : "1", "costo_estandar" : "0.00000", "activo" : "1", "control_de_existencia" : "0", "clasificaciones" : "[\\"2\\"]", "peso_producto" : "0.00000", "precio" : "1070.24000", "codigo_barras" : "TONSAM108", "auth_token" : "<GET_VAR:AUTH_TOKEN>" }\n	#Output { "status" : "ok" }\n#endTest\n\n#beginTest\n	#Desc Nuevo producto de importacion de AdminPAQ\n	#Method POST api/producto/nuevo\n	#Input { "codigo_producto" : "TONSAM310", "metodo_costeo" : "precio", "nombre_producto" : "TONER+SAMSUNG+NEGRO+P%2FCLP310%2C315CLX3170FN", "compra_en_mostrador" : "1", "costo_estandar" : "0.00000", "activo" : "1", "control_de_existencia" : "0", "clasificaciones" : "[\\"2\\"]", "peso_producto" : "0.00000", "precio" : "0.00000", "codigo_barras" : "TONSAM310", "auth_token" : "<GET_VAR:AUTH_TOKEN>" }\n	#Output { "status" : "ok" }\n#endTest\n\n#beginTest\n	#Desc Nuevo producto de importacion de AdminPAQ\n	#Method POST api/producto/nuevo\n	#Input { "codigo_producto" : "TONSAM4200", "metodo_costeo" : "precio", "nombre_producto" : "TONER+SAMSUNG+PARA+SCX4200+300", "compra_en_mostrador" : "1", "costo_estandar" : "0.00000", "activo" : "1", "control_de_existencia" : "0", "clasificaciones" : "[\\"2\\"]", "peso_producto" : "0.00000", "precio" : "1305.65000", "codigo_barras" : "TONSAM4200", "auth_token" : "<GET_VAR:AUTH_TOKEN>" }\n	#Output { "status" : "ok" }\n#endTest\n\n#beginTest\n	#Desc Nuevo producto de importacion de AdminPAQ\n	#Method POST api/producto/nuevo\n	#Input { "codigo_producto" : "TONXER010", "metodo_costeo" : "precio", "nombre_producto" : "TONER+XEROX+PHASER+3200MFP+113R00730", "compra_en_mostrador" : "1", "costo_estandar" : "70.95000", "activo" : "1", "control_de_existencia" : "0", "clasificaciones" : "[\\"2\\"]", "peso_producto" : "0.00000", "precio" : "1642.17000", "codigo_barras" : "TONXER010", "auth_token" : "<GET_VAR:AUTH_TOKEN>" }\n	#Output { "status" : "ok" }\n#endTest\n\n#beginTest\n	#Desc Nuevo producto de importacion de AdminPAQ\n	#Method POST api/producto/nuevo\n	#Input { "codigo_producto" : "TONXER020", "metodo_costeo" : "precio", "nombre_producto" : "TAMBOR+XEROX+WC5020+27%2C000", "compra_en_mostrador" : "1", "costo_estandar" : "0.00000", "activo" : "1", "control_de_existencia" : "0", "clasificaciones" : "[\\"2\\"]", "peso_producto" : "0.00000", "precio" : "2633.12000", "codigo_barras" : "TONXER020", "auth_token" : "<GET_VAR:AUTH_TOKEN>" }\n	#Output { "status" : "ok" }\n#endTest\n\n#beginTest\n	#Desc Nuevo producto de importacion de AdminPAQ\n	#Method POST api/producto/nuevo\n	#Input { "codigo_producto" : "TRAFAI010", "metodo_costeo" : "precio", "nombre_producto" : "TRANSMISOR+FAICO+DE+FM+PARA+AUTOMOVIL%2CCON++CONTROL+REMOTO", "compra_en_mostrador" : "1", "costo_estandar" : "0.00000", "activo" : "1", "control_de_existencia" : "0", "clasificaciones" : "[\\"1\\"]", "peso_producto" : "0.00000", "precio" : "355.51000", "codigo_barras" : "TRAFAI010", "auth_token" : "<GET_VAR:AUTH_TOKEN>" }\n	#Output { "status" : "ok" }\n#endTest\n\n#beginTest\n	#Desc Nuevo producto de importacion de AdminPAQ\n	#Method POST api/producto/nuevo\n	#Input { "codigo_producto" : "TT1004010182", "metodo_costeo" : "precio", "nombre_producto" : "TARJETA+DE+TELEVISION+Y+RADIO%2F+ZOGIS+CAPTURA+USB", "compra_en_mostrador" : "1", "costo_estandar" : "0.00000", "activo" : "1", "control_de_existencia" : "0", "clasificaciones" : "[\\"8\\"]", "peso_producto" : "0.00000", "precio" : "337.51000", "codigo_barras" : "TT1004010182", "auth_token" : "<GET_VAR:AUTH_TOKEN>" }\n	#Output { "status" : "ok" }\n#endTest\n\n#beginTest\n	#Desc Nuevo producto de importacion de AdminPAQ\n	#Method POST api/producto/nuevo\n	#Input { "codigo_producto" : "TVSONY", "metodo_costeo" : "precio", "nombre_producto" : "TV+32+HD+LCG+BRAVOA", "compra_en_mostrador" : "1", "costo_estandar" : "0.00000", "activo" : "1", "control_de_existencia" : "0", "peso_producto" : "0.00000", "precio" : "6576.57000", "codigo_barras" : "TVSONY", "auth_token" : "<GET_VAR:AUTH_TOKEN>" }\n	#Output { "status" : "ok" }\n#endTest\n\n#beginTest\n	#Desc Nuevo producto de importacion de AdminPAQ\n	#Method POST api/producto/nuevo\n	#Input { "codigo_producto" : "TVTADV010", "metodo_costeo" : "precio", "nombre_producto" : "TARJETA+TV+TUNNER+ADVANTEK+PCI", "compra_en_mostrador" : "1", "costo_estandar" : "0.00000", "activo" : "1", "control_de_existencia" : "0", "clasificaciones" : "[\\"4\\"]", "peso_producto" : "0.00000", "precio" : "466.42000", "codigo_barras" : "TVTADV010", "auth_token" : "<GET_VAR:AUTH_TOKEN>" }\n	#Output { "status" : "ok" }\n#endTest\n\n#beginTest\n	#Desc Nuevo producto de importacion de AdminPAQ\n	#Method POST api/producto/nuevo\n	#Input { "codigo_producto" : "UEGA027", "metodo_costeo" : "precio", "nombre_producto" : "CONTROL+ACTECK+AGJ-3350", "compra_en_mostrador" : "1", "costo_estandar" : "0.00000", "activo" : "1", "control_de_existencia" : "4", "clasificaciones" : "[\\"1\\"]", "peso_producto" : "0.00000", "precio" : "156.40000", "codigo_barras" : "UEGA027", "auth_token" : "<GET_VAR:AUTH_TOKEN>" }\n	#Output { "status" : "ok" }\n#endTest\n\n#beginTest\n	#Desc Nuevo producto de importacion de AdminPAQ\n	#Method POST api/producto/nuevo\n	#Input { "codigo_producto" : "UEGA028", "metodo_costeo" : "precio", "nombre_producto" : "CONTROL+ACTECK+AGJ-3200+XBOX+%2BUSB+CRYSTAL+2+EN+1", "compra_en_mostrador" : "1", "costo_estandar" : "0.00000", "activo" : "1", "control_de_existencia" : "4", "clasificaciones" : "[\\"1\\"]", "peso_producto" : "0.00000", "precio" : "228.80000", "codigo_barras" : "UEGA028", "auth_token" : "<GET_VAR:AUTH_TOKEN>" }\n	#Output { "status" : "ok" }\n#endTest\n\n#beginTest\n	#Desc Nuevo producto de importacion de AdminPAQ\n	#Method POST api/producto/nuevo\n	#Input { "codigo_producto" : "UEMO078", "metodo_costeo" : "precio", "nombre_producto" : "MOUSE+ACTECK+AM-950+USB", "compra_en_mostrador" : "1", "costo_estandar" : "0.00000", "activo" : "1", "control_de_existencia" : "4", "clasificaciones" : "[\\"1\\"]", "peso_producto" : "0.00000", "precio" : "59.49000", "codigo_barras" : "UEMO078", "auth_token" : "<GET_VAR:AUTH_TOKEN>" }\n	#Output { "status" : "ok" }\n#endTest\n\n#beginTest\n	#Desc Nuevo producto de importacion de AdminPAQ\n	#Method POST api/producto/nuevo\n	#Input { "codigo_producto" : "UEMO138", "metodo_costeo" : "precio", "nombre_producto" : "MINI+MOUSE+ACTECK+AM-360+RETRACTIL", "compra_en_mostrador" : "1", "costo_estandar" : "0.00000", "activo" : "1", "control_de_existencia" : "4", "clasificaciones" : "[\\"1\\"]", "peso_producto" : "0.00000", "precio" : "73.79000", "codigo_barras" : "UEMO138", "auth_token" : "<GET_VAR:AUTH_TOKEN>" }\n	#Output { "status" : "ok" }\n#endTest\n\n#beginTest\n	#Desc Nuevo producto de importacion de AdminPAQ\n	#Method POST api/producto/nuevo\n	#Input { "codigo_producto" : "UETE162", "metodo_costeo" : "precio", "nombre_producto" : "TECLADO+%2B+MOUSE+ACTECK+AK2-2300", "compra_en_mostrador" : "1", "costo_estandar" : "0.00000", "activo" : "1", "control_de_existencia" : "4", "clasificaciones" : "[\\"1\\"]", "peso_producto" : "0.00000", "precio" : "104.96000", "codigo_barras" : "UETE162", "auth_token" : "<GET_VAR:AUTH_TOKEN>" }\n	#Output { "status" : "ok" }\n#endTest\n\n#beginTest\n	#Desc Nuevo producto de importacion de AdminPAQ\n	#Method POST api/producto/nuevo\n	#Input { "codigo_producto" : "UETE163", "metodo_costeo" : "precio", "nombre_producto" : "TECLADO+ACTECK+AT-2800+PS2+NEGRO", "compra_en_mostrador" : "1", "costo_estandar" : "0.00000", "activo" : "1", "control_de_existencia" : "4", "clasificaciones" : "[\\"1\\"]", "peso_producto" : "0.00000", "precio" : "68.61000", "codigo_barras" : "UETE163", "auth_token" : "<GET_VAR:AUTH_TOKEN>" }\n	#Output { "status" : "ok" }\n#endTest\n\n#beginTest\n	#Desc Nuevo producto de importacion de AdminPAQ\n	#Method POST api/producto/nuevo\n	#Input { "codigo_producto" : "UETE164", "metodo_costeo" : "precio", "nombre_producto" : "TECLADO+ACTECK+AT-3200+PS2", "compra_en_mostrador" : "1", "costo_estandar" : "0.00000", "activo" : "1", "control_de_existencia" : "4", "clasificaciones" : "[\\"1\\"]", "peso_producto" : "0.00000", "precio" : "73.12000", "codigo_barras" : "UETE164", "auth_token" : "<GET_VAR:AUTH_TOKEN>" }\n	#Output { "status" : "ok" }\n#endTest\n\n#beginTest\n	#Desc Nuevo producto de importacion de AdminPAQ\n	#Method POST api/producto/nuevo\n	#Input { "codigo_producto" : "UETE171", "metodo_costeo" : "precio", "nombre_producto" : "WEB+CAM+ACTECK+ATW-750", "compra_en_mostrador" : "1", "costo_estandar" : "0.00000", "activo" : "1", "control_de_existencia" : "4", "clasificaciones" : "[\\"1\\"]", "peso_producto" : "0.00000", "precio" : "127.72000", "codigo_barras" : "UETE171", "auth_token" : "<GET_VAR:AUTH_TOKEN>" }\n	#Output { "status" : "ok" }\n#endTest\n\n#beginTest\n	#Desc Nuevo producto de importacion de AdminPAQ\n	#Method POST api/producto/nuevo\n	#Input { "codigo_producto" : "UETE172", "metodo_costeo" : "precio", "nombre_producto" : "WEB+CAM+ACTECK+ATW-800", "compra_en_mostrador" : "1", "costo_estandar" : "0.00000", "activo" : "1", "control_de_existencia" : "4", "clasificaciones" : "[\\"1\\"]", "peso_producto" : "0.00000", "precio" : "174.30000", "codigo_barras" : "UETE172", "auth_token" : "<GET_VAR:AUTH_TOKEN>" }\n	#Output { "status" : "ok" }\n#endTest\n\n#beginTest\n	#Desc Nuevo producto de importacion de AdminPAQ\n	#Method POST api/producto/nuevo\n	#Input { "codigo_producto" : "UETE179", "metodo_costeo" : "precio", "nombre_producto" : "TECLADO+ACTECK+AT-3000+MULTIMEDIA+PS2", "compra_en_mostrador" : "1", "costo_estandar" : "0.00000", "activo" : "1", "control_de_existencia" : "4", "clasificaciones" : "[\\"1\\"]", "peso_producto" : "0.00000", "precio" : "71.88000", "codigo_barras" : "UETE179", "auth_token" : "<GET_VAR:AUTH_TOKEN>" }\n	#Output { "status" : "ok" }\n#endTest\n\n#beginTest\n	#Desc Nuevo producto de importacion de AdminPAQ\n	#Method POST api/producto/nuevo\n	#Input { "codigo_producto" : "USB001", "metodo_costeo" : "precio", "nombre_producto" : "MEMORIA+USB+4+GB+FIGURAS", "compra_en_mostrador" : "1", "costo_estandar" : "0.00000", "activo" : "1", "control_de_existencia" : "0", "clasificaciones" : "[\\"1\\"]", "peso_producto" : "0.00000", "precio" : "206.20000", "codigo_barras" : "USB001", "auth_token" : "<GET_VAR:AUTH_TOKEN>" }\n	#Output { "status" : "ok" }\n#endTest\n\n#beginTest\n	#Desc Nuevo producto de importacion de AdminPAQ\n	#Method POST api/producto/nuevo\n	#Input { "codigo_producto" : "VELA660719GJ2", "metodo_costeo" : "precio", "nombre_producto" : "VERAZA+LOPEZ+ALONSO", "compra_en_mostrador" : "1", "costo_estandar" : "0.00000", "activo" : "1", "control_de_existencia" : "0", "peso_producto" : "0.00000", "precio" : "0.00000", "codigo_barras" : "VELA660719GJ2", "auth_token" : "<GET_VAR:AUTH_TOKEN>" }\n	#Output { "status" : "ok" }\n#endTest\n\n#beginTest\n	#Desc Nuevo producto de importacion de AdminPAQ\n	#Method POST api/producto/nuevo\n	#Input { "codigo_producto" : "VENCOM010", "metodo_costeo" : "precio", "nombre_producto" : "VENTILADOR+COOLER+MASTER+V6+CPU+RR+V6SV-22PR+R1", "compra_en_mostrador" : "1", "costo_estandar" : "0.00000", "activo" : "1", "control_de_existencia" : "0", "clasificaciones" : "[\\"4\\"]", "peso_producto" : "0.00000", "precio" : "666.09000", "codigo_barras" : "VENCOM010", "auth_token" : "<GET_VAR:AUTH_TOKEN>" }\n	#Output { "status" : "ok" }\n#endTest\n\n#beginTest\n	#Desc Nuevo producto de importacion de AdminPAQ\n	#Method POST api/producto/nuevo\n	#Input { "codigo_producto" : "VENGEN010", "metodo_costeo" : "precio", "nombre_producto" : "BASE+GENERICA+PARA+LAPTOP+KLTG-878+CON+2+HUB+USB+NEGRA", "compra_en_mostrador" : "1", "costo_estandar" : "0.00000", "activo" : "1", "control_de_existencia" : "0", "clasificaciones" : "[\\"1\\"]", "peso_producto" : "0.00000", "precio" : "74.29000", "codigo_barras" : "VENGEN010", "auth_token" : "<GET_VAR:AUTH_TOKEN>" }\n	#Output { "status" : "ok" }\n#endTest\n\n#beginTest\n	#Desc Nuevo producto de importacion de AdminPAQ\n	#Method POST api/producto/nuevo\n	#Input { "codigo_producto" : "VIWN001", "metodo_costeo" : "precio", "nombre_producto" : "WEB+CAM+ACTECK+ATW-820", "compra_en_mostrador" : "1", "costo_estandar" : "0.00000", "activo" : "1", "control_de_existencia" : "4", "clasificaciones" : "[\\"1\\"]", "peso_producto" : "0.00000", "precio" : "193.19000", "codigo_barras" : "VIWN001", "auth_token" : "<GET_VAR:AUTH_TOKEN>" }\n	#Output { "status" : "ok" }\n#endTest\n\n#beginTest\n	#Desc Nuevo servicio de importacion de AdminPAQ\n	#Method GET api/servicios/nuevo\n	#Input { "codigo_servicio" : "VM15", "metodo_costeo" : "precio", "nombre_servicio" : "VENTAS+DE+MOSTRADOR", "compra_en_mostrador" : "1", "costo_estandar" : "0.00000", "activo" : "1", "control_de_existencia" : "0", "precio" : "0.00000", "auth_token" : "<GET_VAR:AUTH_TOKEN>" }\n	#Output { "status" : "ok" }\n#endTest\n\n#beginTest\n	#Desc Nuevo servicio de importacion de AdminPAQ\n	#Method GET api/servicios/nuevo\n	#Input { "codigo_servicio" : "VM16", "metodo_costeo" : "precio", "nombre_servicio" : "VENTAS+DE+MOSTRADOR+AL+16", "compra_en_mostrador" : "1", "costo_estandar" : "0.00000", "activo" : "1", "control_de_existencia" : "0", "precio" : "0.00000", "auth_token" : "<GET_VAR:AUTH_TOKEN>" }\n	#Output { "status" : "ok" }\n#endTest\n\n#beginTest\n	#Desc Nuevo producto de importacion de AdminPAQ\n	#Method POST api/producto/nuevo\n	#Input { "codigo_producto" : "WD1600AAJB00J3A0", "metodo_costeo" : "precio", "nombre_producto" : "DISCO+DURO+WESTERN+DIGITAL+160GB+IDE", "compra_en_mostrador" : "1", "costo_estandar" : "0.00000", "activo" : "1", "control_de_existencia" : "0", "clasificaciones" : "[\\"4\\"]", "peso_producto" : "0.00000", "precio" : "745.30000", "codigo_barras" : "WD1600AAJB00J3A0", "auth_token" : "<GET_VAR:AUTH_TOKEN>" }\n	#Output { "status" : "ok" }\n#endTest\n\n#beginTest\n	#Desc Nuevo producto de importacion de AdminPAQ\n	#Method POST api/producto/nuevo\n	#Input { "codigo_producto" : "WD5000AAJS00YFA0", "metodo_costeo" : "precio", "nombre_producto" : "DISCO+DURO+WESTERN+DIGITAL+500G+SATA", "compra_en_mostrador" : "1", "costo_estandar" : "0.00000", "activo" : "1", "control_de_existencia" : "0", "clasificaciones" : "[\\"4\\"]", "peso_producto" : "0.00000", "precio" : "651.67000", "codigo_barras" : "WD5000AAJS00YFA0", "auth_token" : "<GET_VAR:AUTH_TOKEN>" }\n	#Output { "status" : "ok" }\n#endTest\n\n#beginTest\n	#Desc Nuevo producto de importacion de AdminPAQ\n	#Method POST api/producto/nuevo\n	#Input { "codigo_producto" : "WD5000BEVT24AORT0", "metodo_costeo" : "precio", "nombre_producto" : "DISCO+DURO+WESTERN+DIGITAL+500GB+SATA++P%2FNOTEBOOK", "compra_en_mostrador" : "1", "costo_estandar" : "0.00000", "activo" : "1", "control_de_existencia" : "0", "clasificaciones" : "[\\"4\\"]", "peso_producto" : "0.00000", "precio" : "850.49000", "codigo_barras" : "WD5000BEVT24AORT0", "auth_token" : "<GET_VAR:AUTH_TOKEN>" }\n	#Output { "status" : "ok" }\n#endTest\n\n#beginTest\n	#Desc Nuevo producto de importacion de AdminPAQ\n	#Method POST api/producto/nuevo\n	#Input { "codigo_producto" : "WEB100", "metodo_costeo" : "precio", "nombre_producto" : "WEBCAM+VORAGO+100", "compra_en_mostrador" : "1", "costo_estandar" : "0.00000", "activo" : "1", "control_de_existencia" : "0", "clasificaciones" : "[\\"1\\"]", "peso_producto" : "0.00000", "precio" : "107.21000", "codigo_barras" : "WEB100", "auth_token" : "<GET_VAR:AUTH_TOKEN>" }\n	#Output { "status" : "ok" }\n#endTest\n', 'Pruebas importacion de AdminPAQ', 'Pruebas para la importacion de adminPAQ', 0);
INSERT INTO `httptesting_paquete_de_pruebas` (`id_paquete_de_pruebas`, `id_proyecto`, `pruebas`, `nombre`, `descripcion`, `locked`) VALUES
(3, 1, '#beginTest\n	#Desc Vaciar la BD\n	#Method POST api/pos/bd/drop\n	#Input {  }\n	#Output {"status":"ok" }\n#endTest\n\n#beginTest\n	#Desc Crear un nuevo rol correctamente sin inciar sesion\n	#Method POST api/personal/rol/nuevo\n	#Input { "nombre" : "ROL1", "descripcion" : "DESC1" }\n	#Output {"status":"error" }\n#endTest\n\n \n#beginTest\n	#Desc Iniciar sesion con credenciales invalidas\n	#Method POST api/sesion/iniciar\n	#Input { "usuario" : "1", "password" : "123456"  }\n	#Output {"login_succesful":false,"status":"ok" }\n#endTest\n\n\n\n#beginTest\n	#Desc Iniciar sesion con credenciales correctas\n	#Method POST api/sesion/iniciar\n	#Input { "usuario" : "1", "password" : "123"  }\n	#Output {"status":"ok", "auth_token" : "<SET_VAR:AUTH_TOKEN>"}\n#endTest\n\n#beginTest\n	#Desc Crear un nuevo rol correctamente sin inciar sesion\n	#Method POST api/personal/rol/nuevo\n	#Input { "nombre" : "ROLxx1", "descripcion" : "DESC1" , "auth_token" : "<GET_VAR:AUTH_TOKEN>"}\n	#Output {"status":"ok" }\n#endTest\n\n\n\n\n#beginTest\n	#Desc Crear un nuevo rol con un nombre vacio\n	#Method POST api/personal/rol/nuevo\n	#Input { "nombre" : "", "descripcion" : "descripcion" , "auth_token" : "<GET_VAR:AUTH_TOKEN>" }\n	#Output {"status":"error" }\n#endTest\n\n#beginTest\n	#Desc Crear un nuevo rol correctamente\n	#Method POST api/personal/rol/nuevo\n	#Input { "nombre" : "ROL1", "descripcion" : "DESC1", "auth_token" : "<GET_VAR:AUTH_TOKEN>" }\n	#Output {"status":"ok", "id_rol" : "<SET_VAR:ID_ROL>" }\n#endTest\n\n\n#beginTest\n	#Desc Crear un nuevo rol correctamente con el mismo nombre\n	#Method POST api/personal/rol/nuevo\n	#Input { "nombre" : "ROL1", "descripcion" : "descripcion" , "auth_token" : "<GET_VAR:AUTH_TOKEN>" }\n	#Output {"status":"error" }\n#endTest\n\n#beginTest\n	#Desc Crear un nuevo rol correctamente con salario\n	#Method POST api/personal/rol/nuevo\n	#Input { "nombre" : "ROL2", "descripcion" : "descripcion", "salario" : 1, "auth_token" : "<GET_VAR:AUTH_TOKEN>" }\n	#Output {"status": "ok" , "id_rol" : "<SET_VAR:ID_ROL2>"}\n#endTest\n\n#beginTest\n	#Desc Crear un nuevo rol correctamente con salario negativo\n	#Method POST api/personal/rol/nuevo\n	#Input { "nombre" : "ROL4", "descripcion" : "descripcion", "salario" : -12, "auth_token" : "<GET_VAR:AUTH_TOKEN>" }\n	#Output {"status":"error" }\n#endTest\n\n#beginTest\n	#Desc Crear un nuevo rol correctamente con descripcion vacia\n	#Method POST api/personal/rol/nuevo\n	#Input { "nombre" : "ROL5", "descripcion" : "" , "auth_token" : "<GET_VAR:AUTH_TOKEN>"}\n	#Output {"status":"error" }\n#endTest\n\n\n#beginTest\n	#Desc Crear un nuevo rol correctamente con nombre muy largo\n	#Method POST api/personal/rol/nuevo\n	#Input { "nombre" : "12345678901234567890123456789012345678901234567890", "descripcion" : "descripcion" , "auth_token" : "<GET_VAR:AUTH_TOKEN>" }\n	#Output {"status":"error" }\n#endTest\n\n\n\n#beginTest\n	#Desc Eliminar un id_rol negativo\n	#Method POST api/personal/rol/eliminar\n	#Input { "id_rol" : -1 , "auth_token" : "<GET_VAR:AUTH_TOKEN>" }\n	#Output {"status":"error"  }\n#endTest\n\n# beginTest\n#	#Desc Listar los roles que hemos creado\n#	#Method GET api/personal/rol/lista\n#	#Input { "auth_token" : "<GET_VAR:AUTH_TOKEN>" }\n#	#Output { "status":"ok", "numero_roles" : 2  }\n# endTest\n\n\n## beginTest\n#	#Desc elimnar un rol creado\n#	#Method POST api/personal/rol/eliminar\n#	#Input { "id_rol" : "<GET_VAR:ID_ROL>"  , "auth_token" : "<GET_VAR:AUTH_TOKEN>"}\n#	#Output {"status":"ok"  }\n## endTest\n\n\n#beginTest\n	#Desc Crear nuevo usuario\n	#Method POST api/personal/usuario/nuevo\n	#Input { "codigo_usuario" : "USR1", "nombre" : "USR1", "id_rol" : "<GET_VAR:ID_ROL2>", "password" : "12345678", "auth_token" : "<GET_VAR:AUTH_TOKEN>"}\n	#Output { "status":"ok"  }\n#endTest\n\n#beginTest\n	#Desc Crear nuevo usuario con el mismo codigo de usuario\n	#Method POST api/personal/usuario/nuevo\n	#Input { "codigo_usuario" : "USR1", "nombre" : "USR1", "id_rol" : "<GET_VAR:ID_ROL2>", "password" : "12345", "auth_token" : "<GET_VAR:AUTH_TOKEN>"}\n	#Output { "status": "error"  }\n#endTest\n\n\n\n#beginTest\n	#Desc Crear nuevo usuario con el codigo de usuario igual que el anterior pero con espacios en blanco\n	#Method POST api/personal/usuario/nuevo\n	#Input { "codigo_usuario" : "USR1  ", "nombre" : "USR1", "id_rol" : "<GET_VAR:ID_ROL2>", "password" : "12345", "auth_token" : "<GET_VAR:AUTH_TOKEN>"}\n	#Output { "status": "error"  }\n#endTest\n\n\n#beginTest\n	#Desc Crear nuevo usuario con el codigo de usuario vacio\n	#Method POST api/personal/usuario/nuevo\n	#Input { "codigo_usuario" : "", "nombre" : "USR1", "id_rol" : "<GET_VAR:ID_ROL2>", "password" : "12345", "auth_token" : "<GET_VAR:AUTH_TOKEN>"}\n	#Output { "status": "error"  }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo usuario con un rol que no existe\n	#Method POST api/personal/usuario/nuevo\n	#Input { "codigo_usuario" : "USR2", "nombre" : "USR1", "id_rol" : "-1", "password" : "12345", "auth_token" : "<GET_VAR:AUTH_TOKEN>"}\n	#Output { "status": "error"  }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo usuario con el nombre vacio\n	#Method POST api/personal/usuario/nuevo\n	#Input { "codigo_usuario" : "USR3", "nombre" : "", "id_rol" : "<GET_VAR:ID_ROL2>", "password" : "12345", "auth_token" : "<GET_VAR:AUTH_TOKEN>"}\n	#Output { "status": "error"  }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo usuario con el password menor a 4 caracteres\n	#Method POST api/personal/usuario/nuevo\n	#Input { "codigo_usuario" : "USR3", "nombre" : "NOM2", "id_rol" : "<GET_VAR:ID_ROL2>", "password" : "1", "auth_token" : "<GET_VAR:AUTH_TOKEN>"}\n	#Output { "status": "error"  }\n#endTest\n\n\n#beginTest\n	#Desc Nuevo usuario con el password igual al codigo de usuario\n	#Method POST api/personal/usuario/nuevo\n	#Input { "codigo_usuario" : "USR345", "nombre" : "NOM2", "id_rol" : "<GET_VAR:ID_ROL2>", "password" : "USR345", "auth_token" : "<GET_VAR:AUTH_TOKEN>"}\n	#Output { "status": "error"  }\n#endTest\n\n\n#beginTest\n	#Desc Crear una empresa\n	#Method POST api/empresa/nuevo\n	#Input {    "razon_social": "Mi Empresa S.A de C.V",    "rfc": "ELRU7904126A3",    "curp": "ELRU790412MGTNRN12",    "representante_legal": "JUAN MANUEL RICANO CASTILLO",        "calle": "Las Fuentes",        "numero_exterior": "203",        "colonia": "Laureles",        "codigo_postal": "38020",        "telefono1": "6189034",        "telefono2": "6189035",    "ciudad": "329" , "auth_token" : "<GET_VAR:AUTH_TOKEN>"}\n	#Output { "status" : "ok",  "id_empresa" : "<SET_VAR:ID_EMP1>"  }\n#endTest\n\n\n#beginTest\n	#Desc Nueva sucursal\n	#Method POST api/sucursal/nueva\n	#Input { "id_ciudad" :"334" , "colonia": "arboledas", "activo": 1, "saldo_a_favor" :  "0", "id_empresa" : "<GET_VAR:ID_EMP1>",  "descripcion"     : "la sucursal de almacen",  "razon_social"    : "sucursal sur",  "rfc" : "ZEFA980121JD3E",   "calle"           : "Turqueza",  "numero_exterior" : "112B",  "clonia"          : "Arboledas",  "municipio"       : "329",  "codigo_postal"   : "38040",   "telefono1"       : "4353465434" , "auth_token" : "<GET_VAR:AUTH_TOKEN>"}\n	#Output { "status" : "ok", "id_sucursal" : "<SET_VAR:ID_SUC1>" }\n#endTest\n\n\n\n\n#beginTest\n	#Desc Nuevo tipo de almacen\n	#Method POST api/sucursal/tipo_almacen/nuevo\n	#Input { "descripcion" : "almacen unico" , "auth_token" : "<GET_VAR:AUTH_TOKEN>" }\n	#Output { "status" : "ok", "id_tipo_almacen" : "<SET_VAR:TIPO_ALMACEN1>"}\n#endTest\n\n\n#beginTest\n	#Desc Nuevo almacen\n	#Method POST api/sucursal/almacen/nuevo\n	#Input { "id_sucursal"  : "<GET_VAR:ID_SUC1>", "id_empresa"  : "<GET_VAR:ID_EMP1>",  "id_tipo_almacen": "<GET_VAR:TIPO_ALMACEN1>", "nombre"       : "almacen sur",   "descripcion"  : "Almacen para elotes grandes", "auth_token" : "<GET_VAR:AUTH_TOKEN>" }\n	#Output { "status" : "ok", "id_almacen" : "<SET_VAR:ID_ALMACEN1>" }\n#endTest\n\n\n\n#beginTest\n	#Desc Nuevo producto\n	#Method POST api/producto/nuevo\n	#Input { "activo" : "1",	"nombre_producto" :	"manzana roja", "codigo_producto" : "manzana" ,   "metodo_costeo" : "precio", "precio" : 15.00 , "costo_estandar" : 10, "margen_utilidad" :	0.2, "compra_en_mostrador" : false, "auth_token" : "<GET_VAR:AUTH_TOKEN>" }\n	#Output { "status" : "ok", "id_producto" : "<SET_VAR:ID_PROD1>" }\n#endTest\n\n\n\n#beginTest\n	#Desc Nueva entrada al almacen de un producto que NO es de esa empresa\n	#Method POST api/sucursal/almacen/entrada\n	#Input { "auth_token" : "<GET_VAR:AUTH_TOKEN>",  "id_almacen" : "<GET_VAR:ID_ALMACEN1>", "motivo" : "testing", "productos" : "[{ "id_producto" : "<SET_VAR:ID_PROD1>", "cantidad" : 150, "id_unidadd" : 1 }]" }\n	#Output { "status" : "error"}\n#endTest\n\n\n\n\n\n#beginTest\n	#Desc Nuevo producto\n	#Method POST api/producto/nuevo\n	#Input { "auth_token" : "<GET_VAR:AUTH_TOKEN>", "activo" : "1",	"nombre_producto" :	"manzana verde", "codigo_producto" : "manzanav" ,   "metodo_costeo" : "precio", "precio" : 15.00 , "costo_estandar" : 10, "margen_utilidad" :	0.1, "compra_en_mostrador" : false, "id_empresas" : "{[{"id_empresa" : "<GET_VAR:ID_EMP1>", "precio_utilidad": 1, "es_margen_utilidad" : false }]}" }\n	#Output { "status" : "ok", "id_producto" : "<SET_VAR:ID_PROD2>" }\n#endTest\n\n\n\n#beginTest\n	#Desc Nueva entrada al almacen de un producto que si es de esa empresa\n	#Method POST api/sucursal/almacen/entrada\n	#Input { "auth_token" : "<GET_VAR:AUTH_TOKEN>", "id_almacen" : "<GET_VAR:ID_ALMACEN1>", "motivo" : "testing", "productos" : "[{ "id_producto" : "<SET_VAR:ID_PROD2>", "cantidad" : 150, "id_unidadd" : 1 }]" }\n	#Output { "status" : "error"}\n#endTest\n\n#beginTest\n	#Desc crear cliente\n	#Method POST api/sucursal/almacen/entrada\n	#Input { "auth_token" : "<GET_VAR:AUTH_TOKEN>", "razon_social" : "alan", "clasificacion_cliente" : "alanboyys", "codigo_cliente" : "alanboy", "password" : 123456 }\n	#Output { "status" : "ok"}\n#endTest\n', 'otras', 'otras pruebas viejas', 1);

-- --------------------------------------------------------

--
-- Estructura de tabla para la tabla `httptesting_ruta`
--

CREATE TABLE IF NOT EXISTS `httptesting_ruta` (
  `id_ruta` int(11) NOT NULL AUTO_INCREMENT,
  `id_proyecto` int(11) NOT NULL COMMENT 'Id del proyecto al qe pertenece esta ruta',
  `nombre` varchar(100) NOT NULL COMMENT 'Nombre de la ruta',
  `ruta` varchar(100) NOT NULL COMMENT 'Ruta explicita',
  PRIMARY KEY (`id_ruta`),
  KEY `id_proyecto` (`id_proyecto`)
) ENGINE=InnoDB  DEFAULT CHARSET=utf8 AUTO_INCREMENT=18 ;

--
-- Volcar la base de datos para la tabla `httptesting_ruta`
--

INSERT INTO `httptesting_ruta` (`id_ruta`, `id_proyecto`, `nombre`, `ruta`) VALUES
(1, 1, 'servidor de caffeina', 'http://pos15.labs.caffeina.mx/front_ends/123/'),
(16, 1, 'Andres', 'http://192.168.1.104/pos/branches/v1_5/www/front_ends/123/'),
(17, 1, 'Alan', 'http://192.168.1.10/caffeina/pos/branches/v1_5/www/front_ends/123/');

-- --------------------------------------------------------

--
-- Estructura de tabla para la tabla `metodo`
--

CREATE TABLE IF NOT EXISTS `metodo` (
  `id_metodo` int(11) NOT NULL AUTO_INCREMENT,
  `id_clasificacion` int(11) NOT NULL,
  `nombre` varchar(100) NOT NULL,
  `tipo` varchar(10) NOT NULL,
  `sesion_valida` tinyint(1) NOT NULL,
  `grupo` int(11) NOT NULL,
  `ejemplo_peticion` text NOT NULL,
  `ejemplo_respuesta` text NOT NULL,
  `descripcion` text NOT NULL,
  `subtitulo` varchar(100) NOT NULL,
  `regresa_html` tinyint(1) NOT NULL,
  PRIMARY KEY (`id_metodo`),
  KEY `id_clasificacion` (`id_clasificacion`)
) ENGINE=InnoDB  DEFAULT CHARSET=utf8 AUTO_INCREMENT=317 ;

--
-- Volcar la base de datos para la tabla `metodo`
--

INSERT INTO `metodo` (`id_metodo`, `id_clasificacion`, `nombre`, `tipo`, `sesion_valida`, `grupo`, `ejemplo_peticion`, `ejemplo_respuesta`, `descripcion`, `subtitulo`, `regresa_html`) VALUES
(15, 1, 'api/sesion/iniciar', 'POST', 0, 5, '{\r\n      "usuario" : "123",\r\n      "password": "abcde",\r\n      "request_token": true\r\n}', '{\r\n      "status” : "ok,\r\n      "login_succesful” : true,\r\n      "siguiente_url”: "clientes.php”,\r\n      "auth_token”: "912ec803b2ce49e4a541068d495ab570”\r\n}', 'Valida las credenciales de un usuario. Este método no necesita de ningún tipo de autenticación. \r\nSi se detecta un tipo de usuario inferior a admin y no se ha llamado antes a api/sucursal/revisar_sucursal se regresará un 403 Authorization Required y la sesión no se iniciará.<br><br>\r\nSi el usuario que esta intentando iniciar sesion, esta descativado... 403 Authorization Required.\r\n\r\nSi <code>request_token</code> se envia verdadero no se asociara una cookie a esta peticion, sino que se regresara un token que debera ser enviado en cada llamada subsecuente de este cliente. Los tokens expiraran segun la configuracion del sistema.', 'Validar e iniciar una sesion.', 0),
(16, 1, 'api/sesion/cerrar', 'POST', 1, 5, '{\r\n      “auth_token” : “912ec803b2ce49e4a541068d495ab570”\r\n}', '{	\r\n      “success” : true,\r\n      “forward_to”: “../login.php”\r\n}', 'Regresa un url de redireccion según el tipo de usuario.', 'Cerrar la sesion actual.', 0),
(17, 1, 'api/sesion/lista', 'GET', 1, 0, ' ', '{\r\n      “success” : true,\r\n      “en_linea”: [\r\n              {\r\n                      “user_id”                : 1,\r\n                      “group_id”               : 1,\r\n                      “sucursal_id”      : null,\r\n                      “last_seen”          : 1315633908,\r\n                      “last_seen_formatted” : "18 de Agosto del 2011 7:12pm",\r\n                      “ip”                : "200.12.45.1"\r\n              },\r\n              {\r\n                      “user_id”               : 2,\r\n                      “group_id”              : 3,\r\n                      “sucursal_id”        : 1,\r\n                      “last_seen”         : 1315633909,\r\n“last_seen_formatted” : "18 de Agosto del 2011 7:13pm",\r\n                      “ip”                : "200.12.45.1"\r\n              }                \r\n      ]\r\n}', 'Obtener las sesiones activas.', 'Obtener las sesiones activas.', 0),
(18, 2, 'api/empresa/buscar', 'GET', 1, 1, '{\r\n    "activa" : true,\r\n    "start" : 0,\r\n    "limit" : 25,\r\n    "query" : "Compu I",\r\n    "sort" : "nombre"\r\n}', '{\r\n    "success": "ok",\r\n    "numero_de_reseultados": 1,\r\n    "resultados": [\r\n        {\r\n            "activa": true,\r\n            "id_empresa": 1,\r\n            "razon_social": "Mi Empresa S.A de C.V",\r\n            "rfc": "ELRU7904126A3",\r\n            "representante_legal": "JUAN MANUEL RICAÑO CASTILLO",\r\n            "direccion": {\r\n                "tipo": "fiscal",\r\n                "calle": "Las Fuentes",\r\n                "numero_exterior": "203",\r\n                "colonia": "Laureles",\r\n                "codigo_postal": "38020",\r\n                "telefono1": "6189034",\r\n                "telefono2": "6189035",\r\n                "e-mail": "",\r\n                "direccion_web": "miempresa.com",\r\n                "id_ciudad": 334,\r\n                "texto_extra": "El edificio rosa"\r\n            },\r\n            "sucursales": [\r\n                {\r\n                    "activa": true,\r\n                    "id_sucursal": 15,\r\n                    "descripcion": "Sucursal X",\r\n                    "gerente": [\r\n                        {\r\n                            "usuario_id": 234,\r\n                            "nombre": "Andres G."\r\n                        },\r\n                        {\r\n                            "usuario_id": 123,\r\n                            "nombre": "Sandra A."\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}', 'Mostrará todas la empresas en el sistema, así como sus sucursalse y sus gerentes[a] correspondientes. Por default no se mostraran las empresas ni sucursales inactivas. ', 'Lista todas las empresas existentes.', 0),
(19, 2, 'api/empresa/nuevo', 'POST', 1, 1, '{    \r\n    "razon_social": "Mi Empresa S.A de C.V",    \r\n    "rfc": "ELRU7904126A3",    \r\n    "representante_legal": "JUAN MANUEL RICANO CASTILLO",        \r\n    "direccion": [{    "tipo": "fiscal",    "calle": "Francisco I Madero",    "numero_exterior": "1009A",    "numero_interior": 12,    "colonia": "centro",    "codigo_postal": "38000",    "telefono1": "4611223312",    "telefono2": "",       "id_ciudad": 3,    "referencia": "El local naranja"}],\r\n    "telefono1"       : "4353465434",\r\n    "impuestos_compra" : [1] ,\r\n    "impuestos_venta" : [1] ,\r\n    "logo":"statics.caffeina.mx/SDF551SDF15S.png",\r\n    "cedula":"statics.caffeina.mx/AD3662DFFS51.png",\r\n    "id_moneda" : 1\r\n}', '{\r\n    "id_empresa": 2,\r\n    "status": "ok"\r\n}', 'Crear una nueva empresa. Por default una nueva empresa no tiene sucursales.\r\n\r\nVarios RFC`s pueden repetirse siempre y cuando solo exista una empresa activa.', 'Crear una nueva empresa. Por default una nueva empresa no tiene sucursales.', 0),
(21, 2, 'api/empresa/eliminar', 'POST', 1, 1, '{\r\n    "id_empresa": 3\r\n}', '{\r\n   "status" : "ok"\r\n}', 'Para poder eliminar una empresa es necesario que la empresa no tenga sucursales activas, sus saldos sean 0, que los clientes asociados a dicha empresa no tengan adeudo, ...', 'Desactivar una empresa.', 0),
(22, 2, 'api/empresa/editar', 'POST', 1, 1, '{\r\n    "id_empresa": 2,\r\n    "razon_social": "Mi Empresa S.A de C.V",\r\n    "rfc": "ELRU7904126A3"\r\n}', '{\r\n      "status" : "ok"\r\n}', 'Un administrador puede editar una sucursal, incuso si hay puntos de venta con sesiones activas que pertenecen a esa empresa. ', 'Edita una empresa existente.', 0),
(24, 3, 'api/cliente/nuevo', 'POST', 1, 2, '{\r\n\r\n     "razon_social": "Tortas Rosa S.A. de C.V."\r\n}', '{\r\n    "status": "ok",\r\n    "id_cliente": 102\r\n}', 'Crea un nuevo cliente en el sistema.\r\n\r\n\r\n\r\nAl crear un cliente en el sistema también creara un usuario para la interfaz de cliente, en caso de especificar un email se enviara un correo con los datos de acceso para la interfaz de clientes.\r\n\r\nNo se puede asignar como cliente padre un cliente que esta inactivo', 'Crear un nuevo cliente.', 0),
(26, 3, 'api/cliente/editar', 'POST', 1, 1, '{\r\n    "id_cliente": 3,\r\n    "razon_social": "Tortas Rosa Editada Mas A Fondo S.A. de C.V.",\r\n    "rfc": "DASO7511106A2",\r\n    "curp": "DASO751110HGTNRN12",\r\n    "representante_legal": "Juan Manuel Ricaño Castillo",\r\n    "denomincaion_comercial": "Tortas Rosa Ultra Reloaded",\r\n    "clasisificacion": 3,\r\n    "limite_de_credito": 20000,\r\n    "mensajeria": "DHL",\r\n    "cuenta_de_mensajeria": "213JH324J2F9",\r\n    "direcciones": [\r\n        {\r\n            "tipo": "fiscal",\r\n            "calle": "FranciscoIMadero",\r\n            "numero_exterior": "1009A",\r\n            "colonia": "Centro",\r\n            "codigo_postal": "38000",\r\n            "telefono1": "4611223312",\r\n            "email": "tortas.rosy@gmail.com",\r\n            "direccion_web": "tortasrosy.com",\r\n            "id_ciudad": 2,\r\n            "referencia": "Ellocalnaranja"\r\n        }\r\n    ],\r\n    "id_moneda": 2,\r\n    "sucursal": {\r\n        "id_sucursal": 1,\r\n        "descripcion": "Lafavorita"\r\n    }\r\n}', '{\r\n        "status" : "ok"\r\n}', 'Edita la información de un cliente. Se diferencía del método editar_perfil en qué esté método modifica información más sensible del cliente. El campo fecha_ultima_modificacion será llenado con la fecha actual del servidor. El campo Usuario_ultima_modificacion será llenado con la información de la sesión activa.\r\n\r\nSi no se envia alguno de los datos opcionales del cliente. Entonces se quedaran los datos que ya tiene.', 'Editar todos los campos de un cliente.', 0),
(28, 3, 'api/cliente/detalle', 'GET', 1, 5, '{\r\n    "id_cliente": 1\r\n}', '{\r\n    "status": "ok",\r\n    "id_cliente": 1,\r\n    "activo": true,\r\n    "razon_social": "Tortas Rosa S.A. de C.V.",\r\n    "curp": "DASO751110HGTNRN12",\r\n    "representante_legal": "Juan Manuel Ricaño Castillo",\r\n    "denomincaion_comercial": "Tortas Rosa",\r\n    "rep_legal": "",\r\n    "id_tarifa": "",\r\n    "descuento_general": 10,\r\n    "limite_de_credito": 0,\r\n    "credito_restante": 0,\r\n    "clasisificaicon_cliente": {\r\n        "id_clasificacion": "",\r\n        "desc": ""\r\n    },\r\n    "fecha baja": "",\r\n    "facha edition": "13 de Mayo del 2011 8:10 pm",\r\n    "intereses moratorios": 0,\r\n    "dia de pago": "",\r\n    "dia de revision": "",\r\n    "segmento contable": "",\r\n    "saldo del ejercicio": 0,\r\n    "facturar a tercerros": false,\r\n    "moneda_del_cliente": {\r\n        "id_moneda": 2,\r\n        "descripcion": "Nuevos Pesos Mexicanos"\r\n    },\r\n    "ultima_modificacion": {\r\n        "fecha": "34567345",\r\n        "fecha_con_formato": "13 de Mayo del 2011 8:10 pm",\r\n        "id_usaurio": 10\r\n    },\r\n    "datos_fiscales" : {\r\n      "razon_social" : "Tortas Rosa S.A. de C.V." \r\n      "rfc" : "",\r\n      "calle" : "Rio Lerma",\r\n      "numero_interior" : "",\r\n      "numero_exterior" : "310",\r\n      "colonia" : "Centro",\r\n      "localidad" :"Celaya",\r\n      "referencia" : "Frente a Papeleria",\r\n      "municipio" : "Celaya",\r\n      "estado" : "Guanajuato",\r\n      "pais" :"Mexíco",\r\n      "codigo_postal" : "38000"\r\n    },\r\n    "direcciones": [\r\n        {\r\n            "tipo": "envio",\r\n            "calle": "Francisco I Madero",\r\n            "numero_exterior": "1009A",\r\n            "Colonia": "Centro",\r\n            "codigo_postal": "38000",\r\n            "telefono1": "4611223312",\r\n            "e-mail": "tortas.rosy@gmail.com",\r\n            "direccion_web": "tortasrosy.com",\r\n            "id_iudad": 334,\r\n            "referencia": "El local naranja"\r\n        },\r\n        {\r\n            "tipo": "envio",\r\n            "calle": "Francisco I Madero",\r\n            "numero_exterior": "1009A",\r\n            "Colonia": "Centro",\r\n            "codigo_postal": "38000",\r\n            "telefono1": "4611223312",\r\n            "e-mail": "tortas.rosy@gmail.com",\r\n            "direccion_web": "tortasrosy.com",\r\n            "id_iudad": 334,\r\n            "referencia": "El local naranja"\r\n        }\r\n    ],\r\n    "inscripcion": {\r\n        "id_usuario": 10,\r\n        "id_sucursal": 15,\r\n        "fecha": "56161548",\r\n        "fecha_con_formato": "10deAbrildel201110: 20am"\r\n    },\r\n    "sucursal": {\r\n        "id_sucursal": 15,\r\n        "nombre": "Sur"\r\n    },\r\n    "empresa": {\r\n        "id_empresa": 15,\r\n        "nombre": "Carnitaslacruz"\r\n    }\r\n}', 'Obtener los detalles de un cliente.', 'Obtener los detalles de un cliente.', 0),
(30, 4, 'api/autorizaciones/gasto', 'POST', 1, 3, '{\r\n    "descripcion": "Gasto de alimentos para comida del dia del padre",\r\n    "monto": 1000\r\n}', '{\r\n    "success": true,\r\n    "id_autorizacion": 123\r\n}', 'En caso de que el usuario no tenga persmiso para realizar gasto, puede pedir una autorizacion para registrar un gasto. ', 'Solicitud de autorización para realizar un gasto.', 0),
(31, 4, 'api/autorizaciones/cliente/editar', 'POST', 1, 3, '{\r\n    "id_cliente"      : 10\r\n}', '{\r\n    "success"   : true,\r\n    "id_autorizacion" : 9898\r\n}', 'Solicitud para cambiar algún dato de un cliente. La fecha de petición se tomará del servidor. El usuario y la sucursal que emiten la autorización serán tomadas de la sesión.\r\n<br><br>\r\nLa autorizacion se guardara con los datos del usuario que la pidio. Si es aceptada, entonces el usuario podra editar al cliente una vez.', 'Solicitar autorizacion para editar algun campo de un cliente.', 0),
(32, 4, 'api/autorizaciones/compra/devolucion', 'POST', 1, 3, '{\r\n    "descripcion": "Las manzanas están podridas.",\r\n    "id_compra": 10\r\n}', '{\r\n    "success": true,\r\n    "id_autorizacion": 4513\r\n}', 'Solicitud para devolver una compra.\r\n\r\nConsideraciones:\r\n-Que hacer con el dinero\r\n-Que hacer con la mercancia\r\n', 'Solicitud para devolver una compra.', 0),
(33, 4, 'api/autorizaciones/venta/devolucion', 'POST', 1, 3, '{\r\n    "descripcion"          : "Las manzanas están podridas.",\r\n    "id_venta"              : 100\r\n}', '{\r\n    "success"   : true,\r\n    "id_autorizacion" : 1234\r\n}', 'Solicitud para devolver una venta. La fecha de petición se tomará del servidor. El usuario y la sucursal que emiten la autorización serán tomadas de la sesión.', 'Solicitud para devolver una venta.', 0),
(34, 4, 'api/autorizaciones/cliente/precio', 'GET', 1, 3, '{\r\n    "descripcion": "El cliente a pagado a tiempo sus compras a crédito por 1 año.",\r\n    "id_cliente": 10,\r\n    "id_producto": 102,\r\n    "id_precio": 7,\r\n    "compra": false\r\n}', '{\r\n    "status": "ok"\r\n}', 'Solicitud para cambiar la relación entre cliente y el precio ofrecido para cierto producto ya sea en compra o en venta. La fecha de peticion se tomará del servidor. El usuario y la sucursal que emiten la autorización serán tomadas de la sesión.\r\n\r\n<br/><br/><b>UPDATE :</b> Actualmente como se maneja esto es por medio de las ventas preferenciales, es decir, se manda una autorización para que el cajero pueda editar todos los precios que desee, de todos los productos "solo para esa venta y solo para ese cliente especificamente", ya que si el cliente quisiera que le vendieran mas de un solo producto a diferente precio tendrías que generar mas de una autorización, esto implica un incremento considerable en el tiempo de respuesta y aplicación de los cambios.\r\n\r\n<br/><br/><b>UPDATE 2:</b> Creo que los metodos : \r\n<br/><i><b>api/autorizaciones/editar_precio_cliente</b></i> y <i><b>api/autorizaciones/editar_siguiente_compra_venta_precio_cliente</b></i>\r\n<br/>Se podrían combinar y así tener un solo método para una compra venta preferencial.', 'Solicitud para cambiar la relación precio-cliente', 0),
(36, 4, 'api/autorizaciones/lista', 'GET', 1, 3, '{"tipo":"lista"}', '{\r\n“success”      : true\r\n      “autorizaciones”  : [\r\n                            {\r\n                                    “id autorizacion” : 307,\r\n                                    “fecha” : “2398712,\r\n                                    “fecha en formato” : “20 de Noviembre del 2010 2:00pm”,\r\n                                        “sucursal” : {\r\n                                                 “id sucursal” : 2,\r\n                                                “nombre” : “sucursal norte”,\r\n                                    }\r\n                                        “estado[l]” : “Pendiente”,\r\n                                    “usuario” : {\r\n                                                “id usuario” : 32,\r\n                                                   “nombre” : “Juana maria Garcia Tapia”,\r\n                                       }\r\n                                   “descripción” : “Envio de productos”\r\n                                }\r\n           ]\r\n}', 'Muestra la lista de autorizaciones, con la opción de filtrar por pendientes, aceptadas, rechazadas, en tránsito, embarques recibidos y de ordenar según los atributos de autorizaciones. \r\n<br/><br/><b>Update : </b> falta definir el ejemplo de envio.', 'Lista todas las autorizaciones.', 0),
(37, 4, 'api/autorizaciones/responder', 'POST', 1, 1, '{\r\n      "id_autorizacion" : 20,\r\n      "aceptar"         : true\r\n}', '{\r\n      "success"   : true\r\n}', 'Responde a una autorización en estado pendiente. Este método no se puede aplicar a una autorización ya resuelta.', 'Responde a una auorización en estado pendiente.', 0),
(38, 4, 'api/autorizaciones/solicitar_producto', 'GET', 1, 3, '{\r\n      “descripcion”               : “Solicitud de tornillo 8’”,\r\n      “id_producto”               : 34,\r\n      “cantidad”              : 100\r\n}\r\n ', '{\r\n      “success”   : true\r\n}\r\n ', 'Solicitud de un producto, la fecha de peticion se tomará del servidor. El usuario y la sucursal que emiten la autorización serán tomadas de la sesión.\r\n<br/><br/><b>Update : </b> Me parece que no es buena idea manejar en los argumentos solo un id_producto y cantidad, creo que seria mejor manejar un array de objetos producto, que tuvieran como propiedades el id del producto y la cantidad solicitada, ya que si por ejemplo llega un cliente grande y necesita mas de un producto, y no pudiera cubrir la cantidad solicitada, por cada producto tendrías que solicitar una autorización.\r\n ', 'Solicitud de un producto', 0),
(39, 4, 'api/autorizaciones/detalle', 'GET', 1, 2, '{\r\n    "id autorizacion": 23\r\n}', '{\r\n    "success": true,\r\n    "autorizacion": {\r\n        "id autorizacion": 23,\r\n        "usuario": {\r\n            "id usuario": 24,\r\n            "nombre usuario": "Juana Escobar Martinez"\r\n        },\r\n        "sucursal": {\r\n            "id sucursal": 24,\r\n            "nombre sucursal": "Sucursal del norte"\r\n        },\r\n        "fecha de peticion": "3127891",\r\n        "descripcion": " Envio de tornillos 8’",\r\n        "estado": "Pendiente"\r\n    }\r\n}', 'Muestra la informacion detallada de una autorizacion.', 'Muestra la informacion detallada de una autorizacion.', 0),
(41, 4, 'api/autorizaciones/editar', 'GET', 1, 1, '{\r\n      "id_autorizacion"       : 37,\r\n      "descripcion"           : "Esta es la descripción editada",\r\n      "estado"                : "Este es el estado editado"\r\n}', '{\r\n      "success"   : true\r\n}', 'Editar una autorizacion en caso de tener permiso.\r\n\r\n<br/><br/><b>Update : </b> Creo que seriabuena idea que se definiera de una vez la estructura de las autorizaciones, ya que como se maneja actualemnte es de la siguiente manera : \r\n\r\nDigo que seria buena idea definir el formato de las autorizaciones para ir pensando en como en un futuro se van a mostrar en las interfaces, apartir de que se se crearan los formularios, actualmente se toma el campo <b>tipo</b> para de ahi saber que tipo de autorizacion es y crear un formulario de este tipo para desplegar los datos, y dependiendo del <b>tipo</b> se identifica que formato de JSON se espera que contenga el campo <b>parametros</b> .\r\n\r\n<br/><br/>\r\n\r\nAl momento de editar la autorizacion veo que aparentemente se podria editar el id_autorizacion, id_usuario, id_sucursal, peticion y estado, creo yo que no es prudente editar ninguno de estos campos ya que el mal uso de esta informacion puede dañar gravemente la integridad del sistema.', 'Editar una autorización en caso de tener permiso.', 0),
(43, 5, 'api/inventario/existencias', 'GET', 1, 3, '', '{\r\n      “success”   : true,\r\n      “productos” : [\r\n              { \r\n            “id producto” : 45,\r\n                “empresa”     : {\r\n                       “id empresa”     : 3,\r\n                       “nombre empresa” : “Arq-Serv”\r\n                 } ,\r\n                “sucursal”    : {\r\n                       “id sucursal”    : 2,\r\n                       “nombre sucursal”: “Sucursal Francisco I Madero”\r\n                 },\r\n               “almacen”   :  {\r\n                       “id almacen”         : 4,\r\n                       “nombre almacen” : “Almacen central de abastos”\r\n                 },\r\n               “lote”          :  {\r\n                       “id lote”            : 2,\r\n                       “nombre lote”        : “Lote 101”\r\n                 },\r\n               “precio”        : 25,\r\n               “escala”        :  {\r\n                       “id escala”          : 5,\r\n                       “nombre escala”  : “Kilos”\r\n                 },\r\n               “agrupación”  :  {\r\n                       “id agrupación”     : 3,\r\n                       “nombre agrupación” :  “Paquetes”\r\n                 },\r\n               “impuesto”  :  {\r\n                       “id impuesto”     : 3,\r\n                       “nombre impuesto” :  “IVA”,\r\n                       “desc”                : 0.16\r\n                 }\r\n         }\r\n         ],\r\n         "existencia": 10\r\n}', 'Ver la lista de productos y sus existencias, se puede filtrar por empresa, sucursal, almacén, y producto.', 'Obtener el catalogo de existencias del inventario.', 0),
(44, 21, 'api/producto/nuevo', 'POST', 1, 2, '{\r\n	"nombre"		:	"manzana roja",\r\n	"tipo"			:	2,\r\n	"metodo_costeo"		:	??,\r\n	"cesto_estándar"	:	false,\r\n	"margen_utilidad"	:	0.2\r\n}', '{\r\n	"success"	:	true,\r\n	"id_producto"	:	100\r\n}', 'Crear un nuevo producto, \r\n\r\nNOTA: Se crea un producto tipo = 1 que es para productos', 'Crear un nuevo produco', 0),
(46, 21, 'api/producto/nuevo/en_volumen', 'POST', 1, 2, '{\r\n    "productos": [\r\n        {\r\n            "nombre": "manzana roja",\r\n            "tipo": 2,\r\n            "metodo_costeo": ??,\r\n            "cesto_estándar": false,\r\n            "margen_utilidad": 0.2\r\n        },\r\n        {\r\n            "nombre": "manzana amarilla",\r\n            "tipo": 2,\r\n            "metodo_costeo": ??,\r\n            "cesto_estándar": false,\r\n            "margen_utilidad": 0.2\r\n        },\r\n        {\r\n            "nombre": "manzana verde",\r\n            "tipo": 2,\r\n            "metodo_costeo": ??,\r\n            "cesto_estándar": false,\r\n            "margen_utilidad": 0.2\r\n        }\r\n    ]\r\n}', '{\r\n	"success"	:	true,\r\n	"id_productos"	:	[100,101,102]\r\n}', 'Agregar productos en volumen mediante un archivo CSV.', 'Agregar productos en volumen mediante un archivo CSV.', 0),
(47, 5, 'api/inventario/procesar_producto', 'GET', 1, 2, '{\r\n	"id_producto"	:	3,\r\n	"id_lote"	:	2\r\n}', '{\r\n	"success"	:	true\r\n}', 'Procesar producto no es mas que moverlo de lote.', 'Procesar producto no es mas que moverlo de lote.', 0),
(48, 5, 'api/inventario/terminar_cargamento_de_compra', 'GET', 1, 3, '{\r\n}', '{\r\n	"success"	:	true\r\n}', 'ver transporte y fletes...', 'ver transporte y fletes...', 0),
(50, 6, 'api/personal/usuario/nuevo', 'POST', 1, 2, '{\r\n	"nombre"	: "Juan Perez Lozano",\r\n	"id_rol"	: 3,\r\n        "codigo_usuario": "JUAN1",\r\n        "password"      : "1u4n"\r\n        	\r\n}', '{\r\n	"status"	:	"ok",\r\n	"id_usuario"	:	903\r\n}', 'Insertar un nuevo usuario. El usuario que lo crea sera tomado de la sesion actual y la fecha sera tomada del servidor. Un usuario no puede tener mas de un rol en una misma sucursal de una misma empresa.', 'Insertar un nuevo usuario.', 0),
(51, 6, 'api/personal/usuario/lista', 'GET', 1, 2, '', '{\r\n	"success"	:	true,\r\n	"usuario"	:	\r\n			[\r\n			]\r\n}', 'Listar a todos los usuarios del sistema. Se puede ordenar por los atributos del usuario y filtrar en activos e inactivos', 'Listar a todos los usuarios del sistema.', 0),
(52, 6, 'api/personal/usuario/editar', 'POST', 1, 2, '{\r\n	"id_usuario"	:	15,\r\n	"nombre"	:	"Juan Perez Zúñiga",\r\n	"grupo"		:	2\r\n}', '{\r\n	"success"	:	true\r\n}', 'Editar los detalles de un usuario.', 'Editar los detalles de un usuario.', 0),
(54, 7, 'api/efectivo/gasto/concepto/nuevo', 'GET', 1, 1, '{\r\n    "descripcion" : "Pago de Luz"\r\n}', '{\r\n   "success" : true\r\n}', 'Registra un nuevo concepto de gasto\r\n\r\n<br/><br/><b>Update :</b> En la respuesta basta con solo indicar success : true | false, y en caso de fallo indicar el por que.', 'Registra un nuevo concepto de gasto', 0),
(55, 7, 'api/efectivo/gasto/concepto/editar', 'GET', 1, 1, '{\r\n    "id_concepto_gasto" : 14,\r\n    "descripcion"       : "Pago del agua"\r\n}', '{\r\n   "success" : true\r\n}', 'Edita la información de un concepto de gasto\r\n\r\n<br/><br/><b>Update : </b>Se debería de tomar de la sesión el id del usuario que hiso la ultima modificación y la fecha.', 'Edita un concepto de gasto', 0),
(56, 7, 'api/efectivo/gasto/concepto/eliminar', 'GET', 1, 1, '{\r\n   "id_concepto_gasto"  : 14\r\n}', '{\r\n    "success"  : true\r\n}', 'Deshabilita un concepto de gasto\r\n<br/><br/><b>Update :</b>Se debería de tomar también de la sesión el id del usuario y fecha de la ultima modificación', 'Deshabilita un concepto de gasto', 0),
(57, 7, 'api/efectivo/ingreso/concepto/nuevo', 'GET', 1, 1, '{\r\n    "descripcion" : "Inversion"\r\n}', '{\r\n    "success" : true,\r\n    "id_concepto_ingreso" : 15\r\n}', 'Crea un nuevo concepto de ingreso\r\n\r\n<br/><br/><b>Update :</b> En la respuesta basta con solo indicar success : true | false, y en caso de fallo indicar el por que.', 'Crear un nuevo concepto de ingreso', 0),
(58, 7, 'api/efectivo/ingreso/concepto/editar', 'POST', 1, 1, '{\r\n    "id_concepto_ingreso" : 15,\r\n    "descripcion"         : "Inversión"\r\n}', '{\r\n   "success" : true\r\n}', 'Edita un concepto de ingreso', 'Editar un concepto de ingreso', 0),
(59, 7, 'api/efectivo/ingreso/concepto/eliminar', 'GET', 1, 1, '{\r\n    "id_concepto_ingreso" : 15\r\n}', '{\r\n    "success" : true\r\n}', 'Deshabilita un concepto de ingreso\r\n\r\n<br/><br/><b>Update :</b>Se debería también obtener de la sesión el id del usuario y fecha de la ultima modificación.', 'Deshabilita un concepto de ingreso', 0),
(60, 7, 'api/efectivo/gasto/concepto/lista', 'GET', 1, 3, '', '{\r\n    "success" : true,\r\n    "conceptos_gasto": \r\n                     [\r\n                        {\r\n                          "id_concepto_gasto" : 1,\r\n                          "descripcion"       : "Pago de Luz"\r\n                        },\r\n                        {\r\n                          "id_concepto_gasto" : 2,\r\n                          "descripcion"       : "Pago de Agua"\r\n                        }\r\n                     ]\r\n}', 'Lista los conceptos de gasto. Se puede ordenar por los atributos de concepto de gasto\r\n<br/><br/><b>Update : </b>Falta especificar los parametros y el ejemplo de envio.', 'Lista los conceptos de gasto', 0),
(61, 7, 'api/efectivo/ingreso/concepto/lista', 'GET', 1, 3, '', '{\r\n    "success" : true,\r\n    "conceptos_ingreso" : \r\n                        [\r\n                             {\r\n                                "id_concepto_ingreso" : 1,\r\n                                "descripcion" : "Inversion"\r\n                             },\r\n                             {\r\n                                "id_concepto_ingreso" : 2,\r\n                                "descripcion" : "Cooperacion"\r\n                             },\r\n                        ]\r\n}', 'Lista los conceptos de ingreso, se puede ordenar por los atributos del concepto de ingreso.  \r\n\r\n<br/><br/><b>Update :</b>Falta especificar la estructura del JSON que se envía como parametro', 'Lista los conceptos de ingreso', 0),
(62, 7, 'api/efectivo/gasto/nuevo', 'GET', 1, 3, '{\r\n   "id_concepto_gasto" : 1,\r\n   "monto"  : 34000.00\r\n}', '{\r\n    "success" : true,\r\n    "id_gasto" : 14\r\n}', 'Registrar un gasto. El usuario y la sucursal que lo registran serán tomados de la sesión actual.\r\n\r\n<br/><br/><b>Update :</b>Ademas debería también de tomar la fecha de ingreso del gasto del servidor y agregar también como parámetro una fecha a la cual se debería de aplicar el gasto. Por ejemplo si el día 09/09/11 (viernes) se tomo dinero para pagar la luz, pero resulta que ese día se olvidaron de registrar el gasto y lo registran el 12/09/11 (lunes). Entonces tambien se deberia de tomar como parametro una <b>fecha</b> a la cual aplicar el gasto, tambien se deberia de enviar como parametro una <b>nota</b>', 'Registrar un gasto.', 0),
(63, 7, 'api/efectivo/gasto/editar', 'GET', 1, 2, '{\r\n  "id_gasto"  : 14,\r\n  "id_concepto_gasto: 2,\r\n  "monto"     : 15900.99,\r\n  "descripción" :"Pago de Luz",\r\n  "fecha" : "1236666082",\r\n  "nota" : "El viernes fue el chófer a pagar la luz, pero ya no regreso, así que lo registro hoy lunes",\r\n  "folio" : "ASC1212"\r\n}', '{\r\n   "success" : true\r\n}', 'Editar los detalles de un gasto.\r\n<br/><br/><b>Update : </b> Tambien se deberia de tomar  de la sesion el id del usuario qeu hiso al ultima modificacion y una fecha de ultima modificacion.', 'Editar los detalles de un gasto.', 0),
(66, 7, 'api/efectivo/ingreso/editar', 'GET', 1, 2, '{\r\n	"id_ingreso"	:	98,\r\n	"id_concepto_ingreso"	:	1,\r\n	"monto"		:	190000000.00\r\n}', '{\r\n	"success"	:	true\r\n}', 'Edita un ingreso\r\n\r\n<br/><br/><b>Update :</b>El usuario y la fecha de la ultima modificación se deberían de obtener de la sesión', 'Edita un ingreso', 0),
(69, 7, 'api/efectivo/abono/nuevo', 'GET', 1, 3, '{\r\n    "id_sucursal"  :  3,\r\n    "monto"        :  14900.00\r\n    "tipo_pago" : {\r\n        "tipo" : "cheque | efectivo | tarjeta", \r\n        "datos" : {\r\n            "prop_1":"val_1", \r\n             .,\r\n             .,\r\n             "prop_n":"val_n"\r\n         }\r\n    }\r\n}', '{\r\n    "success"  : true\r\n}', 'Se crea un  nuevo abono, la caja o sucursal y el usuario que reciben el abono se tomaran de la sesion. La fecha se tomara del servidor', 'Crea un nuevo abono', 0),
(72, 15, 'api/pos/offline/enviar', 'POST', 1, 3, '{\r\n    "ventas" : \r\n             [\r\n                {\r\n                    "id_cliente" : 3,\r\n                    "tipo_venta" : "contado",\r\n                    "tipo_pago"  : "efectivo",\r\n                    "fecha"      : "13 de mayo de 2010 22:00:03",\r\n                    "subtotal"   : 30000.00,\r\n                    "iva"        : 4500.00,\r\n                    "descuento"  : 4500.00,\r\n                    "total"      : 30000.00,\r\n                    "id_usuario" : 2,\r\n                    "pagado"     : 30000.00,\r\n                    "cancelada"  : false,\r\n                    "ip"         : 182.169.3.1,\r\n                    "liquidada"  : true,\r\n                    "detalle"    :\r\n                                 [\r\n                                      {\r\n                                         "id_producto"  : 23,\r\n                                         "cantidad"     : 4,\r\n                                         "precio"       : 45.00\r\n                                      }   \r\n                                 ]\r\n                }   \r\n             ]\r\n}', '{\r\n     "id_ventas" : [\r\n                         {\r\n                           "id_venta" : 49\r\n                         }\r\n                    ]\r\n}', 'Si un perdidad de conectividad sucediera, es responsabilidad del cliente registrar las ventas o compras realizadas desde que se perdio conectividad. Cuando se restablezca la conexcion se deberan enviar las ventas o compras. ', 'Enviar compras o ventas de mostrador al servidor despues de una perdida de conectividad.', 0),
(73, 8, 'api/sucursal/caja/vender', 'POST', 1, 3, '{\r\n     "id_cliente" : 3,\r\n     "tipo_venta" : "contado",\r\n     "tipo_pago"  : "cheque",\r\n     "subtotal"   : 90.0,\r\n     "iva"        : 9.5,\r\n     "descuento"  : 9.5,\r\n     "total"      : 90.0,\r\n     "pagado"     : 90.0,\r\n     "detalle"    :\r\n                   [\r\n                        {\r\n                            "id_producto" : 3,\r\n                            "cantidad"    : 30,\r\n                            "precio"      : 3.0,\r\n                            "descuento"   : 0.0\r\n                        } \r\n                   ]\r\n}', '{\r\n     "success"  : true,\r\n     "id_venta" : 3\r\n}', 'Vender productos desde el mostrador de una sucursal. Cualquier producto vendido aqui sera descontado del inventario de esta sucursal. La fecha será tomada del servidor, el usuario y la sucursal serán tomados del servidor. La ip será tomada de la máquina que manda a llamar al método. El valor del campo liquidada dependerá de los campos total y pagado. La empresa se tomara del alamcen de donde salieron los productos', 'Venta de productos desde el mostrador de una sucursal.', 0),
(74, 8, 'api/sucursal/caja/comprar', 'GET', 1, 3, '{\r\n   "id_cliente"   : 45,\r\n   "tipo_compra"  : "contado",\r\n   "tipo_pago"    : "efectivo",\r\n   "subtotal"     : 60000.00,\r\n   "impuesto"     : 45000.00,\r\n   "descuento"    : 45000.00,\r\n   "total"        : 60000.00,\r\n   "pagado"       : 60000.00,\r\n   "detalle"      : \r\n                  [\r\n                      {\r\n                           "id_producto" : 6,\r\n                           "cantidad"    : 10000.00,\r\n                           "precio"      : 1.00,\r\n                           "descuento"   : 0.00\r\n                      }\r\n                  ]\r\n}', '{\r\n     "success"  : true,\r\n     "id_compra_cliente" : 70\r\n}', 'Comprar productos en mostrador. No debe confundirse con comprar productos a un proveedor. Estos productos se agregaran al inventario de esta sucursal de manera automatica e instantanea. La IP será tomada de la máquina que realiza la compra. El usuario y la sucursal serán tomados de la sesion activa. El estado del campo liquidada será tomado de acuerdo al campo total y pagado.', 'Compra de productos desde el mostrador. (caja)', 0),
(75, 8, 'api/sucursal/buscar', 'GET', 1, 2, '{\r\n    "id_empresa" : 2,\r\n    "activo" : 1,\r\n    "start" : 0,\r\n    "limit" : 25,\r\n    "query" : "Compu I",\r\n    "sort" : 25\r\n}', '{\r\n    "resultados": [\r\n        {\r\n            "id_sucursal": "1",\r\n            "id_direccion": "210",\r\n            "rfc": "ZEFA980121JD3E",\r\n            "razon_social": "sucursal sur",\r\n            "descripcion": "la sucursal de almacen",\r\n            "id_gerente": null,\r\n            "saldo_a_favor": "0",\r\n            "fecha_apertura": "2012-01-05 20:52:05",\r\n            "activa": "1",\r\n            "fecha_baja": null\r\n        },\r\n        {\r\n            "id_sucursal": "2",\r\n            "id_direccion": "211",\r\n            "rfc": "ZEFA980121",\r\n            "razon_social": "sucursal norte",\r\n            "descripcion": "la sucursal de almacen 2",\r\n            "id_gerente": null,\r\n            "saldo_a_favor": "0",\r\n            "fecha_apertura": "2012-01-05 20:52:05",\r\n            "activa": "1",\r\n            "fecha_baja": null\r\n        }\r\n    ],\r\n    "numero_de_resultados": 2,\r\n    "status": "ok"\r\n}', 'Lista las sucursales relacionadas con esta instancia. Se puede filtrar por empresa,  saldo inferior o superior a, fecha de apertura, ordenar por fecha de apertura u ordenar por saldo. Se agregará un link en cada una para poder acceder a su detalle.', 'Buscar sucursales', 0),
(76, 8, 'api/sucursal/caja/abrir', 'GET', 1, 5, '{\r\n     "client_token"   : "2381hjknkl1y3"\r\n}', '{\r\n       "success"  :  true,\r\n       "id_empresa"   : 3,\r\n       "POS_MULTI_SUCURSAL" : false,\r\n       "POS_COMPRA_A_CLIENTES" : true,\r\n       "POS_MULTI_SUCURSAL" : false,\r\n       "POS_MODULO_CONTABILIDAD" : ??, \r\n       "POS_AJAX_TIMEOUT"  : 10000,\r\n       "POS_HEARTBEAT_TIME" : 5,\r\n       "POS_INFO_SUCURSAL"  :  "La sucursal de papas",\r\n       "POS_DOCUMENTOS"   : ??,\r\n       "POS_LEYENDAS_TICKET" : "Sucursal del norte",\r\n}', 'Valida si una maquina que realizara peticiones al servidor pertenece a una sucursal.', 'Abrir una caja, esta caja se asociara a esta sesion.', 0),
(77, 8, 'api/sucursal/nueva', 'POST', 1, 1, '{\r\n    "descripcion": "la sucursal de almacen",\r\n    "razon_social": "sucursal sur",\r\n    "rfc": "ZEFA980121JD3E",\r\n    "direccion": [\r\n        {\r\n            "tipo": "fiscal",\r\n            "calle": "Francisco I Madero",\r\n            "numero_exterior": "1009A",\r\n            "numero_interior": 12,\r\n            "colonia": "centro",\r\n            "codigo_postal": "38000",\r\n            "telefono1": "4611223312",\r\n            "telefono2": "",\r\n            "id_ciudad": 3,\r\n            "referencia": "El local naranja"\r\n        }\r\n    ],\r\n    "impuestos_compra": [\r\n        1\r\n    ],\r\n    "impuestos_venta": [\r\n        1\r\n    ],\r\n    "logo": "statics.caffeina.mx/SDF551SDF15S.png",\r\n    "cedula": "statics.caffeina.mx/AD3662DFFS51.png"\r\n}', '{\r\n    "status"    : "ok",\r\n    "id_sucursal": 5\r\n}', 'Método que crea una nueva sucursal', 'Crea una nueva sucursal', 0),
(78, 8, 'api/sucursal/editar', 'GET', 1, 1, '{\r\n   "id_sucursal"  : 14,\r\n   "id_empresa"   :  2,\r\n   "id_gerente"   :  1,\r\n   "descripcion"  : "sucursal que fue modificada",\r\n   "razon_social" : "sucursal modificada",\r\n   "rfc"          : "ZEFA980113DJ6Y",\r\n   "direccion" : [{    "tipo": "postal",    "calle": "Francisco I Madero",    "numero_exterior": "1009A",    "numero_interior": 12,    "colonia": "centro",    "codigo_postal": "38000",    "telefono1": "4611223312",    "telefono2": "",       "id_ciudad": 3,    "referencia": "El local naranja"}],\r\n   "saldo_a_favor"  : -100000.00,\r\n   "numero_decimales" : 7,\r\n   "impuestos_compra" : [1],\r\n   "impuestos_venta" : [1]\r\n}', '{\r\n   "status" : "ok"\r\n}', 'Edita los datos de una sucursal', 'Edita una sucursal', 0),
(80, 8, 'api/sucursal/gerencia/editar', 'GET', 1, 1, '{\r\n   "id_sucursal" : 4,\r\n   "id_gerente"  : 10\r\n}', '{\r\n   "success" : true\r\n}', 'Edita la gerencia de una sucursal', 'Edita la gerencia de una sucursal', 0),
(81, 8, 'api/sucursal/caja/cerrar', 'GET', 1, 2, '{\r\n    "total_ventas"  : 10.00,\r\n    "total_ventas_abonado" : 30000.00,\r\n    "total_ventas_saldo"   : 30000.00,\r\n    "total_compras"        : 1.00,\r\n    "total_compras_abonado": 15000.00,\r\n    "total_gastos"         : 1.00,\r\n    "total_gastos_abonado" : 10000.00,\r\n    "total_ingresos"       : 0.00,\r\n    "total_ganancia_neta"  : 5000.00\r\n}', '{\r\n    "success"  : true,\r\n    "id_corte" : 1\r\n}', 'Hace un corte en los flujos de dinero de la sucursal. El Id de la sucursal se tomara de la sesion actual. La fehca se tomara del servidor.', 'Hace un corte en los flujos de dinero de esta caja', 0),
(82, 9, 'api/ventas/detalle', 'GET', 1, 3, '{\r\n    "id_venta"  : 509\r\n}', '{\r\n    "success" : true,\r\n    "detalle" :\r\n              [\r\n                  {\r\n                      "producto" :\r\n                                    {\r\n                                       "id_producto" : 23,\r\n                                       "nombre"      : "papa grande"\r\n                                    },\r\n                      "cantidad"  : 45,\r\n                      "precio"    : 5.00,\r\n                      "descuento" : 2.00\r\n                  },\r\n                  {\r\n                      "producto" :\r\n                                    {\r\n                                       "id_producto" : 22,\r\n                                       "nombre"      : "papa pequeña"\r\n                                    },\r\n                      "cantidad"  : 40,\r\n                      "precio"    : 2.00,\r\n                      "descuento" : 1.00\r\n                  }\r\n              ]\r\n}', 'Lista el detalle de una venta, se puede ordenar de acuerdo a sus atributos.', 'Lista el detalle de una venta', 0),
(83, 9, 'api/ventas/lista', 'GET', 1, 3, '', '{\r\n      "success" : true,\r\n      "ventas"  : \r\n                [\r\n                    {\r\n                        "id_venta" : 13,\r\n                        "cliente"  :\r\n                                   {\r\n                                        "id_cliente" : 3,\r\n                                        "nombre"     : "Juan Perez"\r\n                                   },\r\n                        "tipo_venta" : "credito",\r\n                        "tipo_pago"  : "tarjeta",\r\n                        "fecha"      :  "20 de octubre del 2011 9:00:03",\r\n                        "total"      : 9000.00,\r\n                        "sucursal"   :\r\n                                        {\r\n                                           "id_sucursal" : 4,\r\n                                           "nombre"      : "sucursal del norte"\r\n                                        },\r\n                        "cancealda"  : false,\r\n                        "liquidada"  : true\r\n                    }\r\n                ]\r\n}', 'Lista las ventas, puede filtrarse por empresa, sucursal, por el total, si estan liquidadas o no, por canceladas, y puede ordenarse por sus atributos.', 'Lista las ventas.', 0),
(84, 9, 'api/ventas/cancelar', 'GET', 1, 3, '', '{\r\n    "success" : true,\r\n}', 'Metodo que cancela una venta', 'Cancelar una venta', 0),
(85, 10, 'api/proveedor/lista', 'GET', 1, 2, '', '{\r\n    "success" : true,\r\n    "proveedores" : \r\n                  [\r\n                    {\r\n                        "id_proveedor" : 14,\r\n                        "nombre"       : "Agua Ciel",\r\n                        "activo"       : true,\r\n                        "tipo_proveedor": "admin"\r\n                    },\r\n                    {\r\n                        "id_proveedor" : 15,\r\n                        "nombre"       : "Agua Santorini",\r\n                        "activo"       : true,\r\n                        "tipo_proveedor": "admin"\r\n                    }  \r\n                  ]\r\n}', 'Obtener una lista de proveedores. Puede filtrarse por activo o inactivos, y puede ordenarse por sus atributos.', 'Obtener una lista de proveedores.', 0),
(86, 10, 'api/proveedor/nuevo', 'GET', 1, 1, '{\r\n    "nombre" : "Andres Zendejas Frias",\r\n    "tipo_proveedor" : "ambos"\r\n}', '{\r\n    "success" : true,\r\n    "id_proveedor" : 4\r\n}', 'Crea un nuevo proveedor', 'Crea un nuevo proveedor', 0),
(88, 10, 'api/proveedor/editar', 'GET', 1, 1, '{\r\n   "id_proveedor"  : 4,\r\n   "nombre"        : "Andres Zendejas Lopez",\r\n   "tipo_proveedor": "sucursal"\r\n}', '{\r\n    "success"  : true\r\n}', 'Edita la informacion de un proveedor. ', 'Edita la informacion de un proveedor', 0),
(89, 26, 'api/almacen/entrada', 'POST', 1, 3, '{\r\n    "productos"     : \r\n                    [\r\n                       {\r\n                          "id_producto" : 3,\r\n                          "cantidad"    : 40 \r\n                       },\r\n                       {\r\n                          "id_producto" : 5,\r\n                          "cantidad"    : 50 \r\n                       }\r\n                    ]\r\n}', '{\r\n   "success"  : true,\r\n   "id_surtido": 45\r\n}', 'Metodo que surte una sucursal por parte de un proveedor. La sucursal sera tomada de la sesion actual.\r\n\r\n<h2>Update</h2>\r\nCreo que este metodo tiene que estar bajo sucursal.', 'Surtir una sucursal', 0),
(90, 11, 'api/compras/nueva_compra_arpilla', 'GET', 1, 2, '{\r\n    "id_proveedor"  : 15,\r\n    "peso_recibido" : 500,\r\n    "arpillas"      : 10,\r\n    "peso_por_arpillas": 50,\r\n    "merma_por_arpilla": 0,\r\n    "total_origen": 500000.00\r\n    "detalle"  :\r\n               [\r\n                  {\r\n                      "id_producto" : 4,\r\n                      "variedad"    : "japonesa",\r\n                      "arpillas"    : 10,\r\n                      "kg"          : 50,\r\n                      "precio_por_kg": 1000.00\r\n                  }\r\n               ]\r\n}', '{\r\n    "success"  : true,\r\n    "id_compra_proveedor" : 57\r\n}', 'Registra una nueva compra por arpillas. Este metodo tiene que usarse en conjunto con el metodo api/compras/nueva\r\n<br/><br/><b>Update :</b> Todo este metodo esta mal, habria que definir nuevamente como se van a manejar las compras a los proveedores ya que como esta definido aqui solo funcionaria para el POS de las papas.', 'Compra por arpillas', 0),
(92, 11, 'api/compras/detalle_compra_arpilla', 'GET', 1, 2, '{\r\n   "id_compra_proveedor"   : 5\r\n}', '{\r\n       "success" : true,\r\n       "detalle_compra_proveedor":\r\n                               [\r\n                                    {\r\n                                         "producto" :\r\n                                               {\r\n                                                    "id_producto" : 2,\r\n                                                    "nombre"   : "papas"\r\n                                               },\r\n                                          "variedad" : "japonesa",\r\n                                          "arpillas" : 10,\r\n                                          "kg"     :  10,\r\n                                          "precio_por_kg": 50\r\n                                    }\r\n                               ]\r\n}', 'Muestra el detalle de una compra por arpillas. Este detalle no es el detalle por producto, este muestra los detalles por embarque de la compra. Para el detalle por producto refierase a api/compras/detalle\r\n\r\n<br/><br/><b>Update :</b> Todo este metodo esta mal, habria que definir nuevamente como se van a manejar las compras a los proveedores ya que como esta definido aqui solo funcionaria para el POS de las papas.', 'Muestra el detalle de una compra por arpillas', 0),
(93, 13, 'api/consignacion/nueva', 'GET', 1, 3, '', '', 'Iniciar una orden de consignación. La fecha sera tomada del servidor.', 'Iniciar una orden de consignación', 0),
(94, 13, 'api/consignacion/consignatario/nuevo', 'GET', 1, 3, '{\r\n    "id_cliente" :  2,\r\n    "activo"     : true\r\n}', '{\r\n    "success"       : true,\r\n    "id_almacen"    : 3\r\n}', 'Un consignatario ya es un cliente. Al crear un nuevo consignatario, se le crea un nuevo almacen a la sucursal que hace la consignacion. El nombre de ese almacen sera el rfc o la clave del cliente. Se agregara este nuevo id_almacen al cliente y su bandera de consignatario se pondra activa.', 'crear un consignatario', 0),
(95, 13, 'api/consignacion/lista', 'GET', 1, 3, '', '', 'Este metodo lista las consignaciones de la instancia. Puede filtrarse por empresa, por sucursal, por cliente, por producto y se puede ordenar por sus atributos.', 'Lista de cosnignaciones ', 0),
(96, 13, 'api/consignacion/inspeccion/registrar', 'GET', 1, 3, '{\r\n   "id_consignatorio": 1\r\n}', '{\r\n	"success":true,\r\n	"consiganatrio":[\r\n		.\r\n		.\r\n		.\r\n	]\r\n}', 'Se llama cuando se realiza una revision a una orden de consigacion. Actualiza el estado del almacen del cliente, se facturan a credito o de contado las ventas realizadas y se registra la entrada de dinero. La fecha sera tomada del servidor.', 'Registra la inspeccion realizada a una consignacion', 0),
(97, 11, 'api/compras/nueva', 'POST', 1, 2, '{\r\n   "subtotal"     : 500.00,\r\n   "id_proveedor" : 9, \r\n   "pagado"       : 500.00,\r\n   "total"        : 500.00,\r\n   "detalle"      : \r\n            [\r\n                {\r\n                  "id_producto" : 3,\r\n                  "cantidad"    : 10,\r\n                  "precio"      : 50.00,\r\n                  "decuento"    : 0.00,\r\n                }\r\n            ]\r\n}', '{\r\n   "id_compra" : 10\r\n}', 'Registra una nueva compra, la compra puede ser a cualquier usuario, siendo este un cliente, proveedor, o cualquiera. La compra siempre viene acompañanda de un detalle de productos que han sido comprados, y cada uno estipula a que almacen y a que sucursal iran a parar.', 'Registra una nueva compra', 0),
(98, 12, 'api/carro/detalle', 'GET', 1, 3, '{\r\n}', '{\r\n    "success"  : true\r\n}', 'Ver los detalles e historial de un carro especifico', 'Ver los detalles e historial de un carro especifico', 0),
(99, 13, 'api/consignacion/terminar', 'GET', 1, 3, '{\r\n	"id_consignacion": 4\r\n}', '', 'Dar por terminada una consignacion, bien se termino el inventario en consigacion o se va a regresar al inventario de alguna sucursal.', 'Lista todas las empresas existentes.', 0),
(100, 12, 'api/carro/lista', 'GET', 1, 2, '{\r\n}', '{\r\n   "success" : true\r\n}', 'Lista todos los carros de la instancia. Puede filtrarse por empresa, por su estado y ordenarse por sus atributos', 'Lista de carros en la empresa', 0),
(101, 12, 'api/carro/nuevo', 'GET', 1, 2, '{\r\n}', '{\r\n   "success"  : true\r\n}', 'Crea un nuevo carro. La fecha de creacion sera tomada del servidor.', 'Crea un nuevo carro', 0),
(102, 12, 'api/carro/cargar', 'GET', 1, 3, '{\r\n}', '{\r\n   "success" : true\r\n}', 'Realizar un cargamento a un carro. El id de la sucursal sera tomada de la sesion actual. La fecha sera tomada del servidor. El inventario de la sucursal que carga el camion se vera afectado por esta operacion.', 'Realizar un cargamento a un carro', 0),
(103, 12, 'api/carro/descargar', 'GET', 1, 3, '{\r\n}', '{\r\n  "success" : true\r\n}', 'Descargar producto de un carro. El id de la sucursal se tomara de la sesion actual. La fecha se tomara del servidor. El almacen de la sucursal que realiza la operacion se vera afectada.', 'Descargar producto de un carro', 0),
(104, 12, 'api/carro/transbordo', 'GET', 1, 3, '{\r\n}', '{\r\n  "success" : true\r\n}', 'Mover mercancia de un carro a otro. \r\n<h4>UPDATE</h4><br>\r\nSe movera parcial o totalmente la carga?', 'Mover mercancia de un carro a otro.', 0),
(105, 12, 'api/carro/enrutar', 'GET', 1, 2, '{\r\n}', '{\r\n   "success" : true\r\n}', 'Enviar un cargamento. No necesariamente debe tener cargamento. Seria excelente calcular el kilometraje. La sucursal origen sera tomada de la sesion actual.', 'Enviar un cargamento', 0);
INSERT INTO `metodo` (`id_metodo`, `id_clasificacion`, `nombre`, `tipo`, `sesion_valida`, `grupo`, `ejemplo_peticion`, `ejemplo_respuesta`, `descripcion`, `subtitulo`, `regresa_html`) VALUES
(106, 14, 'api/servicios/lista', 'GET', 1, 3, '', '{\r\n   "success" : true,\r\n   "servicios" :\r\n       [\r\n          {\r\n             "id_servicio" : 1,\r\n             "nombre"      : "Mantenimiento de equipo"\r\n          }\r\n       ]\r\n}', 'Lista todos los servicios de la instancia. Puede filtrarse por empresa, por sucursal o por activo y puede ordenarse por sus atributos.', 'Lista todos los servicios de la instancia', 0),
(107, 14, 'api/servicios/nuevo', 'GET', 1, 1, '{\r\n	"nombre"		:	"reparacion computadora",\r\n	"tipo"			:	2,\r\n	"metodo_costeo"		:	??,\r\n	"costo_est&#65533;ndar"	:	100,\r\n	"margen_utilidad"	:	0.2\r\n}', '{\r\n   "success"    : true,\r\n   "id_servicio": 4\r\n}', 'Crear un nuevo concepto de servicio.', 'Ofrecer un nuevo servicio', 0),
(108, 14, 'api/servicios/editar', 'GET', 1, 1, '{\r\n}', '{\r\n    "success" : true\r\n}', 'Edita un servicio', 'Edita un servicio', 0),
(109, 14, 'api/servicios/orden/lista', 'GET', 1, 3, '', '{\r\n    "success" : true,\r\n    "ordenes" :\r\n              [\r\n                 {\r\n                    "id_orden"  : 3,\r\n                    "fecha_orden": "15 de mayo del 1989 9:00:01",\r\n                    "fecha_entrega": "20 de octubre de 2011 22:00:01"\r\n                 }\r\n              ]\r\n}', 'Lista de todos las ordenes, se puede filtrar por id_sucursal id_empresa fecha_desde fecha_hasta estado Este metodo se puede utilizar para decirle a un cliente cuando le tocara un servicio en caso de haber mas ordenes en espera.', 'Lista las ordenes de los servicios', 0),
(110, 14, 'api/servicios/orden/detalle', 'GET', 1, 3, '{\r\n    "id_orden"  : 3\r\n}', '{\r\n    "success" : true,\r\n    "detalle_orden" : \r\n                   [\r\n                      {\r\n                      }\r\n                   ]\r\n}', 'Ver los detalles de una orden de servicio. Puede ordenarse por sus atributos. Los detalles de la orden de servicio son los seguimientos que tiene esa orden así como el estado y sus fechas de orden y de entrega.', 'Ver los detalles de una orden de servicio', 0),
(111, 14, 'api/servicios/orden/nueva', 'POST', 1, 3, '{\r\n   "id_cliente" : 2,\r\n   "id_servicio": 5,\r\n   "fecha_entrega": "22 de agosto del 2011 13:00:45"\r\n}', '{\r\n    "success" : true,\r\n    "id_orden" : 90\r\n}', 'Una nueva orden de servicio a prestar. Este debe ser un servicio activo. Y prestable desde la sucursal desde donde se inicio la llamada. Los conceptos a llenar estan definidos por el concepto. Se guardara el id del agente que inicio la orden y el id del cliente. La fecha se tomara del servidor.', 'Una nueva orden de servicio a prestar.', 0),
(112, 14, 'api/servicios/orden/seguimiento', 'POST', 1, 3, '{\r\n    nota : "La computadora se esta formateando. Avisar al cliente que necesita mas RAM para instalar AUTOCAD como ordeno",\r\n    id_orden_de_servicio : 1\r\n}', '{\r\n   "success"   : true\r\n}', 'Realizar un seguimiento a una orden de servicio existente. Puede usarse para agregar detalles a una orden pero no para editar detalles previos. Puede ser que se haya hecho un abono', 'Realizar un seguimiento a una orden de servicio existente', 0),
(113, 14, 'api/servicios/orden/terminar', 'POST', 1, 3, '{\r\n   "id_orden" : 4\r\n}', '{\r\n    "success" : true\r\n}', 'Dar por terminada una orden, al momento de terminarse una orden se genera una venta, por lo tanto, al terminar la orden hay que especificar datos de la misma.', 'Dar por terminada una orden', 0),
(114, 15, 'api/pos/hash', 'GET', 1, 5, '{\r\n}', '{\r\n    "success"  : true\r\n}', 'Gerenra y /o valida un hash', 'Gerenrar y /o validar un hash', 0),
(115, 15, 'api/pos/probar_conexion', 'GET', 1, 5, '{\r\n}', '{\r\n   "success": true"\r\n}', 'Cuando un cliente pierde comunicacion se lanzan peticiones a intervalos pequenos de tiempo para revisar conectividad. Esos requests deberan hacerse a este metodo para que el servidor se de cuenta de que el cliente perdio conectvidad y tome medidas aparte como llenar estadistica de conectividad, ademas esto asegurara que el cliente puede enviar cambios ( compras, ventas, nuevos clientes ) de regreso al servidor. ', 'Envia una peticion al servidor para probar la conexion', 0),
(116, 15, 'api/pos/bd/respaldar', 'GET', 1, 0, '{\r\n}', '{\r\n   "success" : true\r\n}', 'Si el cliente lo desea puede respaldar toda su informacion personal. Esto descargara la base de datos y los documentos que se generan automaticamente como las facturas. Para descargar la base de datos debe tenerse un grupo de 0 o bien el permiso correspondiente.', 'Hacer un respaldo externo de la base de datos.', 0),
(117, 16, 'api/documento/lista', 'GET', 1, 2, '', '{\r\n   "success"    : true,\r\n   "documentos" :\r\n       [\r\n          {\r\n              "id_documento"  : 2\r\n          }\r\n       ]\r\n} ', 'Lista los documentos en el sistema. Se puede filtrar por activos y por la empresa. Se puede ordenar por sus atributos', 'Listar documentos en el sistema.', 0),
(118, 16, 'api/documento/nuevo', 'GET', 1, 1, '{\r\n}', '{\r\n    "success"  : true,\r\n    "id_documento" : 5\r\n}', 'Crea un nuevo documento.\r\n\r\n<br/><br/><b>Update :</b> Falta indicar en los argumentos el si el documeto esta activo y a que sucursal pertenece.', 'Crea un nuevo documento', 0),
(119, 16, 'api/documento/editar', 'GET', 1, 1, '{\r\n   "id_documento"  : 5\r\n}', '{\r\n   "success" : true\r\n}', '<br/><br/><b>Update :</b> Falta indicar en los argumentos el si el documeto esta activo y a que sucursal pertenece.', 'Edita un documento', 0),
(120, 16, 'api/documento/factura/imprimir_xml', 'GET', 1, 3, '{\r\n   "id_venta" : 445\r\n}', '{\r\n   "success" : true,\r\n   "facturaXML" :\r\n               {\r\n               }\r\n} ', 'Imprime el xml de una factura.\r\n\r\n<br/><br/><b>Update :</b> No se si este metodo tenga una utilidad real, ya que cuando se recibe el XML timbrado, se crea el archivo .xml y en el unico momento que se vuelve a ocupar es para enviarlo por correo al cliente.', 'Imprime el xml de una factura', 0),
(121, 16, 'api/documento/factura/imprimir', 'GET', 1, 3, '{\r\n   "id_folio" : 5\r\n}', '{\r\n   "success" : true,\r\n   "factura" :\r\n            {\r\n            }\r\n}', 'Imprime una factura\r\n<br/><br/><b>Update :</b> La respuesta solo debería de contener success :true | false, y en caso de error, su descripcion, no se necesita apra anda en el JSON de respuesta una propiedad factura.', 'Imprime una factura', 0),
(122, 16, 'api/documento/factura/cancelar', 'GET', 1, 3, '{\r\n   "id_folio" : 5\r\n}', '{\r\n    "success" : true\r\n}', 'Cancela una factura.', 'Cancela una factura', 0),
(123, 16, 'api/documento/factura/generar', 'GET', 1, 3, '{\r\n  "id_cliente" : 3,\r\n  "id_venta"   : 70\r\n}', '{\r\n   "success" : true,\r\n   "id_folio"  : 5\r\n}', 'Genera una factura según la información de un cliente y la venta realizada.\r\n\r\n<br/><br/><b>Update :</b> Falta especificar si seria una factura detallada (cuando en los conceptos de la factura describe a cada articulo) o generica (un solo concepto que engloba a todos los productos).', 'Genera una factura', 0),
(124, 16, 'api/documento/nota_de_venta/imprimir', 'GET', 1, 3, '{\r\n   "id_venta"    : 34,\r\n   "id_impresora": 14\r\n}', '{\r\n   "success" : true\r\n}', 'Imprime una nota de venta de acuerdo al id_venta y al id_impresora', 'Imprime una nota de venta', 0),
(125, 16, 'api/documento/estado_de_cuenta/imprimir', 'GET', 1, 3, '{\r\n   "id_cliente" : 45\r\n}', '{\r\n    "success"      : true,\r\n    "estado_cuenta":\r\n                   {\r\n                   }\r\n}', 'Imprime un estado de cuenta de un cliente.', 'Imprime un estado de cuenta', 0),
(126, 15, 'api/pos/client/check_current_client_version', 'GET', 1, 5, '{\r\n}', '{\r\n  "success" : true\r\n}', 'Revisar la version que esta actualmente en el servidor. ', 'Revisar la version que esta actualmente en el servidor', 0),
(127, 15, 'api/pos/client/download', 'GET', 1, 5, '{\r\n}', '{\r\n    "success" : true,\r\n}', 'Descargar un zip con la ultima version del cliente.', 'Descargar un zip con la ultima version del cliente', 0),
(128, 18, 'api/administracion/facturas/lista', 'GET', 1, 2, '', '{\r\n   "success"  : true,\r\n   "facturas" : \r\n              [\r\n                  {\r\n                     "id_folio"  : 13,\r\n                     "fecha"     : "13 de abril del 2011 08:00:04"\r\n                  }\r\n              ]\r\n}', 'Lista todas las facturas emitadas. Puede filtrarse por empresa, sucursal, estado y ordenarse por sus atributos \r\n\r\n<br/><br/><b>Update :</b> ¿Es correcto como se esta manejando el argumento id_sucursal? Ya que entiendo que de esta manera solo se estan obteniendo las facturas de una sola sucursal.', 'Lista todas las facturas emitadas', 0),
(129, 19, 'api/reporte/nuevo', 'GET', 1, 1, '{\r\n}', '{\r\n    "success" : true,\r\n    "id_reporte" : 14\r\n}', 'Un usuario con grupo 1 o con el permiso puede generar reportes a la medida.', 'genera un reporte a la medida', 0),
(130, 19, 'api/reporte/nuevo/revisar_syntax', 'GET', 1, 1, '{\r\n    "nuevo_reporte"  :\r\n                 {\r\n                 }\r\n}', '{\r\n     "success"  : true\r\n}', 'Revisar la syntaxis de un JSON que resulta de crear un nuevo reporte.', 'Revisar la syntaxis de un JSON que resulta de crear un nuevo reporte.', 0),
(131, 19, 'api/reporte/detalle', 'GET', 1, 1, '{\r\n   "id_reporte"   : 15\r\n}', '{\r\n    "success"         : true,\r\n    "detalle_reporte" : \r\n         {\r\n            "id_reporte"   : 15,\r\n            "administrador": 3\r\n         }\r\n}', 'Obtener un detalle de un reporte', 'Obtener un detalle de un reporte', 0),
(132, 19, 'api/reporte/lista', 'GET', 1, 1, '', '{\r\n     "success"  : true,\r\n     "reportes" : \r\n              [\r\n                 {\r\n                 }\r\n              ]\r\n}', 'Lista todos los reportes, pueden filtrarse por empresa, por sucursal, y ordenarse por sus atributos.', 'Lista todos los reportes', 0),
(133, 19, 'api/reporte/cliente/productos', 'GET', 1, 1, '{\r\n   "id_cliente"  : 3\r\n}', '{\r\n   "success" : true,\r\n   "productos" :\r\n         [\r\n             {\r\n                  "producto" :\r\n                    {\r\n                        "id_producto" : 3,\r\n                        "nombre"      : "papas"\r\n                    }\r\n             }\r\n         ]\r\n}', 'Muestra una lista de los servicios que ha comprado el cliente con su cantidad, puede ordenarse por cantidad.Puede filtrarse por un cliente especifico, por la sucursal en la que compro, la empresa en la que compro.', 'Muestra una lista de los productos que ha comprado el cliente con su cantidad', 0),
(134, 19, 'api/reporte/servicio_cliente', 'GET', 1, 1, '{\r\n    "id_cliente" : 4\r\n}', '{\r\n    "success"  : true,\r\n    "Lista_servicios_cliente":\r\n           [\r\n               {\r\n                   "servicio"  :\r\n                       {\r\n                           "id_servicio" : 4,\r\n                           "nombre"      : "Mantenimiento de computadora"\r\n                       },\r\n                    "cantidad" : 4\r\n               }\r\n           ]', 'Muestra una lista de los servicios que ha comprado el cliente con su cantidad, puede ordenarse por cantidad.Puede filtrarse por un cliente especifico, por la sucursal en la que compro, la empresa en la que compro.', 'Muestra una lista de los servicios que ha comprado el cliente con su cantidad', 0),
(135, 20, 'api/impuesto/nuevo', 'POST', 1, 1, '{\r\n    "nombre"      :  "IVA",\r\n    "descripcion" :  "Impuesto de Valor  Agregado",\r\n    "importe"       :  0.16,\r\n    "tipo" : 0,\r\n    "impuestos_hijos" : [],\r\n    "impuestos_en_hijos" : 0,\r\n    "incluido_en_importe_base" : 0,\r\n    "secuencia" : 1\r\n    "codigo" : "IVA001",\r\n    "aplicacion" : "2"\r\n}', '{\r\n   "status" : "ok",\r\n   "id_impuesto" : 13 \r\n}', 'Crear un nuevo impuesto. <b>Falta revisar bien lo de contabilidad, para saber como se van a ligar los impuestos con las cuentas, pero omitiendo las ligas con las cuentas seria esto.</b>', 'Crear un nuevo impuesto.', 0),
(137, 26, 'api/almacen/nuevo', 'POST', 1, 1, '{\r\n   "id_empresa" : 1,\r\n   "id_sucursal"  : 3,\r\n   "id_tipo_almacen" : 2, \r\n   "nombre"       : "almacen sur",\r\n   "descripcion"  : "Almacen para elotes grandes"\r\n}', '{\r\n    "id_almacen": 2,\r\n    "status": "ok"\r\n}', 'Creara un nuevo almacen en una sucursal, este almacen contendra lotes.', 'Crear un nuevo almacen en una sucursal', 0),
(138, 26, 'api/almacen/buscar', 'GET', 1, 2, '', '{\r\n    "resultados" : [\r\n        {\r\n            "id_almacen" : 15,\r\n            "id_sucursal" : 2,\r\n            "id_empresa" : 8\r\n            "id_tipo_almacen" : 2,\r\n            "nombre"      :  "Almacen Las fuentes",\r\n            "descripcion" :  "Aqui se tiene unicamente puro consumible",\r\n            "activo"       :  true,\r\n        },{            \r\n            "id_almacen" : 16,\r\n            "id_sucursal" : 3,\r\n            "id_empresa" : 8\r\n            "id_tipo_almacen" : 2,\r\n            "nombre"      :  "Almacen Caffeina",\r\n            "descripcion" :  "Aqui se tiene unicamente puro servicio",\r\n            "activo"       :  true,\r\n        }\r\n    ] \r\n    "numero_de_resultados" : 2,\r\n    "status" : "ok"\r\n}', 'listar almacenes de la isntancia. Se pueden filtrar por empresa, por sucursal, por tipo de almacen, por activos e inactivos y ordenar por sus atributos.', 'Buscar almacenes', 0),
(139, 8, 'api/sucursal/caja/nueva', 'POST', 1, 1, '', '', 'Este metodo creara una caja asociada a una sucursal. Debe haber una caja por CPU. ', 'Crear una caja en la sucursal', 0),
(141, 10, 'api/proveedor/eliminar', 'GET', 1, 1, '{\r\n    "id_proveedor" : 5\r\n}', '{\r\n   "success"  : true\r\n}', 'Este metodo desactiva un proveedor. Para que este metodo funcione, no debe de haber ordenes de compra hacia ese proveedor <b>??</b>', 'Desactiva un proveedor', 0),
(142, 21, 'api/producto/desactivar', 'GET', 1, 1, '{\r\n   "id_producto"  : 3\r\n}', '{\r\n    "status" : "ok"\r\n}', 'Este metodo sirve para dar de baja un producto', 'Desactiva un producto', 0),
(143, 21, 'api/producto/editar', 'GET', 1, 1, '', '{\r\n   "success" : true\r\n}', 'Edita la información de un producto', 'Edita un producto', 0),
(144, 14, 'api/servicios/eliminar', 'GET', 1, 1, '{\r\n    "id_servicio"  : 10\r\n}', '{\r\n    "success"  : true\r\n}', 'Da de baja un servicio que ofrece una empresa', 'Desactiva un servicio', 0),
(145, 12, 'api/carro/registrar_llegada', 'GET', 1, 3, '{\r\n}', '{\r\n   "success" : true\r\n}', 'Registra la llegada de un carro a una sucursal. La fecha sera tomada del servidor', 'Registra llegada del carro', 0),
(146, 12, 'api/carro/editar', 'GET', 1, 1, '{\r\n}', '{\r\n    "success"  : true\r\n}', 'Edita la informacion de un carro', 'Edita un carro', 0),
(147, 12, 'api/carro/tipo/nuevo', 'GET', 1, 1, '{\r\n   "nombre_tipo" : "camion"\r\n}', '{\r\n    "success"  : true,\r\n    "id_tipo_carro" : 4\r\n}', 'Agrega un nuevo tipo de carro ( camion, camioneta, etc)', 'Agrega un nuevo tipo de carro', 0),
(148, 12, 'api/carro/tipo/editar', 'GET', 1, 1, '{\r\n    "id_tipo_carro"     : 1,\r\n    "nombre_tipo_carro" : "CAMION"\r\n}', '{\r\n    "success"  : true\r\n}', 'Edita un registro de tipo de carro (camion, camioneta, etc)', 'Edita un tipo de carro', 0),
(149, 12, 'api/carro/modelo/nuevo', 'GET', 1, 1, '{\r\n    "nombre_modelo"  : "2011"\r\n}', '{\r\n     "success"    : true,\r\n     "id_modelo"  : 3\r\n}', 'Crea un nuevo modelo de carro', 'Crea un nuevo modelo de carro', 0),
(150, 12, 'api/carro/modelo/editar', 'GET', 1, 1, '{\r\n   "id_modelo_carro"    : 1,\r\n   "nombre_modelo_carro": "99"\r\n}', '{\r\n   "success" : true\r\n}', 'Editar el modelo del carro', 'Editar el modelo del carro', 0),
(151, 12, 'api/carro/marca/nuevo', 'GET', 1, 1, '{\r\n   "nombre_marca"   : "Nissan"\r\n}', '{\r\n     "success"        : true,\r\n     "id_marca_carro" : 14\r\n}', 'Agrega una nueva marca de carro', 'Agrega una nueva marca de carro', 0),
(152, 12, 'api/carro/marca/editar', 'GET', 1, 1, '{\r\n   "id_marca_carro" : 14,\r\n   "nombre_marca"   : "NISSAN"\r\n}', '{\r\n    "success"  : true\r\n}', 'Edita una marca de un carro', 'Edita una marca de un carro', 0),
(154, 7, 'api/efectivo/ingreso/nuevo', 'GET', 1, 3, '', '', 'Registra un nuevo ingreso', 'Registra un nuevo ingreso', 0),
(157, 3, 'api/cliente/clasificacion/nueva', 'POST', 1, 1, '', '', 'Los cliente forzosamente pertenecen a una categoria. En base a esta categoria se calcula el precio que se le dara en una venta, o el descuento, o el credito.', 'Crear una nueva clasificacion de cliente.', 0),
(158, 3, 'api/cliente/clasificacion/buscar', 'GET', 1, 3, '{\r\n    "query": "preferencial",\r\n    "start": 0,\r\n    "limit": 50\r\n}', '{\r\n   "status" : "ok",\r\n    "numero_de_resultados" : 1,\r\n    "resultados": [\r\n        {\r\n            "id_clasificacion_cliente": 12,\r\n            "clave_interna": "compras mensuales mayores a $10000.00",\r\n            "nombre": "Preferenciales",\r\n            "descripcion": "Clientes Preferenciales"\r\n        }\r\n    ]\r\n}', 'Busca una clasificación por clave, nombre o descripción', 'Lista de las clasificaciones existentes', 0),
(159, 13, 'api/consignacion/consignatario/desactivar', 'GET', 1, 2, '{\r\n    "id_cliente"  : 3\r\n}', '{\r\n    "success"  : true\r\n}', 'Desactiva la bandera de consignatario a un cliente y elimina su almacen correspondiente. Para poder hacer esto, el almacen debera estar vacio.', 'Desactiva un consignatario', 0),
(160, 13, 'api/consignacion/inspeccion/abonar', 'GET', 1, 3, '', '', 'Abona un monto de dinero a una inspeccion ya registrada. La fecha sera tomada del sistema. Este metodo sera usado cuando el inspector llegue a la sucursal y deposite el dinero en la caja, de tal forma que se lleve un registro de cuando y cuanto deposito el dinero por el pago de la consignacion, asi como saber si el inspector ya realizo el deposito del dinero que se le consigno.', 'Abona un monto de dinero a una inspeccion ya registrada', 0),
(161, 13, 'api/consignacion/inspeccion/nueva', 'GET', 1, 2, '', '', 'Registra en que fecha se le hara una inspeccion a un cliente con consignacion ', 'Calendariza una nueva inspeccion', 0),
(162, 13, 'api/consignacion/inspeccion/cambiar_fecha', 'GET', 1, 2, '', '', 'Usese este metodo cuando se posterga o se adelanta una inspeccion', 'Cambia la fecha de una inspeccion ', 0),
(163, 13, 'api/consignacion/inspeccion/cancelar', 'GET', 1, 2, '', '', 'Este metodo sirve para cancelar una inspeccion que aun no ha sido registrada. Sirve cuando se cancela una orden de consignacion y por consiguiente se tienen que cancelar las inspecciones programadas para esa consignacion.', 'Cancela una inspeccion que aun no ha sido registrada', 0),
(164, 13, 'api/consignacion/editar', 'GET', 1, 2, '', '', 'Edita una consignacion, ya sea que agregue o quite productos a la misma. La fecha se toma del sistema.', 'Edita una consignacion', 0),
(165, 26, 'api/almacen/salida', 'POST', 1, 2, '', '', 'Envia productos fuera del almacen. Ya sea que sea un traspaso de un alamcen a otro o por motivos de inventarios fisicos.', 'Envia productos fuera del almacen', 0),
(169, 6, 'api/personal/rol/nuevo', 'POST', 1, 1, '{ "nombre" : "nombre2", "descripcion" : "descripcion", "salario" : 1 }', '{"status": "ok" }', 'Crea un nuevo grupo de usuarios. Se asignaran los permisos de este grupo al momento de su creacion.', 'Crea un nuevo grupo de usuarios', 0),
(170, 6, 'api/personal/rol/editar', 'POST', 1, 1, '', '', 'Edita la informacion de un grupo, puede usarse para editar los permisos del mismo', 'Edita un grupo', 0),
(171, 6, 'api/personal/usuario/eliminar', 'POST', 1, 1, '', '', 'Este metodo desactiva un usuario, usese cuando un empleado ya no trabaje para usted. Que pasa cuando el usuario tiene cuentas abiertas o ventas a credito con saldo.', 'Desactivar un usuario', 0),
(172, 6, 'api/personal/rol/eliminar', 'POST', 1, 1, '', '', 'Este metodo desactiva un grupo, solo se podra desactivar un grupo si no hay ningun usuario que pertenezca a él.', 'Elimina un grupo', 0),
(173, 21, 'api/producto/categoria/nueva', 'GET', 1, 1, '', '', 'Crea una nueva categoria de producto, la categoria de un producto se relaciona con los meses de garantia del mismo, las unidades en las que se almacena entre, si se es suceptible a devoluciones, entre otros.', 'Crea una nueva categoria de producto', 0),
(174, 21, 'api/producto/categoria/editar', 'GET', 1, 1, '', '', 'Este metodo cambia la informacion de una categoria de producto', 'Edita una categoria de producto', 0),
(175, 21, 'api/producto/categoria/desactivar', 'GET', 1, 1, '', '', 'Este metodo desactiva una categoria de tal forma que ya no se vuelva a usar como categoria sobre un producto.', 'Desactiva una categoria', 0),
(179, 21, 'api/producto/unidad/nueva', 'GET', 1, 1, '', '', 'Este metodo crea unidades, como son Kilogramos, Libras, Toneladas, Litros, costales, cajas, arpillas, etc.', 'Crea una nueva unidad', 0),
(180, 21, 'api/producto/unidad/editar', 'GET', 1, 1, '', '', 'Este metodo modifica la informacion de una unidad', 'Edita una unidad', 0),
(181, 21, 'api/producto/unidad/eliminar', 'GET', 1, 1, '', '', 'Descativa una unidad para que no sea usada por otro metodo', 'Elimina una unidad', 0),
(182, 8, 'api/sucursal/caja/corte', 'GET', 1, 2, '', '', 'Realiza un corte de caja. Este metodo reduce el dinero de la caja y va registrando el dinero acumulado de esa caja. Si faltase dinero se carga una deuda al cajero. La fecha sera tomada del servidor. El usuario sera tomado de la sesion.', 'Realiza un corte de caja', 0),
(187, 7, 'api/efectivo/abono/editar', 'GET', 1, 3, '', '', 'Edita la información de un abono', 'Edita un abono', 0),
(188, 7, 'api/efectivo/abono/eliminar', 'GET', 1, 3, '', '', 'Cancela un abono', 'Elimina un abono', 0),
(189, 7, 'api/efectivo/abono/lista', 'GET', 1, 3, '', '', 'Lista los abonos, puede filtrarse por empresa, por sucursal, por caja, por usuario que abona y puede ordenarse segun sus atributos', 'Lista los abonos', 0),
(190, 7, 'api/efectivo/gasto/eliminar', 'GET', 1, 3, '', '', 'Cancela un gasto ', 'Elimina un gasto', 0),
(191, 7, 'api/efectivo/gasto/lista', 'GET', 1, 3, '', '', 'Lista los gastos, se puede filtrar de acuerdo a la empresa, la sucursal, el usuario que registra el gasto, el concepto de gasto, la orden de servicio, la caja de la cual se sustrajo el dinero para pagar el gasto, de una fecha inicial a una final, por monto, por cancelacion, y se puede ordenar de acuerdo a ss atributos.', 'Lista los gastos', 0),
(192, 7, 'api/efectivo/ingreso/eliminar', 'GET', 1, 3, '', '', 'Cancela un ingreso', 'Elimina un ingreso', 0),
(193, 7, 'api/efectivo/ingreso/lista', 'GET', 1, 3, '', '', 'Lista los ingresos, se puede filtrar de acuerdo a la empresa, la sucursal, el usuario que registra el ingreso, el concepto de ingreso, la caja que recibió el ingreso, de una fecha inicial a una final, por monto, por cancelacion, y se puede ordenar de acuerdo a sus atributos.', 'Lista los ingresos', 0),
(194, 9, 'api/ventas/nueva', 'POST', 1, 2, '{\r\n    retencion: 0,\r\n    descuento: 0,\r\n    tipo_venta: "contado",\r\n    impuesto: 0,\r\n    subtotal: 5,\r\n    total: 5,\r\n    id_comprador_venta: 5,\r\n    id_sucursal: 1,\r\n    detalle_venta: [\r\n        {\r\n            id_producto: 5,\r\n            cantidad: 1,\r\n            precio: 5,\r\n            descuento: 0,\r\n            impuesto: 0,\r\n            retencion: 0,\r\n            id_unidad: 1\r\n        }\r\n    ]\r\n}', '', 'Genera una venta fuera de caja, puede usarse para que el administrador venda directamente a clientes especiales. EL usuario y la sucursal seran tomados de la sesion. La fecha se tomara del servidor. La empresa sera tomada del alamacen del que fueron tomados los productos.\r\n\r\nSi hay dos productos en una misma sucursal pero disntintos almacenes entonces se intentara nivelar los almacenes al mismo valor.', 'Genera una venta fuera de caja', 0),
(195, 9, 'api/ventas/nueva_venta_arpillas', 'GET', 1, 2, '', '', 'Realiza una nueva venta por arpillas. Este método tiene que llamarse en conjunto con el metodo api/ventas/nueva.', 'Realiza una nueva venta por arpillas', 0),
(196, 9, 'api/ventas/detalle_venta_arpilla', 'GET', 1, 2, '', '', 'Muestra el detalle de una venta por arpilla. Este metodo no muestra los productos de una venta, sino los detalles del embarque de la misma. Para ver los productos de una venta refierase a api/ventas/detalle', 'Muestra el detalle de una venta por arpilla', 0),
(197, 11, 'api/compras/cancelar', 'GET', 1, 2, '', '', 'Cancela una compra', 'Cancela una compra', 0),
(198, 11, 'api/compras/detalle', 'GET', 1, 2, '', '', 'Muestra el detalle de una compra', 'Muestra el detalle de una compra', 0),
(199, 11, 'api/compras/lista', 'GET', 1, 2, '', '', 'Lista las compras. Se puede filtrar por empresa, sucursal, caja, usuario que registra la compra, usuario al que se le compra, tipo de compra, si estan pagadas o no, por tipo de pago, canceladas o no, por el total, por fecha, por el tipo de pago y se puede ordenar por sus atributos.', 'Lista las compras', 0),
(201, 20, 'api/impuesto/editar', 'GET', 1, 2, '{\r\n    "id_impuesto" : 2\r\n    "nombre"      :  "IVA",\r\n    "descripcion" :  "Impuesto de Valor  Agregado",\r\n    "importe"       :  0.16,\r\n    "tipo" : 0,\r\n    "impuestos_hijos" : [],\r\n    "impuestos_en_hijos" : 0,\r\n    "incluido_en_importe_base" : 0,\r\n    "secuencia" : 1,\r\n    "codigo" : "IVA001",\r\n    "aplicacion" : "2"\r\n}', '{\r\n   "status" : "ok"\r\n}', 'Edita la informacion de un impuesto', 'Edita un impuesto', 0),
(204, 20, 'api/impuesto/lista', 'GET', 1, 3, '{\r\n    "start" : 0,\r\n    "limit" : 20,\r\n    "query" : "I",\r\n    "sort" : "importe"\r\n}', '{\r\n    resultados : [\r\n        {\r\n            "nombre"      :  "IVA",\r\n            "descripcion" :  "Impuesto de Valor  Agregado",\r\n            "importe"       :  0.16,\r\n            "tipo" : 0,\r\n            "impuestos_hijos" : [],\r\n            "impuestos_en_hijos" : 0,\r\n            "incluido_en_importe_base" : 0,\r\n            "secuencia" : 1\r\n        },{\r\n            "nombre"      :  "IETU",\r\n            "descripcion" :  "Impuesto de ",\r\n            "importe"       :  0.10,\r\n            "tipo" : 0,\r\n            "impuestos_hijos" : [],\r\n            "impuestos_en_hijos" : 0,\r\n            "incluido_en_importe_base" : 0,\r\n            "secuencia" : 3\r\n        }\r\n    ] \r\n    "numero_de_resultados" : 2,\r\n    "status" : "ok"\r\n}', 'Listas los impuestos', 'Lista los impuestos', 0),
(207, 6, 'api/personal/rol/lista', 'GET', 1, 3, '', '', 'Lista los roles, se puede filtrar por empresa y ordenar por sus atributos', 'Lista los roles', 0),
(208, 6, 'api/personal/usuario/permiso/asignar', 'POST', 1, 3, '', '', 'Asigna uno o varios permisos especificos a un usuario. No se pueden asignar permisos que ya se tienen', 'Asigna unpo varios permisos especificos a un usuario', 0),
(209, 6, 'api/personal/rol/permiso/asignar', 'POST', 1, 2, '', '', 'Este metodo asigna permisos a un rol. Cada vez que se llame a este metodo, se asignaran estos permisos a los usuarios que pertenezcan a este rol.', 'Asigna permisos a un rol', 0),
(210, 6, 'api/personal/rol/permiso/remover', 'POST', 1, 2, '', '', 'Este metodo quita un permiso de un rol. Al remover este permiso de un rol, los permisos que un usuario especifico tiene gracias a una asignacion especial se mantienen. ', 'Quita uno o varios permisos a un rol', 0),
(211, 6, 'api/personal/usuario/permiso/remover', 'POST', 1, 2, '', '', 'Quita uno o varios permisos a un usuario. No se puede negar un permiso que no se tiene', 'Quita uno o varios permisos a un usuario', 0),
(226, 3, 'api/cliente/clasificacion/editar', 'POST', 1, 1, '', '', 'Edita la informacion de la clasificacion de cliente', 'Edita la clasificacion de cliente', 0),
(229, 10, 'api/proveedor/clasificacion/nueva', 'GET', 1, 1, '', '', 'Crea una nueva clasificacion de proveedor', 'Crea una nueva clasificacion de proveedor', 0),
(230, 10, 'api/proveedor/clasificacion/editar', 'GET', 1, 1, '', '', 'Edita la informacion de una clasificacion de proveedor', 'Edita la informacion de una clasificacion de proveedor', 0),
(231, 10, 'api/proveedor/clasificacion/eliminar', 'GET', 1, 1, '', '', 'Desactiva una clasificacion de proveedor', 'Elimina una clasificacion de proveedor', 0),
(232, 14, 'api/servicios/clasificacion/nueva', 'GET', 1, 1, '', '', 'Genera una nueva clasificacion de servicio', 'Genera una nueva clasificacion de servicio', 0),
(233, 14, 'api/servicios/clasificacion/editar', 'GET', 1, 1, '', '', 'Edita la información de una clasificación de servicio', 'Edita una clasificacion de servicio', 0),
(234, 14, 'api/servicios/clasificacion/eliminar', 'GET', 1, 1, '', '', 'Elimina una clasificacion de servicio', 'Elimina una clasificacion de servicio', 0),
(235, 14, 'api/servicios/orden/cancelar', 'GET', 1, 3, '', '', 'Cancela una orden de servicio. Cuando se cancela un servicio, se cancelan tambien las ventas en las que aparece este servicio.', 'Cancela una orden de servicio', 0),
(236, 26, 'api/almacen/desactivar', 'POST', 1, 1, '{\r\n   "id_almacen" : 1\r\n}', '{\r\n   "status" : "ok"\r\n}', 'Descativa un almacen. Para poder desactivar un almacen, este tiene que estar vacío', 'Elimina un almacen', 0),
(237, 26, 'api/almacen/editar', 'POST', 1, 1, '{\r\n    "id_almacen": 2,\r\n    "descripcion": "Es el almacén de las Fuentes",\r\n    "id_tipo_almacen": 3\r\n}', '{\r\n    "status" : "ok"\r\n}', 'Edita la informacion de un almacen', 'Edita la informacion de un almacen', 0),
(239, 8, 'api/sucursal/caja/editar', 'GET', 1, 1, '', '', 'Edita la informacion de una caja', 'Edita la informacion de una caja', 0),
(240, 8, 'api/sucursal/caja/eliminar', 'GET', 1, 1, '', '', 'Desactiva una caja, para que la caja pueda ser desactivada, tieneq ue estar cerrada', 'Elimina una caja', 0),
(241, 8, 'api/sucursal/eliminar', 'GET', 1, 1, '', '', 'Desactiva una sucursal. Para poder desactivar una sucursal su saldo a favor tiene que ser mayor a cero y sus almacenes tienen que estar vacios.', 'Elimina una sucursal', 0),
(242, 23, 'api/paquete/nuevo', 'GET', 1, 1, '', '', 'Agrupa productos y/o servicios en un paquete', 'Crea un nuevo paquete', 0),
(243, 23, 'api/paquete/editar', 'GET', 1, 1, '', '', 'Edita la informacion de un paquete', 'Edita la informacion de un paquete', 0),
(244, 23, 'api/paquete/eliminar', 'GET', 1, 1, '', '', 'Desactiva un paquete.', 'Elimina un paquete', 0),
(245, 23, 'api/paquete/activar', 'GET', 1, 1, '', '', 'Activa un paquete previamente desactivado', 'Activa un paquete', 0),
(246, 23, 'api/paquete/lista', 'GET', 1, 3, '', '', 'Lista los paquetes, se puede filtrar por empresa, por sucursal, por producto, por servicio y se pueden ordenar por sus atributos', 'Lista los paquetes', 0),
(247, 23, 'api/paquete/detalle', 'GET', 1, 3, '', '', 'Muestra los productos y/o servicios englobados en este paquete así como las sucursales y las empresas donde lo ofrecen', 'Muestra el detalle de un paquete', 0),
(248, 26, 'api/almacen/traspaso/programar', 'GET', 1, 2, '', '', 'Crea un registro de traspaso de producto de un almacen a otro. El usuario que envia sera tomada de la sesion.', 'Crea un registro de traspaso', 0),
(249, 26, 'api/almacen/traspaso/enviar', 'GET', 1, 2, '', '', 'Cambia el estado del traspaso a enviado y captura la fecha de envio del servidor. El usuario que envia sera tomado del servidor.', 'Envia un traspaso de productos', 0),
(250, 26, 'api/almacen/traspaso/recibir', 'GET', 1, 2, '', '', 'Cambia el estado de un traspaso a recibido. La  bandera de completo se prende si los productos enviados son los mismos que los recibidos. La fecha de recibo es tomada del servidor. El usuario que recibe sera tomada de la sesion actual.', 'Recibe un traspaso de producto', 0),
(251, 26, 'api/almacen/traspaso/cancelar', 'POST', 1, 2, '', '', 'Para poder cancelar un traspaso, este no tuvo que haber sido enviado aun.', 'Cancela un traspaso', 0),
(252, 26, 'api/almacen/traspaso/buscar', 'GET', 1, 3, '', '', 'Lista los traspasos de almacenes. Puede filtrarse por empresa, por sucursal, por almacen, por producto, cancelados, completos, estado', 'Lista los traspasos', 0),
(253, 26, 'api/almacen/traspaso/editar', 'GET', 1, 2, '', '', 'Para poder editar un traspaso,este no tuvo que haber sido enviado aun', 'Edita la informacion de un traspaso', 0),
(254, 24, 'api/efectivo/billete/nuevo', 'GET', 1, 1, '', '', 'Crea un nuevo billete, se puede utilizar para monedas tambien.', 'Crea un nuevo billete', 0),
(255, 24, 'api/efectivo/billete/editar', 'GET', 1, 1, '', '', 'Edita la informacion de un billete', 'Edita la informacion de un billete', 0),
(256, 24, 'api/efectivo/billete/eliminar', 'GET', 1, 1, '', '', 'Desactiva un billete', 'Elimina un billete', 0),
(257, 24, 'api/efectivo/billete/lista', 'GET', 1, 3, '', '', 'Lista los billetes de una instancia', 'Lista los billetes', 0),
(258, 24, 'api/efectivo/moneda/nueva', 'GET', 1, 1, '', '', 'Crea una moneda, "pesos", "dolares", etc.', 'Crea una nueva moneda', 0),
(259, 24, 'api/efectivo/moneda/editar', 'GET', 1, 1, '', '', 'Edita la informacion de una moneda', 'Edita la informacion de una moneda', 0),
(260, 24, 'api/efectivo/moneda/eliminar', 'GET', 1, 1, '', '', 'Desactiva una moneda', 'Elimina una moneda', 0),
(261, 24, 'api/efectivo/moneda/lista', 'GET', 1, 3, '', '', 'Lista las monedas de una instancia', 'Lista las moendas', 0),
(262, 21, 'api/producto/unidad/nueva_equivalencia', 'GET', 1, 1, '', '', 'Crea un registro de la equivalencia entre una unidad y otra. Ejemplo: 1 kg = 2.204 lb', 'Crea una equivalencia entre una unidad y otra', 0),
(263, 21, 'api/producto/unidad/editar_equivalencia', 'GET', 1, 1, '', '', 'Edita la equivalencia entre dos unidades.\r\n1 kg = 2.204 lb', 'Edita la equivalencia entre dos unidades', 0),
(264, 21, 'api/producto/unidad/lista_equivalencia', 'GET', 1, 3, '', '', 'Lista las equivalencias existentes. Se puede ordenar por sus atributos', 'Lista las equivalencias existentes', 0),
(265, 21, 'api/producto/unidad/eliminar_equivalencia', 'GET', 1, 1, '', '', 'Elimina una equivalencia entre dos unidades.\r\nEjemplo: 1 kg = 2.204 lb', 'Elimina una equivalencia', 0),
(266, 6, 'api/personal/rol/permiso/lista', 'GET', 1, 3, '', '', 'Regresa un alista de permisos, nombres y ids de los permisos del sistema.', 'Listar los permisos del API', 0),
(267, 15, 'api/pos/bd/drop', 'POST', 0, 0, '', '', 'Metodo que elimina todos los registros en la base de datos, especialmente util para hacer pruebas unitarias. Este metodo NO estara disponible al publico.', 'Limpiar la base de datos y establecer los valores default', 0),
(268, 6, 'api/personal/usuario/permiso/lista', 'GET', 1, 3, '', '', 'Lista los permisos con los usuarios asigandos. Puede filtrarse por id_usuario o id_rol', 'Lista los permisos con sus usuarios', 0),
(269, 10, 'api/proveedor/clasificacion/lista', 'GET', 1, 3, '', '', 'Este emtodo lista las clasificaciones de proveedores', 'Lista las clasificaciones de proveedor', 0),
(279, 8, 'api/sucursal/caja/lista', 'GET', 1, 3, '', '', 'Lista las cajas. Se puede filtrar por la sucursal a la que pertenecen.', 'Lista las cajas', 0),
(280, 13, 'api/consignacion/cancelar', 'GET', 1, 2, '', '', 'Este metodo solo debe ser usado cuando no se ha vendido ningun producto de la consginacion y todos seran devueltos', 'Cancela una consignacion', 0),
(281, 3, 'api/cliente/buscar', 'GET', 1, 1, '{\r\n"query" : "alejandro",\r\n"start" : 0,\r\n"limit" :50,\r\n"id_sucursal" : 2\r\n}', '{\r\n    "resultados": [\r\n        {\r\n            "id_cliente": 1,\r\n            "activo": true,\r\n            "razon_social": "Tortas Rosa S.A. de C.V.",\r\n            "curp": "DASO751110HGTNRN12",\r\n            "representante_legal": "Juan Manuel Ricaño Castillo",\r\n            "denomincaion_comercial": "Tortas Rosa",\r\n            "rep_legal": "",\r\n            "id_tarifa": "",\r\n            "descuento_general": 10,\r\n            "limite_de_credito": 0,\r\n            "credito_restante": 0,\r\n            "clasisificaicon_cliente": {\r\n                "id_clasificacion": "",\r\n                "desc": ""\r\n            },\r\n            "fecha baja": "",\r\n            "facha edition": "13 de Mayo del 2011 8:10 pm",\r\n            "intereses moratorios": 0,\r\n            "dia de pago": "",\r\n            "dia de revision": "",\r\n            "segmento contable": "",\r\n            "saldo del ejercicio": 0,\r\n            "facturar a tercerros": false,\r\n            "moneda_del_cliente": {\r\n                "id_moneda": 2,\r\n                "descripcion": "Nuevos Pesos Mexicanos"\r\n            },\r\n            "ultima_modificacion": {\r\n                "fecha": "34567345",\r\n                "fecha_con_formato": "13 de Mayo del 2011 8:10 pm",\r\n                "id_usaurio": 10\r\n            },\r\n            "datos_fiscales": {\r\n                "razon_social": "Tortas Rosa S.A. de C.V.",\r\n                "rfc": "",\r\n                "calle": "Rio Lerma",\r\n                "numero_interior": "",\r\n                "numero_exterior": "310",\r\n                "colonia": "Centro",\r\n                "localidad": "Celaya",\r\n                "referencia": "Frente a Papeleria",\r\n                "municipio": "Celaya",\r\n                "estado": "Guanajuato",\r\n                "pais": "Mexíco",\r\n                "codigo_postal": "38000"\r\n            },\r\n            "direcciones": [\r\n                {\r\n                    "tipo": "envio",\r\n                    "calle": "Francisco I Madero",\r\n                    "numero_exterior": "1009A",\r\n                    "Colonia": "Centro",\r\n                    "codigo_postal": "38000",\r\n                    "telefono1": "4611223312",\r\n                    "e-mail": "tortas.rosy@gmail.com",\r\n                    "direccion_web": "tortasrosy.com",\r\n                    "id_iudad": 334,\r\n                    "referencia": "El local naranja"\r\n                },\r\n                {\r\n                    "tipo": "envio",\r\n                    "calle": "Francisco I Madero",\r\n                    "numero_exterior": "1009A",\r\n                    "Colonia": "Centro",\r\n                    "codigo_postal": "38000",\r\n                    "telefono1": "4611223312",\r\n                    "e-mail": "tortas.rosy@gmail.com",\r\n                    "direccion_web": "tortasrosy.com",\r\n                    "id_iudad": 334,\r\n                    "referencia": "El local naranja"\r\n                }\r\n            ],\r\n            "inscripcion": {\r\n                "id_usuario": 10,\r\n				"usuario_nombre" : "Roberto Gomez"\r\n                "id_sucursal": 15,\r\n				"sucursal_nombre" : "Las Fuentes",\r\n                "fecha": "56161548",\r\n                "fecha_con_formato": "10deAbrildel201110: 20am"\r\n            },\r\n            "sucursal": {\r\n                "id_sucursal": 15,\r\n                "nombre": "Sur"\r\n            },\r\n            "empresa": {\r\n                "id_empresa": 15,\r\n                "nombre": "Carnitaslacruz"\r\n            }\r\n        }\r\n    ],\r\n    "status": "ok",\r\n    "numero_de_resultados": 1\r\n}', 'Busca un cliente por su razon social, denominacion comercial, rfc o representante legal y regresa un objeto que contiene un conjunto de objetos que contiene la informacion de los clientes que coincidieron con la busqueda', 'Busca un cliente por su razon social, denominacion comercial, rfc o representante legal', 0),
(282, 21, 'api/producto/buscar', 'GET', 1, 1, '{\r\n"id_producto" : 18\r\n}', '{\r\n    "resultados": [\r\n        {\r\n            "id_producto": "18",\r\n            "compra_en_mostrador": "1",\r\n            "metodo_costeo": "precio",\r\n            "activo": "1",\r\n            "codigo_producto": "coca-cola",\r\n            "nombre_producto": "coca cola",\r\n            "garantia": null,\r\n            "costo_estandar": "0",\r\n            "control_de_existencia": null,\r\n            "descripcion": null,\r\n            "foto_del_producto": null,\r\n            "costo_extra_almacen": null,\r\n            "codigo_de_barras": "",\r\n            "peso_producto": null,\r\n            "id_unidad": null,\r\n            "precio": [\r\n                {\r\n                    "id_tarifa": 1,\r\n                    "precio": 100\r\n                },\r\n                {\r\n                    "id_tarifa": 2,\r\n                    "precio": 100\r\n                }\r\n            ]\r\n        }\r\n    ],\r\n    "numero_de_resultados": 1,\r\n    "status": "ok"\r\n}\r\n\r\n{\r\n    "success": "ok",\r\n    "numero_de_resultados": 2,\r\n    "resultados": [\r\n        {\r\n            "id producto": 45,\r\n            "empresa": {\r\n                "id empresa": 3,\r\n                "nombre empresa": "Arq-Serv"\r\n            },\r\n            "sucursal": {\r\n                "id sucursal": 2,\r\n                "nombre sucursal": "Sucursal Francisco I Madero"\r\n            },\r\n            "almacen": {\r\n                "id almacen": 4,\r\n                "nombre almacen": "Almacen central de abastos"\r\n            },\r\n            "lote": {\r\n                "id lote": 2,\r\n                "nombre lote": "Lote 101"\r\n            },\r\n            "precio": 25,\r\n            "escala": {\r\n                "id escala": 5,\r\n                "nombre escala": "Kilos"\r\n            },\r\n            "agrupación": {\r\n                "id agrupación": 3,\r\n                "nombre agrupación": "Paquetes"\r\n            },\r\n            "impuesto": {\r\n                "id impuesto": 3,\r\n                "nombre impuesto": "IVA",\r\n                "desc": 0.16\r\n            }\r\n        },\r\n        {\r\n            "id producto": 22,\r\n            "empresa": {\r\n                "id_empresa": 2,\r\n                "nombre_empresa": "Carnitas Rodrigo"\r\n            },\r\n            "sucursal": {\r\n                "id_sucursal": 3,\r\n                "nombre_sucursal": "Sucursal central de abastos"\r\n            },\r\n            "almacen": {\r\n                "id_almacen": 2,\r\n                "nombre_almacen": "Almacen Francisco I Madero"\r\n            },\r\n            "lote": {\r\n                "id lote": 5,\r\n                "nombre lote": "Lote AAD"\r\n            },\r\n            "precio": 70,\r\n            "escala": {\r\n                "id escala": 4,\r\n                "nombre escala": "gramos"\r\n            },\r\n            "agrupacion": {\r\n                "id_agrupacion": 9,\r\n                "nombre agrupación": "lingotes"\r\n            },\r\n            "impuesto": [{\r\n                "id_impuesto": 3,\r\n                "nombre impuesto": "Impuesto sobre la renta",\r\n                "desc": 0.3\r\n            }]\r\n        }\r\n    ]\r\n}', 'Buscar productos por codigo_producto, nombre_producto, descripcion_producto.\r\n', 'Buscar productos', 0),
(283, 14, 'api/servicios/orden/agregar_productos', 'GET', 1, 3, '', '', 'En algunos servicios, se realiza la venta de productos de manera indirecta, por lo que se tiene que agregar a la orden de servicio. Este metodo puede ser usado apra agregar mas cantidad de un producto a uno ya existente, en este caso se ignoran los campos impuesto, descuento y retencion del arreglo de productos.', 'Agrega uno o varios productos a una orden de servicio', 0),
(284, 14, 'api/servicios/orden/quitar_productos', 'GET', 1, 3, '', '', 'Este metodo se usa para quitar productos de una orden de servicio. Puede ser usado para reducir su cantidad o para retirarlo por completo', 'Retira productos de una orden de servicio', 0),
(285, 26, 'api/almacen/tipo/nuevo', 'POST', 1, 3, '{ "descripcion" : "almacen unico"}', '', 'Crea un nuevo tipo de almacen', 'Crea un nuevo tipo de almacen', 0),
(286, 26, 'api/almacen/tipo/editar', 'POST', 1, 3, '', '', 'Edita un tipo de almacen', 'Edita un tipo de almacen', 0),
(287, 26, 'api/almacen/tipo/buscar', 'GET', 1, 3, '', '', 'Imprime la lista de tipos de almacen', 'Imprime la lista de tipos de almacen', 0),
(288, 26, 'api/almacen/tipo/desactivar', 'POST', 1, 3, '', '', 'Elimina un tipo de almacen', 'Elimina un tipo de almacen', 0),
(289, 25, 'api/procesos/nuevo', 'POST', 1, 1, '{"nombre":"Proceso de lavado", "descripcion":"Una descripcion acertada"}', '{"status":"ok", "id_proceso":12}', 'Define un nuevo proceso y muchas cosas mas', 'Define un nuevo proceso', 0),
(310, 15, 'api/pos/mail/enviar', 'POST', 1, 1, '{\r\n}', '{\r\nstatus : "ok"\r\n}', 'Este metodo se utiliza para poder enviar un correo electronico a un tercero. ', 'Enviar un correo electronico', 0),
(311, 22, 'api/tarifa/calcular', 'GET', 1, 3, '', '', 'Calcula el precio de un producto, servicio o paquete. Se calcula un precio por tarifa activa en el sistema y al final se regresa un arreglo con las tarifas y su respectivo precio.\r\n\r\n\r\n\r\nEl precio es calculado a partir de las reglas de una tarifa.\r\n\r\n\r\n\r\nSe puede especificar una tarifa para calcular el precio del articulo solo en base a este.\r\n\r\n\r\n\r\nSi no se recibe un producto o un servicio o un paquete se devuelve un error\r\n\r\n\r\n\r\nSe sigue la jerarquia 1-id_producto,2-id_servicio,3-id_paquete por si se recibe mas de uno de estos parametros. Por ejemplo si se recibe un id_producto y un id_paquete, el id_paquete sera ignorado y se calculara solamente el precio del producto', 'Calcula el precio de un producto', 0),
(312, 22, 'api/tarifa/nueva', 'POST', 1, 1, '', '', 'Crea una nueva tarifa que le dara un precio especial a todos los productos, servicios y paquetes o solo a algunos. \r\n\r\n\r\n\r\nUna tarifa puede tener fechas de inicio y de fin que indican en que fechas se tomaran sus parametros. Si no se reciben fechas, se da por hecho que la tarifa no caduca. Si solo se recibe fecha de inicio, se toma como fecha de fin la maxima fecha permitida por MySQL (9999-12-31 23:59:59). Si solo se recibe fehca de fin, se toma como fecha de inicio la fecha actual del servidor.\r\n\r\n\r\n\r\nUna tarifa puede afectar a uno o varios productos, servicios, clasificaciones de producto, clasificaciones de servicio, unidades, y/o paquetes; cada uno con los parametros de la siguiente funcion:\r\n<pre>\r\n   Precio Final : Precio Base * (1 + porcentaje_utilidad) + utilidad_neta\r\n</pre>\r\n\r\n\r\nDonde:\r\n\r\n\r\n<pre>\r\n   Precio Base: Sera obtenido de la tarifa base de esta tarifa.\r\n\r\n   porcentaje_utilidad: porcentaje de -1 a 1 de lo que se le ganara del precio base a esta tarifa.\r\n\r\n   utilidad_neta: Ganancia neta para esta tarifa del precio base. Puede ser negativa implicando un descuento.\r\n\r\n   Precio Final: El resultado de la formula, este valor puede ser afectado directamente por el usuario mediante los parametros metodo_redondeo, margen_min y margen_max. \r\n\r\n   metodo_redondeo: Es el multiplo con el cual se redondea el Precio Base despues de aplicar el porcentaje de utilidad y antes de sumar la utilidad neta. Si se quiere que todos los productos terminen en 9.99, entonces se configura el metodo_redondeo en 10 y la utilidad_neta en -0.01.\r\n\r\n   margen_min: Es el Precio Final mínimo permitido, si despues de realizar todos los calculos, el precio final resulta menor al valor de margen_min, se sobreecribe y se toma el valor de margen_min.\r\n\r\n   margen_max: Es el Precio Final maximo permitido, si despues de realizar todos los calculos, el precio final resulta mayor al valor de margen_max, se sobreescribe y se toma el valor de margen_max.\r\n   \r\n</pre>\r\n\r\n\r\nSi no se recibe un producto, servicio, clasificacion de producto o servicio, unidad o paquete junto a estos parametros, se toma que afectara a todos los productos, servicios, clasificaciones, unidades y paquetes.\r\n\r\n\r\n\r\nSi se recibe un producto sin unidad, entonces los parametros afectan a todos los productos sin importar su unidad, si solo se recibe una unidad sin productos, es ignorada y se toma la tarifa como que afecta a todos los productos, servicios, clasificaciones, etc.\r\n\r\n\r\n\r\n<b>NOTA: Se debe de tener cuidad al configurar el margen_min y margen_max pues si estos se aplican sin especificar un producto, servicio, clasificacion de producto o servicio, o paquete, aplicaran a todos los productos, servicios y paquetes.</b>\r\n\r\n\r\n\r\nLa asignacion de una formula a algun producto, servicio, etc. requiere una secuencia, pues pueden ser afectados por mas de una formula. La secuencia indicara que formula se aplciara en lugar de otra ya almacenada.\r\n\r\n', 'Crea una nueva tarifa', 0),
(313, 22, 'api/tarifa/editar', 'POST', 1, 1, '', '', 'Edita la informacion de una tarifa. Este metodo puede cambiar las formulas de una tarifa o la vigencia de la misma. \r\n\r\n\r\n\r\nEste metodo tambien puede ponder como default esta tarifa o quitarle el default. Si se le quita el default, automaticamente se pone como default la predeterminada del sistema.\r\n\r\n\r\nSi se obtienen formulas en este metodo, se borraran todas las formulas de esta tarifa y se aplicaran las recibidas\r\n\r\n\r\n\r\nSi se cambia el tipo de tarifa, se verfica que esta tarifa no sea una default para algun rol, usuario, clasificacion de cliente o de proveedor, y pierde su default si fuera la default, poniendo como default la predetermianda del sistema.\r\n\r\n\r\n\r\nAplican todas las consideraciones de la documentacion del metodo nuevaTarifa', 'Edita la informacion de una tarifa', 0),
(314, 22, 'api/tarifa/desactivar', 'POST', 1, 1, '', '', 'Desactiva una tarifa. una tarifa no puede ser eliminada si es la default del sistema o si esta como default para algun usuario,rol,clasificacion de cliente o proveedor.', 'Desactiva una tarifa', 0),
(315, 22, 'api/tarifa/activar', 'GET', 1, 1, '', '', 'Activa una tarifa previamente eliminada.', 'Activa una tarifa previamente eliminada', 0);
INSERT INTO `metodo` (`id_metodo`, `id_clasificacion`, `nombre`, `tipo`, `sesion_valida`, `grupo`, `ejemplo_peticion`, `ejemplo_respuesta`, `descripcion`, `subtitulo`, `regresa_html`) VALUES
(316, 1, 'api/sesion/actual', 'GET', 1, 4, '', '', 'Regresa informacion sobre la sesion actual.', 'Obtener informacion de la sesion actual.', 0);

-- --------------------------------------------------------

--
-- Estructura de tabla para la tabla `proyecto`
--

CREATE TABLE IF NOT EXISTS `proyecto` (
  `id_proyecto` int(11) NOT NULL AUTO_INCREMENT,
  `nombre` varchar(100) NOT NULL COMMENT 'nombre del proyecto',
  `descripcion` varchar(260) NOT NULL COMMENT 'descricpion del proyecto',
  PRIMARY KEY (`id_proyecto`)
) ENGINE=InnoDB  DEFAULT CHARSET=utf8 COMMENT='Tabla de proyectos' AUTO_INCREMENT=4 ;

--
-- Volcar la base de datos para la tabla `proyecto`
--

INSERT INTO `proyecto` (`id_proyecto`, `nombre`, `descripcion`) VALUES
(1, 'POS', 'El legendario punto de venta transformado en ERP'),
(3, 'prueba', 'otro proyecto de prueba');

-- --------------------------------------------------------

--
-- Estructura de tabla para la tabla `respuesta`
--

CREATE TABLE IF NOT EXISTS `respuesta` (
  `id_respuesta` int(11) NOT NULL AUTO_INCREMENT,
  `id_metodo` int(11) NOT NULL,
  `nombre` varchar(100) NOT NULL,
  `descripcion` text NOT NULL,
  `tipo` varchar(30) NOT NULL,
  PRIMARY KEY (`id_respuesta`),
  KEY `id_metodo` (`id_metodo`)
) ENGINE=InnoDB  DEFAULT CHARSET=utf8 AUTO_INCREMENT=888 ;

--
-- Volcar la base de datos para la tabla `respuesta`
--

INSERT INTO `respuesta` (`id_respuesta`, `id_metodo`, `nombre`, `descripcion`, `tipo`) VALUES
(24, 17, 'en_linea', 'Arreglo de objetos que contendrán la información de las sesiones activas', 'json'),
(73, 117, 'documentos', 'Objeto que contendrá la información de los documentos.', 'json'),
(77, 125, 'estado_cuenta', 'Objeto que contendrá la información del estado de cuenta del cliente', 'json'),
(79, 129, 'id_reporte', 'Id del reporte generado', 'int'),
(80, 131, 'detalle_reporte', 'Objeto que contendrá la información del detalle.', 'json'),
(83, 134, 'Lista_servicios_cliente', 'Objeto que contendra la lista de servicios y clientes que los han comprado.', 'json'),
(93, 118, 'id_documento', 'Id del nuevo documento', 'int'),
(94, 121, 'factura', 'Objeto con la informacion de la factura', 'json'),
(95, 123, 'id_folio', 'Id de la factura generada', 'int'),
(113, 46, 'id_productos', 'Arreglo de enteros que contendrá los ids de los productos insertados.', 'json'),
(144, 72, 'id_ventas', 'Arreglo de ids generados por las inserciones de ventas si las hay', 'json'),
(145, 72, 'id_compras', 'Arreglo de ids generados por las inserciones de compras si las hay', 'json'),
(146, 133, 'Lista_productos_cliente', 'Objeto que contendrá la información de la lista.', 'json'),
(164, 98, 'carro', 'Objeto que contendra los detalles y el historial del carro', 'json'),
(168, 147, 'id_tipo_carro', 'Id autogenerado por la insercion del tipo de carro', 'int'),
(169, 149, 'id_modelo', 'Id del modelo autogenerado por la insercion', 'int'),
(170, 151, 'id_marca_carro', 'Id autogenerado por la insercion de la nueva marca', 'int'),
(261, 54, 'id_concepto_gasto', 'Id autogenerado por la inserción del nuevo gasto', 'int'),
(262, 57, 'id_concepto_ingreso', 'Id autogenerado por la creacion del nuevo concepto de ingreso', 'int'),
(272, 195, 'id_venta_arpilla', 'Id autogenerado por la insercion', 'int'),
(273, 92, 'detalle_compra_arpilla', 'Objeto que contendrá la información del detalle de la compra', 'json'),
(274, 196, 'detalle_venta_arpilla', 'Objeto que contendra los detalles de las ventas por arpilla', 'json'),
(275, 90, 'id_compra_arpilla', 'ID autogenerado por la insercion', 'int'),
(277, 198, 'detalle_compra', 'Objeto que contendra los productos con sus cantidades de esa compra', 'json'),
(282, 161, 'id_inspeccion', 'Id de la inspeccion creada', 'int'),
(283, 94, 'id_almacen', 'Id del almacen que se creo de la operacion', 'int'),
(336, 110, 'detalle_orden', 'Objeto que contendra el detalle de la orden', 'json'),
(366, 247, 'detalle_paquete', 'Informacion del detalle del paquete', 'json'),
(382, 254, 'id_billete', 'Id del billete autogenerado', 'int'),
(384, 258, 'id_moneda', 'Id de la moneda recien creada', 'int'),
(408, 264, 'unidades_equivalencia', 'Lista de unidades', 'json'),
(409, 60, 'conceptos_gasto', 'Arreglo que contendrá la información de conceptos de gasto.', 'json'),
(410, 154, 'id_ingreso', 'Id autogenerado por la insercion del ingreso', 'int'),
(414, 69, 'id_abono', 'El id autogenerado del abono de la sucursal', 'int'),
(416, 199, 'compras', 'Objeto que contendra la lista de las compras', 'json'),
(438, 81, 'id_cierre', 'Id del cierre autogenerado.', 'int'),
(441, 182, 'id_corte_caja', 'Id generado por la insercion del nuevo corte', 'int'),
(448, 266, 'permisos_roles', 'lista de permisos', 'json'),
(449, 268, 'permisos_usuario', 'Lista de usuarios con sus permisos', 'json'),
(453, 179, 'id_unidad_convertible', 'Id de la unidad convertible', 'string'),
(456, 109, 'ordenes', 'Objeto que contendrá las ordenes.', 'json'),
(457, 111, 'id_orden', 'Id de la orden que se creo.', 'int'),
(460, 246, 'paquetes', 'Lista de apquetes', 'json'),
(473, 269, 'lista_clasificaciones', 'Objeto que contendra la lista de clasificaciones', 'json'),
(480, 82, 'detalle_venta', 'Objeto que contiene el detalle de la venta.', 'json'),
(491, 33, 'id_autorizacion', 'El id de la nueva autorizacion ', 'int'),
(518, 279, 'cajas', 'Objeto que contendra la lista de cajas', 'json'),
(521, 93, 'id_consignacion', 'Id de la consignacion autogenerado por la insercion.', 'int'),
(528, 73, 'id_venta', 'Id autogenerado de la inserción de la venta.', 'int'),
(548, 16, 'forward_to', 'La url de continuación de acuerdo al id que cerró sesión.', 'string'),
(554, 74, 'id_compra_cliente', 'Id de la nueva compra', 'string'),
(555, 97, 'id_compra', 'Id autogenerado por la inserción de la compra', 'int'),
(558, 139, 'id_caja', 'Id de la caja generada por la insercion', 'int'),
(559, 76, 'detalles_sucursal', 'Si esta es una sucursal valida, detalles sucursal contiene un objeto con informacion sobre esta sucursal.', 'json'),
(561, 51, 'usuarios', 'Arreglo de objetos que contendrá la información de los usuarios del sistema', 'json'),
(562, 207, 'roles', 'Objeto que contendra la lista de los roles', 'json'),
(566, 106, 'servicios', 'Objeto que contendra la lista de servicios', 'json'),
(568, 62, 'id_gasto', 'Id generado por la inserción del nuevo gasto', 'int'),
(569, 189, 'abonos', 'Objeto que contendra la lista de abonos', 'json'),
(575, 95, 'lista_consignaciones', 'Objeto que contendra la lista de consignaciones', 'json'),
(576, 128, 'facturas', 'Objeto que contendra la lista de facturas.', 'json'),
(577, 257, 'billetes', 'Lista de billetes', 'json'),
(578, 261, 'monedas', 'Lista de monedas', 'json'),
(581, 85, 'proveedores', 'Objeto que contendra la lista de proveedores.', 'json'),
(582, 132, 'reportes', 'Objeto que contendra la lista de reportes', 'json'),
(584, 100, 'carros', 'Lista de carros con datos generales.', 'json'),
(585, 83, 'ventas', 'Objeto que contendra la lista de ventas', 'json'),
(586, 61, 'conceptos_ingreso', 'Arreglo que contendrá la información de los conceptos de ingreso', 'json'),
(591, 289, 'id_proceso', 'Identificador del proceso creado', 'int'),
(593, 15, 'auth_token', 'El token si es que fue solicitado.', 'string'),
(594, 15, 'login_succesful	', 'Si la validación del usuario es correcta.', 'bool'),
(595, 15, 'usuario_grupo', 'El grupo al que este usuario pertenece.', 'int'),
(596, 15, 'siguiente_url', 'La url a donde se debe de redirigir.', 'string'),
(600, 173, 'id_categoria', 'Id atogenerado por la insercion de la categoria', 'int'),
(601, 232, 'id_clasificacion_servicio', 'Id de la clasificacion que se creo', 'int'),
(603, 242, 'id_paquete', 'Id autogenerado por la insercion', 'int'),
(606, 107, 'id_servicio', 'Id del servicio creado', 'int'),
(632, 229, 'id_clasificacion_proveedor', 'Id de la clasificacion del proveedor', 'int'),
(634, 169, 'id_rol', 'El nuero id del rol que se ha generado.', 'int'),
(659, 43, 'existecias', 'Lista de existencias', 'json'),
(660, 36, 'autorizaciones', 'Arreglo de objetos que contendrá las autorizaciones', 'json'),
(661, 32, 'id_autorizacion', 'El id de la autorizacion recien creada', 'int'),
(670, 31, 'id_autorizacion', 'El id de la autorizacion creada', 'int'),
(671, 30, 'id_autorizacion', 'El id_autorizacion de la autorizacion recien creada.', 'int'),
(677, 39, 'solicitante', 'El id del usuario que pidio la autorizacion. <pre>{<br>            "id usuario": 24,<br>            "nombre usuario": "Juana Escobar Martinez"<br>        }</pre>', 'json'),
(678, 39, 'sucursal_origen', 'El id de la sucursal donde se inicio la peticion en caso de existir. En caso de que no aplique, vendra el valor null. <pre>{<br>            "id sucursal": 24,<br>            "nombre sucursal": "Sucursal del norte"<br>        }</pre>', 'json'),
(679, 39, 'id_autorizacion', 'El `id_autorizacion`de esta autorizacion.', 'int'),
(680, 39, 'fecha_respuesta', 'La fecha en tiempo Unix de cuando se respondio esta peticion.', 'string'),
(681, 39, 'fecha_peticion', 'La fecha en tiempo Unix de cuando se creo esta peticion.', 'string'),
(701, 157, 'id_categoria_cliente', 'El id para esta nueva categoria de cliente.', 'int'),
(728, 28, 'cliente', 'Arreglo que contendr la informacin del cliente. ', 'json'),
(744, 316, 'id_usuario', '', 'int'),
(745, 316, 'id_sucursal', 'El id_sucursal de la sucursal donde este usuario inico sesion en caso de haberlo hecho desde un mostraodr. Un gerente no tendra id_sucursal asociada a el dado que puede iniciar sesion desde cualquier lugar.', 'int'),
(746, 316, 'id_caja', '', 'int'),
(757, 86, 'id_proveedor', 'Id autogenerado por la insercin del nuevo proveedor.', 'int'),
(775, 158, 'numero_de_resultados', '', 'int'),
(776, 158, 'resultados', 'Objeto que contendra la lista de clasificaciones de cliente', 'json'),
(778, 281, 'resultados', 'Lista de clientes que clientes que satisfacen la busqueda', 'json'),
(779, 281, 'numero_de_resultados', 'Numero de registros que regreso esta busqueda', 'int'),
(785, 50, 'id_usuario', 'El nuevo identificador de este usuario.', 'int'),
(837, 135, 'id_impuesto', 'Id del impuesto insertado.', 'int'),
(838, 204, 'impuestos', 'Lista de impuestos', 'json'),
(841, 19, 'id_empresa', 'El ID autogenerado de la nueva empresa.', 'int'),
(842, 18, 'resultados', 'Arreglo de objetos que contendr las empresas de la instancia', 'json'),
(843, 18, 'numero_de_resultados', '', 'int'),
(844, 24, 'id_cliente', 'Id autogenerado del cliente que se insert', 'int'),
(845, 75, 'resultados', 'Objeto que contendra la lista de sucursales.', 'json'),
(846, 75, 'numero_de_resultados', '', 'int'),
(857, 77, 'id_sucursal', 'Id autogenerado de la sucursal que se creo.', 'int'),
(861, 312, 'id_tarifa', 'Id de la tarifa creada', 'int'),
(862, 311, 'precios', 'Arreglo de tarifas con sus respectivos precios', 'json'),
(868, 282, 'numero_de_resultados', '', 'int'),
(869, 282, 'resultados', '', 'json'),
(874, 44, 'id_producto', 'Id generado por la insercin del nuevo producto', 'int'),
(876, 194, 'id_venta', 'Id autogenerado de la nueva venta', 'int'),
(877, 89, 'id_surtido', 'Id generado por el registro de surtir', 'string'),
(878, 138, 'resultados', 'Almacenes encontrados', 'json'),
(879, 138, 'numero_de_resultados', '', 'int'),
(880, 137, 'id_almacen', 'el id recien generado', 'int'),
(882, 287, 'lista_tipos_almacen', 'Arreglo con la lista de almacenes', 'json'),
(884, 285, 'id_tipo_almacen', 'Id del tipo de almacen', 'int'),
(885, 252, 'traspasos', 'Lista de traspasos', 'json'),
(886, 248, 'id_traspaso', 'Id del traspaso autogenerado', 'int'),
(887, 165, 'id_salida', 'ID de la salida del producto', 'int');

--
-- Filtros para las tablas descargadas (dump)
--

--
-- Filtros para la tabla `argumento`
--
ALTER TABLE `argumento`
  ADD CONSTRAINT `argumento_ibfk_1` FOREIGN KEY (`id_metodo`) REFERENCES `metodo` (`id_metodo`);

--
-- Filtros para la tabla `clasificacion`
--
ALTER TABLE `clasificacion`
  ADD CONSTRAINT `clasificacion_ibfk_1` FOREIGN KEY (`id_proyecto`) REFERENCES `proyecto` (`id_proyecto`);

--
-- Filtros para la tabla `httptesting_paquete_de_pruebas`
--
ALTER TABLE `httptesting_paquete_de_pruebas`
  ADD CONSTRAINT `httptesting_paquete_de_pruebas_ibfk_1` FOREIGN KEY (`id_proyecto`) REFERENCES `proyecto` (`id_proyecto`);

--
-- Filtros para la tabla `metodo`
--
ALTER TABLE `metodo`
  ADD CONSTRAINT `metodo_ibfk_1` FOREIGN KEY (`id_clasificacion`) REFERENCES `clasificacion` (`id_clasificacion`);

--
-- Filtros para la tabla `respuesta`
--
ALTER TABLE `respuesta`
  ADD CONSTRAINT `respuesta_ibfk_1` FOREIGN KEY (`id_metodo`) REFERENCES `metodo` (`id_metodo`);
